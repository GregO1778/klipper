# Robert Jaroszewicz <mediagott1977@googlemail.com>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-07-03 11:20+0000\n"
"Last-Translator: Robert Jaroszewicz <mediagott1977@googlemail.com>\n"
"Language-Team: Polish <https://hosted.weblate.org/projects/klipper/canbus_protocol/pl/>\n"
"Language: pl\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
"X-Generator: Weblate 4.13.1-dev\n"

msgid "Micro-controller id assignment"
msgstr "Przypisanie id mikrokontrolera"

msgid ""
"Klipper uses only CAN 2.0A standard size CAN bus packets, which are limited "
"to 8 data bytes and an 11-bit CAN bus identifier. In order to support "
"efficient communication, each micro-controller is assigned at run-time a "
"unique 1-byte CAN bus nodeid (`canbus_nodeid`) for general Klipper command "
"and response traffic. Klipper command messages going from host to micro-"
"controller use the CAN bus id of `canbus_nodeid * 2 + 256`, while Klipper "
"response messages from micro-controller to host use `canbus_nodeid * 2 + 256"
" + 1`."
msgstr ""
"Klipper używa tylko pakietów magistrali CAN 2.0A o standardowym rozmiarze, "
"które są ograniczone do 8 bajtów danych i 11-bitowego identyfikatora "
"magistrali CAN. W celu wspierania wydajnej komunikacji, każdy mikrokontroler"
" ma przypisany w czasie pracy unikalny 1-bajtowy identyfikator węzła "
"magistrali CAN (`canbus_nodeid`) dla ogólnego ruchu poleceń i odpowiedzi "
"Klippera. Wiadomości komend Klippera idące od hosta do mikrokontrolera "
"używają id magistrali CAN `canbus_nodeid * 2 + 256`, podczas gdy wiadomości "
"odpowiedzi Klippera od mikrokontrolera do hosta używają `canbus_nodeid * 2 +"
" 256 + 1`."

msgid ""
"Each micro-controller has a factory assigned unique chip identifier that is "
"used during id assignment. This identifier can exceed the length of one CAN "
"packet, so a hash function is used to generate a unique 6-byte id "
"(`canbus_uuid`) from the factory id."
msgstr ""
"Każdy mikrokontroler ma fabrycznie przypisany unikalny identyfikator układu,"
" który jest używany podczas przypisywania id. Ten identyfikator może "
"przekroczyć długość jednego pakietu CAN, więc funkcja hashująca jest używana"
" do generowania unikalnego 6-bajtowego id (`canbus_uuid`) z fabrycznego id."

msgid "Admin messages"
msgstr ""

msgid ""
"Admin messages are used for id assignment. Admin messages sent from host to "
"micro-controller use the CAN bus id `0x3f0` and messages sent from micro-"
"controller to host use the CAN bus id `0x3f1`. All micro-controllers listen "
"to messages on id `0x3f0`; that id can be thought of as a \"broadcast "
"address\"."
msgstr ""

msgid "CMD_QUERY_UNASSIGNED message"
msgstr ""

msgid ""
"This command queries all micro-controllers that have not yet been assigned a"
" `canbus_nodeid`. Unassigned micro-controllers will respond with a "
"RESP_NEED_NODEID response message."
msgstr ""

msgid ""
"The CMD_QUERY_UNASSIGNED message format is: `<1-byte message_id = 0x00>`"
msgstr ""

msgid ""
"This command assigns a `canbus_nodeid` to the micro-controller with a given "
"`canbus_uuid`."
msgstr ""

msgid "RESP_NEED_NODEID message"
msgstr ""

msgid "Data Packets"
msgstr ""

msgid ""
"The packet data in messages using the node's receive CAN bus id "
"(`canbus_nodeid * 2 + 256`) are simply appended to a buffer, and when a "
"complete [mcu protocol message](Protocol.md) is found its contents are "
"parsed and processed. The data is treated as a byte stream - there is no "
"requirement for the start of a Klipper message block to align with the start"
" of a CAN bus packet."
msgstr ""

msgid ""
"Similarly, mcu protocol message responses are sent from micro-controller to "
"host by copying the message data into one or more packets with the node's "
"transmit CAN bus id (`canbus_nodeid * 2 + 256 + 1`)."
msgstr ""

#: docs/CANBUS_protocol.md:block 1 (header)
msgid "CANBUS protocol"
msgstr ""

#: docs/CANBUS_protocol.md:block 2 (paragraph)
msgid ""
"This document describes the protocol Klipper uses to communicate over [CAN "
"bus](https://en.wikipedia.org/wiki/CAN_bus). See <CANBUS.md> for information"
" on configuring Klipper with CAN bus."
msgstr ""

#: docs/CANBUS_protocol.md:block 11 (header)
msgid "CMD_SET_KLIPPER_NODEID message"
msgstr ""

#: docs/CANBUS_protocol.md:block 13 (paragraph)
msgid ""
"The CMD_SET_KLIPPER_NODEID message format is: `<1-byte message_id = "
"0x01><6-byte canbus_uuid><1-byte canbus_nodeid>`"
msgstr ""

#: docs/CANBUS_protocol.md:block 15 (paragraph)
msgid ""
"The RESP_NEED_NODEID message format is: `<1-byte message_id = 0x20><6-byte "
"canbus_uuid><1-byte set_klipper_nodeid = 0x01>`"
msgstr ""

#: docs/CANBUS_protocol.md:block 17 (paragraph)
msgid ""
"A micro-controller that has been assigned a nodeid via the "
"CMD_SET_KLIPPER_NODEID command can send and receive data packets."
msgstr ""

#~ msgid "CMD_SET_NODEID message"
#~ msgstr ""

#~ msgid ""
#~ "The CMD_SET_NODEID message format is: `<1-byte message_id = 0x01><6-byte "
#~ "canbus_uuid><1-byte canbus_nodeid>`"
#~ msgstr ""

#~ msgid ""
#~ "The RESP_NEED_NODEID message format is: `<1-byte message_id = 0x20><6-byte "
#~ "canbus_uuid>`"
#~ msgstr ""

#~ msgid ""
#~ "A micro-controller that has been assigned a nodeid via the CMD_SET_NODEID "
#~ "command can send and receive data packets."
#~ msgstr ""

#~ msgid ""
#~ "This document describes the protocol Klipper uses to communicate over [CAN "
#~ "bus](https://en.wikipedia.org/wiki/CAN_bus). See [CANBUS.md](CANBUS.md) for "
#~ "information on configuring Klipper with CAN bus."
#~ msgstr ""
