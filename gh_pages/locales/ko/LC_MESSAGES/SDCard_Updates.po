# brian park <gouache95@gmail.com>, 2021.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2021-08-24 10:33+0000\n"
"Last-Translator: brian park <gouache95@gmail.com>\n"
"Language-Team: Korean <https://hosted.weblate.org/projects/klipper/sdcard_updates/ko/>\n"
"Language: ko\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.8.1-dev\n"

msgid ""
"Many of today's popular controller boards ship with a bootloader capable of "
"updating firmware via SD Card. While this is convenient in many "
"circumstances, these bootloaders typically provide no other way to update "
"firmware. This can be a nuisance if your board is mounted in a location that"
" is difficult to access or if you need to update firmware often. After "
"Klipper has been initially flashed to a controller it is possible to "
"transfer new firmware to the SD Card and initiate the flashing procedure via"
" ssh."
msgstr ""
"오늘날 널리 사용되는 많은 컨트롤러 보드에는 SD 카드를 통해 펌웨어를 업데이트할 수 있는 부트로더가 함께 제공됩니다. 이는 많은 "
"상황에서 편리하지만 일반적으로 이러한 부트로더는 펌웨어를 업데이트하는 다른 방법을 제공하지 않습니다. 보드가 접근하기 어려운 위치에 "
"장착되어 있거나 펌웨어를 자주 업데이트해야 하는 경우 이는 골칫거리가 될 수 있습니다. Klipper가 처음에 컨트롤러에 플래시된 후 새"
" 펌웨어를 SD 카드로 전송하고 ssh를 통해 flashing 절차를 시작할 수 있습니다."

msgid "Typical Upgrade Procedure"
msgstr "일반적인 업그레이드 절차"

msgid ""
"The procedure for updating MCU firmware using the SD Card is similar to that"
" of other methods. Instead of using `make flash` it is necessary to run a "
"helper script, `flash-sdcard.sh`. Updating a BigTreeTech SKR 1.3 might look "
"like the following:"
msgstr ""
"SD 카드를 사용하여 MCU 펌웨어를 업데이트하는 절차는 다른 방법과 유사합니다. `make flash`를 사용하는 대신 `flash-"
"sdcard.sh` 도우미 스크립트를 실행해야 합니다. BigTreeTech SKR 1.3 업데이트는 다음과 같습니다:"

msgid ""
"It is up to the user to determine the device location and board name. If a "
"user needs to flash multiple boards, `flash-sdcard.sh` (or `make flash` if "
"appropriate) should be run for each board prior to restarting the Klipper "
"service."
msgstr ""
"장치 위치와 보드 이름을 결정하는 것은 사용자의 몫입니다. 사용자가 여러 보드를 플래시해야 하는 경우 Klipper 서비스를 다시 "
"시작하기 전에 각 보드에 대해 `flash-sdcard.sh`(또는 적절한 경우 `make flash')를 실행해야 합니다."

msgid "Supported boards can be listed with the following command:"
msgstr "지원되는 보드는 다음 명령으로 나열할 수 있습니다:"

msgid ""
"If you do not see your board listed it may be necessary to add a new board "
"definition as [described below](#board-definitions)."
msgstr "보드가 나열되지 않으면 [아래 설명](#board-definitions)과 같이 새 보드 정의를 추가해야 할 수 있습니다."

msgid "Advanced Usage"
msgstr "고급 사용법"

msgid ""
"The above commands assume that your MCU connects at the default baud rate of"
" 250000 and the firmware is located at `~/klipper/out/klipper.bin`. The "
"`flash-sdcard.sh` script provides options for changing these defaults. All "
"options can be viewed by the help screen:"
msgstr ""
"위의 명령은 MCU가 기본 전송 속도 250000으로 연결되고 펌웨어가 `~/klipper/out/klipper.bin`에 있다고 "
"가정합니다. `flash-sdcard.sh` 스크립트는 이러한 기본값을 변경하기 위한 옵션을 제공합니다. 모든 옵션은 도움말 화면에서 볼"
" 수 있습니다:"

msgid ""
"If your board is flashed with firmware that connects at a custom baud rate "
"it is possible to upgrade by specifying the `-b` option:"
msgstr "보드가 사용자 정의 전송 속도로 연결되는 펌웨어로 플래시되면 `-b` 옵션을 지정하여 업그레이드할 수 있습니다:"

msgid ""
"If you wish to flash a build of Klipper located somewhere other than the "
"default location it can be done by specifying the `-f` option:"
msgstr "기본 위치가 아닌 다른 위치에 있는 Klipper 빌드를 플래시하려면 `-f` 옵션을 지정하여 수행할 수 있습니다:"

msgid ""
"Note that when upgrading a MKS Robin E3 it is not necessary to manually run "
"`update_mks_robin.py` and supply the resulting binary to `flash-sdcard.sh`. "
"This procedure is automated during the upload process."
msgstr ""
"MKS Robin E3를 업그레이드할 때 `update_mks_robin.py`를 수동으로 실행하고 결과 바이너리를 `flash-"
"sdcard.sh`에 제공할 필요가 없습니다. 이 절차는 업로드 과정에서 자동화됩니다."

msgid "Caveats"
msgstr "주의 사항"

msgid ""
"As mentioned in the introduction, this method only works for upgrading "
"firmware. The initial flashing procedure must be done manually per the "
"instructions that apply to your controller board."
msgstr ""
"소개에서 언급했듯이 이 방법은 펌웨어 업그레이드에만 적용됩니다. 초기 깜박임 절차는 컨트롤러 보드에 적용되는 지침에 따라 수동으로 "
"수행해야 합니다."

msgid ""
"While it is possible to flash a build that changes the Serial Baud or "
"connection interface (ie: from USB to UART), verification will always fail "
"as the script will be unable to reconnect to the MCU to verify the current "
"version."
msgstr ""
"직렬 전송 또는 연결 인터페이스를 변경하는 빌드를 플래시할 수 있지만 (예: USB에서 UART로) 스크립트가 현재 버전을 확인하기 위해"
" MCU에 다시 연결할 수 없기 때문에 항상 확인이 실패합니다."

msgid "Board Definitions"
msgstr "보드 정의"

msgid ""
"Most common boards should be available, however it is possible to add a new "
"board definition if necessary. Board definitions are located in "
"`~/klipper/scripts/spi_flash/board_defs.py`. The definitions are stored in "
"dictionary, for example:"
msgstr ""
"대부분의 공통 보드를 사용할 수 있어야 하지만 필요한 경우 새 보드 정의를 추가할 수 있습니다. 보드 정의는 "
"`~/klipper/scripts/spi_flash/board_defs.py`에 있습니다. 정의는 사전에 저장됩니다. 예를 들면 다음과 "
"같습니다:"

msgid "The following fields may be specified:"
msgstr "다음 필드를 지정할 수 있습니다:"

msgid ""
"`mcu`: The mcu type. This can be retrevied after configuring the build via "
"`make menuconfig` by running `cat .config | grep CONFIG_MCU`. This field is "
"required."
msgstr ""
"`mcu`: MCU 유형입니다. 이것은 `cat .config | grep CONFIG_MCU` 실행하여 `make "
"menuconfig`로 그 빌드를 구성한 후 복구할 수 있습니다. 이 필드는 필수입니다."

msgid ""
"`spi_bus`: The SPI bus connected to the SD Card. This should be retreived "
"from the board's schematic. This field is required."
msgstr "`spi_bus`: SD 카드에 연결된 SPI 버스입니다. 이것은 보드의 회로도에서 가져와야 합니다. 이 필드는 필수입니다."

msgid ""
"`cs_pin`: The Chip Select Pin connected to the SD Card. This should be "
"retreived from the board schematic. This field is required."
msgstr "`cs_pin`: SD 카드에 연결된 칩 선택 핀입니다. 이것은 보드 회로도에서 검색해야 합니다. 이 필드는 필수입니다."

msgid ""
"`firmware_path`: The path on the SD Card where firmware should be "
"transferred. The default is `firmware.bin`."
msgstr "`firmware_path`: 펌웨어가 전송되어야 하는 SD 카드의 경로입니다. 기본값은 'firmware.bin'입니다."

msgid ""
"`spi_pins`: This should be 3 comma separated pins that are connected to the "
"SD Card in the format of `miso,mosi,sclk`."
msgstr "`spi_pins`: `miso,mosi,sclk` 형식으로 SD 카드에 연결된 3개의 쉼표로 구분된 핀이어야 합니다."

msgid ""
"Prior to creating a new board definition one should check to see if an "
"existing board definition meets the criteria necessary for the new board. If"
" this is the case, a `BOARD_ALIAS` may be specified. For example, the "
"following alias may be added to specify `my-new-board` as an alias for "
"`generic-lpc1768`:"
msgstr ""
"새 보드 정의를 만들기 전에 기존 보드 정의가 새 보드에 필요한 기준을 충족하는지 확인해야 합니다. 이 경우 `BOARD_ALIAS`를 "
"지정할 수 있습니다. 예를 들어 다음 별칭을 추가하여 `my-new-board`를 `generic-lpc1768`의 별칭으로 지정할 수 "
"있습니다:"

msgid ""
"If you need a new board definition and you are uncomfortable with the "
"procedure outlined above it is recommended that you request one in the "
"[Klipper Community Discord](Contact.md#discord)."
msgstr ""
"새로운 보드 정의가 필요하고 위에 설명된 절차가 불편하시다면 [Klipper Community "
"Discord](Contact.md#discord)에서 요청하는 것이 좋습니다."

msgid ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-skr-v1.3\n"
"sudo service klipper start\n"
msgstr ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-skr-v1.3\n"
"sudo service klipper start\n"

msgid "./scripts/flash-sdcard.sh -l\n"
msgstr "./scripts/flash-sdcard.sh -l\n"

msgid "./scripts/flash-sdcard.sh -b 115200 /dev/ttyAMA0 btt-skr-v1.3\n"
msgstr "./scripts/flash-sdcard.sh -b 115200 /dev/ttyAMA0 btt-skr-v1.3\n"

msgid ""
"./scripts/flash-sdcard.sh -f ~/downloads/klipper.bin /dev/ttyAMA0 btt-"
"skr-v1.3\n"
msgstr ""
"./scripts/flash-sdcard.sh -f ~/downloads/klipper.bin /dev/ttyAMA0 btt-"
"skr-v1.3\n"

msgid ""
"BOARD_DEFS = {\n"
"    'generic-lpc1768': {\n"
"        'mcu': \"lpc1768\",\n"
"        'spi_bus': \"ssp1\",\n"
"        \"cs_pin\": \"P0.6\"\n"
"    },\n"
"    ...<further definitions>\n"
"}\n"
msgstr ""
"BOARD_DEFS = {\n"
"    'generic-lpc1768': {\n"
"        'mcu': \"lpc1768\",\n"
"        'spi_bus': \"ssp1\",\n"
"        \"cs_pin\": \"P0.6\"\n"
"    },\n"
"    ...<further definitions>\n"
"}\n"

msgid ""
"BOARD_ALIASES = {\n"
"    ...<previous aliases>,\n"
"    'my-new-board': BOARD_DEFS['generic-lpc1768'],\n"
"}\n"
msgstr ""
"BOARD_ALIASES = {\n"
"    ...<previous aliases>,\n"
"    'my-new-board': BOARD_DEFS['generic-lpc1768'],\n"
"}\n"

#: docs/SDCard_Updates.md:block 1 (header)
msgid "SDCard updates"
msgstr "SDCard updates"

#: docs/SDCard_Updates.md:block 12 (code)
msgid ""
"./scripts/flash-sdcard.sh -h\n"
"SD Card upload utility for Klipper\n"
"\n"
"usage: flash_sdcard.sh [-h] [-l] [-c] [-b <baud>] [-f <firmware>]\n"
"                       <device> <board>\n"
"\n"
"positional arguments:\n"
"  <device>        device serial port\n"
"  <board>         board type\n"
"\n"
"optional arguments:\n"
"  -h              show this message\n"
"  -l              list available boards\n"
"  -c              run flash check/verify only (skip upload)\n"
"  -b <baud>       serial baud rate (default is 250000)\n"
"  -f <firmware>   path to klipper.bin\n"
msgstr ""

#: docs/SDCard_Updates.md:block 18 (paragraph)
msgid ""
"The `-c` option is used to perform a check or verify-only operation to test "
"if the board is running the specified firmware correctly. This option is "
"primarily intended for cases where a manual power-cycle is necessary to "
"complete the flashing procedure, such as with bootloaders that use SDIO mode"
" instead of SPI to access their SD Cards. (See Caveats below) But, it can "
"also be used anytime to verify if the code flashed into the board matches "
"the version in your build folder on any supported board."
msgstr ""

#: docs/SDCard_Updates.md:block 20 (unordered list)
msgid ""
"Only boards that use SPI for SD Card communication are supported. Boards "
"that use SDIO, such as the Flymaker Flyboard and MKS Robin Nano V1/V2, will "
"not work in SDIO mode. However, it's usually possible to flash such boards "
"using Software SPI mode instead. But if the board's bootloader only uses "
"SDIO mode to access the SD Card, a power-cycle of the board and SD Card will"
" be necessary so that the mode can switch from SPI back to SDIO to complete "
"reflashing. Such boards should be defined with `skip_verify` enabled to skip"
" the verify step immediately after flashing. Then after the manual power-"
"cycle, you can rerun the exact same `./scripts/flash-sdcard.sh` command, but"
" add the `-c` option to complete the check/verify operation. See [Flashing "
"Boards that use SDIO](#flashing-boards-that-use-sdio) for examples."
msgstr ""

#: docs/SDCard_Updates.md:block 25 (unordered list)
msgid ""
"`current_firmware_path`: The path on the SD Card where the renamed firmware "
"file is located after a successful flash. The default is `firmware.cur`."
msgstr ""

#: docs/SDCard_Updates.md:block 25 (unordered list)
msgid ""
"`skip_verify`: This defines a boolean value which tells the scripts to skip "
"the firmware verification step during the flashing process. The default is "
"`False`. It can be set to `True` for boards that require a manual power-"
"cycle to complete flashing. To verify the firmware afterward, run the script"
" again with the `-c` option to perform the verification step. [See caveats "
"with SDIO cards](#caveats)"
msgstr ""

#: docs/SDCard_Updates.md:block 26 (paragraph)
msgid ""
"If software SPI is required, the `spi_bus` field should be set to `swspi` "
"and the following additional field should be specified:"
msgstr ""

#: docs/SDCard_Updates.md:block 28 (paragraph)
msgid ""
"It should be exceedingly rare that Software SPI is necessary, typically only"
" boards with design errors or boards that normally only support SDIO mode "
"for their SD Card will require it. The `btt-skr-pro` board definition "
"provides an example of the former, and the `btt-octopus-f446-v1` board "
"definition provides an example of the latter."
msgstr ""

#: docs/SDCard_Updates.md:block 32 (header)
msgid "Flashing Boards that use SDIO"
msgstr ""

#: docs/SDCard_Updates.md:block 33 (paragraph)
msgid ""
"[As mentioned in the Caveats](#caveats), boards whose bootloader uses SDIO "
"mode to access their SD Card require a power-cycle of the board, and "
"specifically the SD Card itself, in order to switch from the SPI Mode used "
"while writing the file to the SD Card back to SDIO mode for the bootloader "
"to flash it into the board. These board definitions will use the "
"`skip_verify` flag, which tells the flashing tool to stop after writing the "
"firmware to the SD Card so that the board can be manually power-cycled and "
"the verification step deferred until that's complete."
msgstr ""

#: docs/SDCard_Updates.md:block 34 (paragraph)
msgid ""
"There are two scenarios -- one with the RPi Host running on a separate power"
" supply and the other when the RPi Host is running on the same power supply "
"as the main board being flashed. The difference is whether or not it's "
"necessary to also shutdown the RPi and then `ssh` again after the flashing "
"is complete in order to do the verification step, or if the verification can"
" be done immediately. Here's examples of the two scenarios:"
msgstr ""

#: docs/SDCard_Updates.md:block 35 (header)
msgid "SDIO Programming with RPi on Separate Power Supply"
msgstr ""

#: docs/SDCard_Updates.md:block 36 (paragraph)
msgid ""
"A typical session with the RPi on a Separate Power Supply looks like the "
"following. You will, of course, need to use your proper device path and "
"board name:"
msgstr ""

#: docs/SDCard_Updates.md:block 37 (code)
msgid ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-octopus-f446-v1\n"
"[[[manually power-cycle the printer board here when instructed]]]\n"
"./scripts/flash-sdcard.sh -c /dev/ttyACM0 btt-octopus-f446-v1\n"
"sudo service klipper start\n"
msgstr ""

#: docs/SDCard_Updates.md:block 38 (header)
msgid "SDIO Programming with RPi on the Same Power Supply"
msgstr ""

#: docs/SDCard_Updates.md:block 39 (paragraph)
msgid ""
"A typical session with the RPi on the Same Power Supply looks like the "
"following. You will, of course, need to use your proper device path and "
"board name:"
msgstr ""

#: docs/SDCard_Updates.md:block 40 (code)
msgid ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-octopus-f446-v1\n"
"sudo shutdown -h now\n"
"[[[wait for the RPi to shutdown, then power-cycle and ssh again to the RPi when it restarts]]]\n"
"sudo service klipper stop\n"
"cd ~/klipper\n"
"./scripts/flash-sdcard.sh -c /dev/ttyACM0 btt-octopus-f446-v1\n"
"sudo service klipper start\n"
msgstr ""

#: docs/SDCard_Updates.md:block 41 (paragraph)
msgid ""
"In this case, since the RPi Host is being restarted, which will restart the "
"`klipper` service, it's necessary to stop `klipper` again before doing the "
"verification step and restart it after verification is complete."
msgstr ""

#: docs/SDCard_Updates.md:block 42 (header)
msgid "SDIO to SPI Pin Mapping"
msgstr ""

#: docs/SDCard_Updates.md:block 43 (paragraph)
msgid ""
"If your board's schematic uses SDIO for its SD Card, you can map the pins as"
" described in the chart below to determine the compatible Software SPI pins "
"to assign in the `board_defs.py` file:"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "SD Card Pin"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "Micro SD Card Pin"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "SDIO Pin Name"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "SPI Pin Name"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "9"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "1"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "DATA2"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "None (PU)*"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "2"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "CD/DATA3"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "CS"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "3"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "CMD"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "MOSI"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "4"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "+3.3V (VDD)"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "5"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "CLK"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "SCLK"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "6"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "GND (VSS)"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "7"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "DATA0"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "MISO"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "8"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "DATA1"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "N/A"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "Card Detect (CD)"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "10"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "GND"
msgstr ""

#: docs/SDCard_Updates.md:block 45 (paragraph)
msgid "\\* None (PU) indicates an unused pin with a pull-up resistor"
msgstr ""

#~ msgid ""
#~ "Only boards that use SPI for SD Card communication are supported. Boards "
#~ "that use SDIO, such as the Flymaker Flyboard and MKS Robin Nano V1/V2, will "
#~ "not work."
#~ msgstr ""
#~ "SD 카드 통신을 위해 SPI를 사용하는 보드만 지원됩니다. Flymaker Flyboard 및 MKS Robin Nano V1/V2와 "
#~ "같이 SDIO를 사용하는 보드는 작동하지 않습니다."

#~ msgid ""
#~ "`current_firmware_path` The path on the SD Card where the renamed firmware "
#~ "file is located after a successful flash. The default is `firmware.cur`."
#~ msgstr ""
#~ "`current_firmware_path` 플래시 성공 후 이름이 변경된 펌웨어 파일이 있는 SD 카드의 경로입니다. 기본값은 "
#~ "'firmware.cur'입니다."

#~ msgid ""
#~ "If software SPI is required the `spi_bus` field should be set to `swspi` and"
#~ " the following additional field should be specified:"
#~ msgstr "소프트웨어 SPI가 필요한 경우 `spi_bus` 필드를 `swspi`로 설정하고 다음 추가 필드를 지정해야 합니다:"

#~ msgid ""
#~ "It should be exceedingly rare that Software SPI is necessary, typically only"
#~ " boards with design errors will require it. The `btt-skr-pro` board "
#~ "definition provides an example."
#~ msgstr ""
#~ "소프트웨어 SPI가 필요한 경우는 극히 드물며 일반적으로 설계 오류가 있는 보드에만 필요합니다. `btt-skr-pro` 보드 정의는 "
#~ "예를 제공합니다."

#~ msgid ""
#~ "./scripts/flash-sdcard.sh -h\n"
#~ "SD Card upload utility for Klipper\n"
#~ "\n"
#~ "usage: flash_sdcard.sh [-h] [-l] [-b <baud>] [-f <firmware>]\n"
#~ "                       <device> <board>\n"
#~ "\n"
#~ "positional arguments:\n"
#~ "  <device>        device serial port\n"
#~ "  <board>         board type\n"
#~ "\n"
#~ "optional arguments:\n"
#~ "  -h              show this message\n"
#~ "  -l              list available boards\n"
#~ "  -b <baud>       serial baud rate (default is 250000)\n"
#~ "  -f <firmware>   path to klipper.bin\n"
#~ msgstr ""
#~ "./scripts/flash-sdcard.sh -h\n"
#~ "SD Card upload utility for Klipper\n"
#~ "\n"
#~ "usage: flash_sdcard.sh [-h] [-l] [-b <baud>] [-f <firmware>]\n"
#~ "                       <device> <board>\n"
#~ "\n"
#~ "positional arguments:\n"
#~ "  <device>        device serial port\n"
#~ "  <board>         board type\n"
#~ "\n"
#~ "optional arguments:\n"
#~ "  -h              show this message\n"
#~ "  -l              list available boards\n"
#~ "  -b <baud>       serial baud rate (default is 250000)\n"
#~ "  -f <firmware>   path to klipper.bin\n"
