# brian park <gouache95@gmail.com>, 2021.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2021-08-25 12:33+0000\n"
"Last-Translator: brian park <gouache95@gmail.com>\n"
"Language-Team: Korean <https://hosted.weblate.org/projects/klipper/tsl1401cl_filament_width_sensor/ko/>\n"
"Language: ko\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.8.1-dev\n"

msgid "How does it work?"
msgstr "어떻게 동작하나요?"

msgid ""
"Sensor generates analog output based on calculated filament width. Output "
"voltage always equals to detected filament width (Ex. 1.65v, 1.70v, 3.0v). "
"Host module monitors voltage changes and adjusts extrusion multiplier."
msgstr ""
"센서는 계산된 필라멘트 폭을 기반으로 아날로그 출력을 생성합니다. 출력 전압은 항상 감지된 필라멘트 너비와 동일합니다(예: 1.65v, "
"1.70v, 3.0v). 호스트 모듈은 전압 변화를 모니터링하고 압출 배율을 조정합니다."

msgid ""
"Sensor readings done with 10 mm intervals by default. If necessary you are "
"free to change this setting by editing ***MEASUREMENT_INTERVAL_MM*** "
"parameter in **filament_width_sensor.py** file."
msgstr ""
"센서 판독은 기본적으로 10mm 간격으로 수행됩니다. 필요한 경우 **filament_width_sensor.py** 파일의 "
"***MEASUREMENT_INTERVAL_MM*** 매개변수를 편집하여 이 설정을 자유롭게 변경할 수 있습니다."

#: docs/TSL1401CL_Filament_Width_Sensor.md:block 1 (header)
msgid "TSL1401CL filament width sensor"
msgstr "TSL1401CL 필라멘트 너비 센서"

#: docs/TSL1401CL_Filament_Width_Sensor.md:block 2 (paragraph)
msgid ""
"This document describes Filament Width Sensor host module. Hardware used for"
" developing this host module is based on TSL1401CL linear sensor array but "
"it can work with any sensor array that has analog output. You can find "
"designs at "
"[Thingiverse](https://www.thingiverse.com/search?q=filament%20width%20sensor)."
msgstr ""

#: docs/TSL1401CL_Filament_Width_Sensor.md:block 6 (header)
msgid "Note:"
msgstr ""

#: docs/TSL1401CL_Filament_Width_Sensor.md:block 3 (paragraph)
msgid ""
"To use a sensor array as a filament width sensor, read [Config "
"Reference](Config_Reference.md#tsl1401cl_filament_width_sensor) and [G-Code "
"documentation](G-Codes.md#hall_filament_width_sensor)."
msgstr ""

#~ msgid ""
#~ "To use a sensor array as a filament width sensor, read [Config "
#~ "Reference](Config_Reference.md#tsl1401cl_filament_width_sensor) and [G-Code "
#~ "documentation](G-Codes.md#Filament_Width_Sensor_Commands)."
#~ msgstr ""

#~ msgid ""
#~ "This document describes Filament Width Sensor host module. Hardware used for"
#~ " developing this host module is based on TSL1401CL linear sensor array but "
#~ "it can work with any sensor array that has analog output. You can find "
#~ "designs at "
#~ "[thingiverse.com](https://www.thingiverse.com/search?q=filament%20width%20sensor)"
#~ msgstr ""
#~ "이 문서에서는 필라멘트 폭 센서 호스트 모듈에 대해 설명합니다. 이 호스트 모듈을 개발하는 데 사용되는 하드웨어는 TSL1401CL 선형"
#~ " 센서 어레이를 기반으로 하지만 아날로그 출력이 있는 모든 센서 어레이와 함께 작동할 수 있습니다. 디자인은 "
#~ "[thingiverse.com](https://www.thingiverse.com/search?q=filament%20width%20sensor)에서"
#~ " 확인하실 수 있습니다"

#~ msgid "Configuration"
#~ msgstr "설정"

#~ msgid "Commands"
#~ msgstr "명령어"

#~ msgid ""
#~ "**QUERY_FILAMENT_WIDTH** - Return the current measured filament width as "
#~ "result **RESET_FILAMENT_WIDTH_SENSOR** – Clear all sensor readings. Can be "
#~ "used after filament change. **DISABLE_FILAMENT_WIDTH_SENSOR** – Turn off the"
#~ " filament width sensor and stop using it to do flow control "
#~ "**ENABLE_FILAMENT_WIDTH_SENSOR** - Turn on the filament width sensor and "
#~ "start using it to do flow control"
#~ msgstr ""
#~ "**QUERY_FILAMENT_WIDTH** - 현재 측정된 필라멘트 너비를 결과로 반환 **\n"
#~ "RESET_FILAMENT_WIDTH_SENSOR** – 모든 센서 판독값을 지웁니다. 필라멘트 교체 후 사용 가능합니다. **\n"
#~ "DISABLE_FILAMENT_WIDTH_SENSOR** – 필라멘트 폭 센서를 끄고 흐름 제어를 위해 사용을 중지하십시오. **\n"
#~ "ENABLE_FILAMENT_WIDTH_SENSOR** - 필라멘트 폭 센서를 켜고 흐름 제어를 수행하는 데 사용하기 시작합니다"

#~ msgid ""
#~ "[tsl1401cl_filament_width_sensor]\n"
#~ "pin: analog5\n"
#~ "# Analog input pin for sensor output on Ramps board\n"
#~ "\n"
#~ "default_nominal_filament_diameter: 1.75\n"
#~ "# This parameter is in millimeters (mm)\n"
#~ "\n"
#~ "max_difference: 0.2\n"
#~ "#  Maximum allowed filament diameter difference in millimeters (mm)\n"
#~ "#  If difference between nominal filament diameter and sensor output is more\n"
#~ "#  than +- max_difference, extrusion multiplier set back to %100\n"
#~ "\n"
#~ "measurement_delay 100\n"
#~ "#  The distance from sensor to the melting chamber/hot-end in millimeters (mm).\n"
#~ "#  The filament between the sensor and the hot-end will be treated as the default_nominal_filament_diameter.\n"
#~ "#  Host module works with FIFO logic. It keeps each sensor value and position in\n"
#~ "#  an array and POP them back in correct position.\n"
#~ msgstr ""
#~ "[tsl1401cl_filament_width_sensor]\n"
#~ "pin: analog5\n"
#~ "# Analog input pin for sensor output on Ramps board\n"
#~ "\n"
#~ "default_nominal_filament_diameter: 1.75\n"
#~ "# This parameter is in millimeters (mm)\n"
#~ "\n"
#~ "max_difference: 0.2\n"
#~ "#  Maximum allowed filament diameter difference in millimeters (mm)\n"
#~ "#  If difference between nominal filament diameter and sensor output is more\n"
#~ "#  than +- max_difference, extrusion multiplier set back to %100\n"
#~ "\n"
#~ "measurement_delay 100\n"
#~ "#  The distance from sensor to the melting chamber/hot-end in millimeters (mm).\n"
#~ "#  The filament between the sensor and the hot-end will be treated as the default_nominal_filament_diameter.\n"
#~ "#  Host module works with FIFO logic. It keeps each sensor value and position in\n"
#~ "#  an array and POP them back in correct position.\n"
