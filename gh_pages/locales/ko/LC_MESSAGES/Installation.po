# brian park <gouache95@gmail.com>, 2021.
# 이정희 <daemul72@gmail.com>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-03-15 10:56+0000\n"
"Last-Translator: 이정희 <daemul72@gmail.com>\n"
"Language-Team: Korean <https://hosted.weblate.org/projects/klipper/installation/ko/>\n"
"Language: ko\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.12-dev\n"

msgid ""
"These instructions assume the software will run on a Raspberry Pi computer "
"in conjunction with OctoPrint. It is recommended that a Raspberry Pi 2, 3, "
"or 4 computer be used as the host machine (see the [FAQ](FAQ.md#can-i-run-"
"klipper-on-something-other-than-a-raspberry-pi-3) for other machines)."
msgstr ""
"이 지침은 소프트웨어가 OctoPrint와 함께 Raspberry Pi 컴퓨터에서 실행된다고 가정합니다. Raspberry Pi 2, 3"
" 또는 4 컴퓨터를 호스트 컴퓨터로 사용하는 것이 좋습니다(다른 기기에 대해서는 [FAQ](FAQ.md#can-i-run-klipper-"
"on-something-other-than-a-raspberry-pi-3) 참조)."

msgid "Prepping an OS image"
msgstr "OS 이미지 준비"

msgid ""
"After installing OctoPi and upgrading OctoPrint, it will be necessary to ssh"
" into the target machine to run a handful of system commands. If using a "
"Linux or MacOS desktop, then the \"ssh\" software should already be "
"installed on the desktop. There are free ssh clients available for other "
"desktops (eg, [PuTTY](https://www.chiark.greenend.org.uk/~sgtatham/putty/))."
" Use the ssh utility to connect to the Raspberry Pi (ssh pi@octopi -- "
"password is \"raspberry\") and run the following commands:"
msgstr ""
"OctoPi를 설치하고 OctoPrint를 업그레이드한 후, 소수의 시스템 명령을 실행하려면 대상 머신에 ssh해야 합니다. Linux "
"또는 MacOS 데스크탑을 사용하는 경우 \"ssh\" 소프트웨어가 데스크탑에 이미 설치되어 있어야 합니다. 다른 데스크톱에서 사용할 수"
" 있는 무료 ssh 클라이언트가 있습니다(예: "
"[PuTTY](https://www.chiark.greenend.org.uk/~sgtatham/putty/)). ssh 유틸리티를 "
"사용하여 Raspberry Pi(ssh pi@octpi -- 암호는 \"raspberry\")에 연결하고 다음 명령을 실행합니다:"

msgid ""
"The above will download Klipper, install some system dependencies, setup "
"Klipper to run at system startup, and start the Klipper host software. It "
"will require an internet connection and it may take a few minutes to "
"complete."
msgstr ""
"위의 내용은 Klipper를 다운로드하고, 일부 시스템 종속성을 설치하고, 시스템 시작 시 실행되도록 Klipper를 설정하고, "
"Klipper 호스트 소프트웨어를 시작합니다. 인터넷 연결이 필요하며 완료하는 데 몇 분이 소요될 수 있습니다."

msgid "Building and flashing the micro-controller"
msgstr "마이크로 컨트롤러 빌드 및 플래싱"

msgid ""
"To compile the micro-controller code, start by running these commands on the"
" Raspberry Pi:"
msgstr "마이크로 컨트롤러 코드를 컴파일하려면 먼저 Raspberry Pi에서 다음 명령을 실행하십시오:"

msgid "It should report something similar to the following:"
msgstr "그럼 다음과 비슷한 결과물을 얻을 수 있습니다:"

msgid ""
"It's common for each printer to have its own unique serial port name. This "
"unique name will be used when flashing the micro-controller. It's possible "
"there may be multiple lines in the above output - if so, choose the line "
"corresponding to the micro-controller (see the [FAQ](FAQ.md#wheres-my-"
"serial-port) for more information)."
msgstr ""
"각 프린터에는 고유한 시리얼 포트 이름이 있는 것이 일반적입니다. 이 고유한 이름은 마이크로 컨트롤러에 펌웨어 업로드 할때 사용됩니다. "
"위의 출력에 여러 줄이 있을 수 있습니다. 그렇다면 마이크로 컨트롤러에 해당하는 줄을 선택하십시오 (자세한 내용은 [FAQ](내-시리얼-"
"포트는-어디에-있습니까) 참조)."

msgid ""
"For common micro-controllers, the code can be flashed with something similar"
" to:"
msgstr "일반적인 마이크로 컨트롤러의 경우 다음과 유사한 명령어를 사용하여 펌웨어 업로드 할 수 있습니다:"

msgid ""
"Be sure to update the FLASH_DEVICE with the printer's unique serial port "
"name."
msgstr "반드시 프린터의 고유한 시리얼 포트 이름으로 FLASH_DEVICE를 업데이트해야 합니다."

msgid ""
"When flashing for the first time, make sure that OctoPrint is not connected "
"directly to the printer (from the OctoPrint web page, under the "
"\"Connection\" section, click \"Disconnect\")."
msgstr ""
"처음 펌업 할 때 OctoPrint가 프린터에 직접 연결되어 있지 않은지 확인하십시오 (OctoPrint 웹 페이지의 "
"\"Connection\" 섹션에서 \"Disconnect\" 클릭)."

msgid "Configuring OctoPrint to use Klipper"
msgstr "Klipper를 사용하도록 OctoPrint 구성중"

msgid ""
"The OctoPrint web server needs to be configured to communicate with the "
"Klipper host software. Using a web browser, login to the OctoPrint web page "
"and then configure the following items:"
msgstr ""
"OctoPrint 웹 서버는 Klipper 호스트 소프트웨어와 통신하도록 구성해야 합니다. 웹 브라우저를 사용하여 OctoPrint 웹 "
"페이지에 로그인한 후 다음 항목을 구성합니다:"

msgid ""
"Navigate to the Settings tab (the wrench icon at the top of the page). Under"
" \"Serial Connection\" in \"Additional serial ports\" add \"/tmp/printer\". "
"Then click \"Save\"."
msgstr ""
"설정 탭(페이지 상단의 렌치 아이콘)으로 이동합니다. \"추가 직렬 포트\"의 \"직렬 연결\"에서 \"/tmp/printer\"를 "
"추가합니다. 그런 다음 \"저장\"을 클릭하십시오."

msgid ""
"Enter the Settings tab again and under \"Serial Connection\" change the "
"\"Serial Port\" setting to \"/tmp/printer\"."
msgstr "설정 탭으로 다시 들어가 \"직렬 연결\"에서 \"직렬 포트\" 설정을 \"/tmp/printer\"로 변경하십시오."

msgid ""
"In the Settings tab, navigate to the \"Behavior\" sub-tab and select the "
"\"Cancel any ongoing prints but stay connected to the printer\" option. "
"Click \"Save\"."
msgstr ""
"설정 탭에서 \"동작\" 하위 탭으로 이동하여 \"진행 중인 인쇄를 취소하지만 프린터에 연결된 상태로 유지\" 옵션을 선택합니다. "
"\"저장\"을 클릭합니다."

msgid ""
"From the main page, under the \"Connection\" section (at the top left of the"
" page) make sure the \"Serial Port\" is set to \"/tmp/printer\" and click "
"\"Connect\". (If \"/tmp/printer\" is not an available selection then try "
"reloading the page.)"
msgstr ""
"메인 페이지의 \"연결\" 섹션(페이지 왼쪽 상단)에서 \"직렬 포트\"가 \"/tmp/printer\"로 설정되어 있는지 확인하고 "
"\"연결\"을 클릭합니다. (\"/tmp/printer\"를 선택할 수 없는 경우 페이지를 다시 로드해 보십시오.)"

msgid ""
"Once connected, navigate to the \"Terminal\" tab and type \"status\" "
"(without the quotes) into the command entry box and click \"Send\". The "
"terminal window will likely report there is an error opening the config file"
" - that means OctoPrint is successfully communicating with Klipper. Proceed "
"to the next section."
msgstr ""
"연결되면 \"터미널\" 탭으로 이동하여 명령 입력 상자에 \"상태\"(따옴표 제외)를 입력하고 \"보내기\"를 클릭합니다. 터미널 창은 "
"구성 파일을 여는 동안 오류가 발생했다고 보고할 것입니다. 이는 OctoPrint가 Klipper와 성공적으로 통신하고 있음을 "
"의미합니다. 다음 섹션으로 이동합니다."

msgid "Configuring Klipper"
msgstr "Klipper 구성 중"

msgid ""
"Klipper reports error messages via the OctoPrint terminal tab. The "
"\"status\" command can be used to re-report error messages. The default "
"Klipper startup script also places a log in **/tmp/klippy.log** which "
"provides more detailed information."
msgstr ""
"Klipper는 OctoPrint terminal 탭을 통해 오류 메시지를 보고합니다. \"status\" 명령을 사용하여 오류 메시지를"
" 다시 보고할 수 있습니다. Klipper 시작 스크립트는 **/tmp/klippy.log**를 통해 자세한 정보를 제공합니다."

msgid ""
"cd ~/klipper/\n"
"make menuconfig\n"
msgstr ""
"cd ~/klipper/\n"
"make menuconfig\n"

msgid "make\n"
msgstr "make\n"

msgid "ls /dev/serial/by-id/*\n"
msgstr "ls /dev/serial/by-id/*\n"

msgid "/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0\n"
msgstr "/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0\n"

msgid ""
"sudo service klipper stop\n"
"make flash FLASH_DEVICE=/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0\n"
"sudo service klipper start\n"
msgstr ""
"sudo service klipper stop\n"
"make flash FLASH_DEVICE=/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0\n"
"sudo service klipper start\n"

msgid ""
"cp ~/klipper/config/example-cartesian.cfg ~/printer.cfg\n"
"nano ~/printer.cfg\n"
msgstr ""
"cp ~/klipper/config/example-cartesian.cfg ~/printer.cfg\n"
"nano ~/printer.cfg\n"

msgid ""
"[mcu]\n"
"serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0\n"
msgstr ""
"[mcu]\n"
"serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0\n"

#: docs/Installation.md:block 1 (header)
msgid "Installation"
msgstr "설치"

#: docs/Installation.md:block 7 (code)
msgid ""
"git clone https://github.com/Klipper3d/klipper\n"
"./klipper/scripts/install-octopi.sh\n"
msgstr ""
"git clone https://github.com/Klipper3d/klipper\n"
"./klipper/scripts/install-octopi.sh\n"

#: docs/Installation.md:block 5 (paragraph)
msgid ""
"Start by installing [OctoPi](https://github.com/guysoft/OctoPi) on the "
"Raspberry Pi computer. Use OctoPi v0.17.0 or later - see the [OctoPi "
"releases](https://github.com/guysoft/OctoPi/releases) for release "
"information. One should verify that OctoPi boots and that the OctoPrint web "
"server works. After connecting to the OctoPrint web page, follow the prompt "
"to upgrade OctoPrint to v1.4.2 or later."
msgstr ""
"Raspberry Pi 컴퓨터에 [OctoPi](https://github.com/guysoft/OctoPi)를 설치하여 시작합니다. "
"OctoPi v0.17.0 이상 사용 - 릴리스 정보는 [OctoPi "
"릴리스](https://github.com/guysoft/OctoPi/releases)를 참조하십시오. OctoPi가 부팅되고 "
"OctoPrint 웹 서버가 작동하는지 확인해야 합니다. OctoPrint 웹 페이지에 연결한 후 화면의 지시에 따라 OctoPrint를"
" v1.4.2 이상으로 업그레이드하십시오."

#: docs/Installation.md:block 3 (header)
msgid "Obtain a Klipper Configuration File"
msgstr ""

#: docs/Installation.md:block 4 (paragraph)
msgid ""
"Most Klipper settings are determined by a \"printer configuration file\" "
"that will be stored on the Raspberry Pi. An appropriate configuration file "
"can often be found by looking in the Klipper [config directory](../config/) "
"for a file starting with a \"printer-\" prefix that corresponds to the "
"target printer. The Klipper configuration file contains technical "
"information about the printer that will be needed during the installation."
msgstr ""

#: docs/Installation.md:block 5 (paragraph)
msgid ""
"If there isn't an appropriate printer configuration file in the Klipper "
"config directory then try searching the printer manufacturer's website to "
"see if they have an appropriate Klipper configuration file."
msgstr ""

#: docs/Installation.md:block 6 (paragraph)
msgid ""
"If no configuration file for the printer can be found, but the type of "
"printer control board is known, then look for an appropriate [config "
"file](../config/) starting with a \"generic-\" prefix. These example printer"
" board files should allow one to successfully complete the initial "
"installation, but will require some customization to obtain full printer "
"functionality."
msgstr ""

#: docs/Installation.md:block 7 (paragraph)
msgid ""
"It is also possible to define a new printer configuration from scratch. "
"However, this requires significant technical knowledge about the printer and"
" its electronics. It is recommended that most users start with an "
"appropriate configuration file. If creating a new custom printer "
"configuration file, then start with the closest example [config "
"file](../config/) and use the Klipper [config "
"reference](Config_Reference.md) for further information."
msgstr ""

#: docs/Installation.md:block 16 (paragraph)
msgid ""
"The comments at the top of the [printer configuration file](#obtain-a-"
"klipper-configuration-file) should describe the settings that need to be set"
" during \"make menuconfig\". Open the file in a web browser or text editor "
"and look for these instructions near the top of the file. Once the "
"appropriate \"menuconfig\" settings have been configured, press \"Q\" to "
"exit, and then \"Y\" to save. Then run:"
msgstr ""

#: docs/Installation.md:block 18 (paragraph)
msgid ""
"If the comments at the top of the [printer configuration file](#obtain-a-"
"klipper-configuration-file) describe custom steps for \"flashing\" the final"
" image to the printer control board then follow those steps and then proceed"
" to [configuring OctoPrint](#configuring-octoprint-to-use-klipper)."
msgstr ""

#: docs/Installation.md:block 19 (paragraph)
msgid ""
"Otherwise, the following steps are often used to \"flash\" the printer "
"control board. First, it is necessary to determine the serial port connected"
" to the micro-controller. Run the following:"
msgstr ""

#: docs/Installation.md:block 36 (paragraph)
msgid ""
"The next step is to copy the [printer configuration file](#obtain-a-klipper-"
"configuration-file) to the Raspberry Pi."
msgstr ""

#: docs/Installation.md:block 37 (paragraph)
msgid ""
"Arguably the easiest way to set the Klipper configuration file is to use a "
"desktop editor that supports editing files over the \"scp\" and/or \"sftp\" "
"protocols. There are freely available tools that support this (eg, "
"Notepad++, WinSCP, and Cyberduck). Load the printer config file in the "
"editor and then save it as a file named \"printer.cfg\" in the home "
"directory of the pi user (ie, /home/pi/printer.cfg)."
msgstr ""

#: docs/Installation.md:block 38 (paragraph)
msgid ""
"Alternatively, one can also copy and edit the file directly on the Raspberry"
" Pi via ssh. That may look something like the following (be sure to update "
"the command to use the appropriate printer config filename):"
msgstr ""

#: docs/Installation.md:block 40 (paragraph)
msgid ""
"It's common for each printer to have its own unique name for the micro-"
"controller. The name may change after flashing Klipper, so rerun these steps"
" again even if they were already done when flashing. Run:"
msgstr ""

#: docs/Installation.md:block 44 (paragraph)
msgid ""
"Then update the config file with the unique name. For example, update the "
"`[mcu]` section to look something similar to:"
msgstr ""

#: docs/Installation.md:block 46 (paragraph)
msgid ""
"After creating and editing the file it will be necessary to issue a "
"\"restart\" command in the OctoPrint web terminal to load the config. A "
"\"status\" command will report the printer is ready if the Klipper config "
"file is successfully read and the micro-controller is successfully found and"
" configured."
msgstr ""

#: docs/Installation.md:block 47 (paragraph)
msgid ""
"When customizing the printer config file, it is not uncommon for Klipper to "
"report a configuration error. If an error occurs, make any necessary "
"corrections to the printer config file and issue \"restart\" until "
"\"status\" reports the printer is ready."
msgstr ""

#: docs/Installation.md:block 49 (paragraph)
msgid ""
"After Klipper reports that the printer is ready, proceed to the [config "
"check document](Config_checks.md) to perform some basic checks on the "
"definitions in the config file. See the main [documentation "
"reference](Overview.md) for other information."
msgstr ""

#~ msgid ""
#~ "Select the appropriate micro-controller and review any other options "
#~ "provided. Once configured, run:"
#~ msgstr "적절한 마이크로 컨트롤러를 선택하고 제공된 다른 옵션을 검토하십시오. 구성이 완료되면 다음을 실행합니다:"

#~ msgid ""
#~ "It is necessary to determine the serial port connected to the micro-"
#~ "controller. For micro-controllers that connect via USB, run the following:"
#~ msgstr "마이크로 컨트롤러에 연결된 직렬 포트를 결정해야 합니다. USB를 통해 연결하는 마이크로 컨트롤러의 경우 다음을 실행합니다:"

#~ msgid ""
#~ "Arguably the easiest way to update the Klipper configuration file is to use "
#~ "a desktop editor that supports editing files over the \"scp\" and/or "
#~ "\"sftp\" protocols. There are freely available tools that support this (eg, "
#~ "Notepad++, WinSCP, and Cyberduck). Use one of the example config files as a "
#~ "starting point and save it as a file named \"printer.cfg\" in the home "
#~ "directory of the pi user (ie, /home/pi/printer.cfg)."
#~ msgstr ""
#~ "논란의 여지 없이 Klipper 구성 파일을 업데이트하는 가장 쉬운 방법은 \"scp\" 및/또는 \"sftp\" 프로토콜을 통한 파일 "
#~ "편집을 지원하는 데스크톱 편집기를 사용하는 것입니다. 이를 지원하는 무료 도구가 있습니다(예: Notepad++, WinSCP 및 "
#~ "Cyberduck). 예제 구성 파일 중 하나를 시작점으로 사용하고 pi 사용자의 홈 디렉터리(즉, "
#~ "/home/pi/printer.cfg)에 \"printer.cfg\"라는 파일로 저장합니다."

#~ msgid ""
#~ "Alternatively, one can also copy and edit the file directly on the Raspberry"
#~ " Pi via ssh - for example:"
#~ msgstr "또는 ssh를 통해 Raspberry Pi에서 직접 파일을 복사하고 편집할 수도 있습니다. 예를 들면 다음과 같습니다:"

#~ msgid ""
#~ "Make sure to review and update each setting that is appropriate for the "
#~ "hardware."
#~ msgstr "하드웨어에 적합한 각 설정을 검토하고 업데이트해야 합니다."

#~ msgid ""
#~ "It's common for each printer to have its own unique name for the micro-"
#~ "controller. The name may change after flashing Klipper, so rerun the `ls "
#~ "/dev/serial/by-id/*` command and then update the config file with the unique"
#~ " name. For example, update the `[mcu]` section to look something similar to:"
#~ msgstr ""
#~ "각 프린터마다 마이크로 컨트롤러에 대해 고유한 이름이 있는 것이 일반적입니다. Klipper 플래싱 후에 이름이 변경될 수 있으므로 "
#~ "`ls /dev/serial/by-id/*` 명령을 다시 실행한 다음 구성 파일을 고유한 이름으로 업데이트하십시오. 예를 들어 "
#~ "`[mcu]` 섹션을 다음과 유사하게 업데이트합니다:"

#~ msgid ""
#~ "After creating and editing the file it will be necessary to issue a "
#~ "\"restart\" command in the OctoPrint web terminal to load the config. A "
#~ "\"status\" command will report the printer is ready if the Klipper config "
#~ "file is successfully read and the micro-controller is successfully found and"
#~ " configured. It is not unusual to have configuration errors during the "
#~ "initial setup - update the printer config file and issue \"restart\" until "
#~ "\"status\" reports the printer is ready."
#~ msgstr ""
#~ "파일을 만들고 편집한 후 config 를 로드하려면 OctoPrint 웹 terminal 탭에서 \"restart\" 명령을 실행해야 "
#~ "합니다. \"status\" 명령은 Klipper 구성 파일을 성공적으로 읽고 마이크로 컨트롤러를 성공적으로 찾아서 구성한 경우 프린터가"
#~ " 준비되었음을 보고합니다. 초기 설정 중에 구성 오류가 발생하는 것은 드문 일이 아닙니다. 프린터 구성 파일을 업데이트하고 "
#~ "\"status\"에서 프린터가 준비되었다고 보고할 때까지 \"restart\"을 실행하십시오."

#~ msgid ""
#~ "In addition to common g-code commands, Klipper supports a few extended "
#~ "commands - \"status\" and \"restart\" are examples of these commands. Use "
#~ "the \"help\" command to get a list of other extended commands."
#~ msgstr ""
#~ "추가로 일반적인 gcode 명령 외에도 Klipper는 몇 가지 확장 명령을 지원합니다. \"status\" 및 \"restart\"는 "
#~ "이러한 명령의 예입니다. \"help\" 명령을 사용하여 다른 확장 명령을 확인하십시오."

#~ msgid ""
#~ "After Klipper reports that the printer is ready go on to the [config check "
#~ "document](Config_checks.md) to perform some basic checks on the pin "
#~ "definitions in the config file."
#~ msgstr ""
#~ "Klipper가 프린터가 준비되었다고 보고한 후 [config check document](Config_checks.md)로 이동하여 "
#~ "config 파일의 핀 정의에 대한 몇 가지 기본 검사를 수행합니다."

#~ msgid "Contacting the developers"
#~ msgstr "개발자에게 연락하기"

#~ msgid ""
#~ "Be sure to see the [FAQ](FAQ.md) for answers to some common questions. See "
#~ "the [contact page](Contact.md) to report a bug or to contact the developers."
#~ msgstr ""
#~ "몇 가지 일반적인 질문에 대한 답변은 [FAQ](FAQ.md)를 참조하십시오. 버그를 보고하거나 개발자에게 연락하려면 [contact "
#~ "page](Contact.md)를 참조하세요."

#~ msgid ""
#~ "Klipper currently supports a number of Atmel ATmega based micro-controllers,"
#~ " [ARM based micro-controllers](Features.md#step-benchmarks), and [Beaglebone"
#~ " PRU](Beaglebone.md) based printers."
#~ msgstr ""
#~ "Klipper는 현재 다수의 Atmel ATmega 기반 마이크로 컨트롤러, [ARM 기반 마이크로 "
#~ "컨트롤러](Features.md#step-benchmarks) 및 [Beaglebone PRU](Beaglebone.md) 기반 프린터를"
#~ " 지원합니다."

#~ msgid ""
#~ "The Klipper configuration is stored in a text file on the Raspberry Pi. Take"
#~ " a look at the example config files in the [config directory](../config/). "
#~ "The [Config Reference](Config_Reference.md) contains documentation on config"
#~ " parameters."
#~ msgstr ""
#~ "Klipper 구성은 Raspberry Pi의 텍스트 파일에 저장됩니다. [config directory](../config/)에 있는 "
#~ "예제 구성 파일을 살펴보십시오. [Config Reference](Config_Reference.md)에는 구성 매개변수에 대한 문서가 "
#~ "포함되어 있습니다."

#~ msgid ""
#~ "Klipper currently supports a number of Atmel ATmega based micro-controllers,"
#~ " [ARM based micro-controllers](Features.md#step-benchmarks), and [Beaglebone"
#~ " PRU](beaglebone.md) based printers."
#~ msgstr ""
#~ "Klipper는 현재 다양한 Atmel ATmega 기반 마이크로 컨트롤러, [ARM based micro-"
#~ "controllers](Features.md#step-benchmarks) 및 [Beaglebone PRU](beaglebone.md) "
#~ "기반 프린터를 지원합니다."

#~ msgid ""
#~ "Start by installing [OctoPi](https://github.com/guysoft/OctoPi) on the "
#~ "Raspberry Pi computer. Use OctoPi v0.17.0 or later - see the [octopi "
#~ "releases](https://github.com/guysoft/OctoPi/releases) for release "
#~ "information. One should verify that OctoPi boots and that the OctoPrint web "
#~ "server works. After connecting to the OctoPrint web page, follow the prompt "
#~ "to upgrade OctoPrint to v1.4.2 or later."
#~ msgstr ""
#~ "Raspberry Pi에 [OctoPi](https://github.com/guysoft/OctoPi) 를 설치하여 시작합니다. "
#~ "OctoPi v0.17.0 이상을 사용하십시오. 릴리스 정보는 [octopi "
#~ "releases](https://github.com/guysoft/OctoPi/releases) 릴리스를 참조하십시오. OctoPi가 "
#~ "부팅되고 OctoPrint 웹 서버가 작동하는지 확인해야 합니다. OctoPrint 웹 페이지에 연결한 후 화면의 지시에 따라 "
#~ "OctoPrint를 v1.4.2 이상으로 업그레이드하십시오."

#~ msgid ""
#~ "The Klipper configuration is stored in a text file on the Raspberry Pi. Take"
#~ " a look at the example config files in the [config directory](../config/). "
#~ "The [config reference](Config_Reference.md) contains documentation on config"
#~ " parameters."
#~ msgstr ""
#~ "Klipper 구성은 Raspberry Pi의 텍스트 파일에 저장됩니다. [config directory](../config/) 있는 "
#~ "예제 구성 파일을 살펴보십시오. [config reference](Config_Reference.md)에는 config 매개변수에 대한 "
#~ "문서가 포함되어 있습니다."

#~ msgid ""
#~ "git clone https://github.com/KevinOConnor/klipper\n"
#~ "./klipper/scripts/install-octopi.sh\n"
#~ msgstr ""
#~ "git clone https://github.com/KevinOConnor/klipper\n"
#~ "./klipper/scripts/install-octopi.sh\n"
