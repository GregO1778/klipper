# Dex94 <Dasvaresu@dr.com>, 2022.
# Ale Ale <ale.99.ale@gmail.com>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-08-04 21:22+0000\n"
"Last-Translator: Ale Ale <ale.99.ale@gmail.com>\n"
"Language-Team: Italian <https://hosted.weblate.org/projects/klipper/bootloaders/it/>\n"
"Language: it\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.14-dev\n"

msgid ""
"This document provides information on common bootloaders found on micro-"
"controllers that Klipper supports."
msgstr ""
"Questo documento fornisce informazioni sui bootloader comuni scoperti sui "
"microcontrollori che sono supportati da Klipper."

msgid ""
"The bootloader is 3rd-party software that runs on the micro-controller when "
"it is first powered on. It is typically used to flash a new application (eg,"
" Klipper) to the micro-controller without requiring specialized hardware. "
"Unfortunately, there is no industry wide standard for flashing a micro-"
"controller, nor is there a standard bootloader that works across all micro-"
"controllers. Worse, it is common for each bootloader to require a different "
"set of steps to flash an application."
msgstr ""
"Il bootloader è un software di terze parti che viene eseguito sul "
"microcontrollore quando viene acceso per la prima volta. Viene generalmente "
"utilizzato per eseguire il flashing di una nuova applicazione (ad es. "
"Klipper) sul microcontrollore senza richiedere hardware specializzato. "
"Sfortunatamente, non esiste uno standard a livello di settore per il "
"flashing di un microcontrollore, né esiste un bootloader standard che "
"funzioni su tutti i microcontrollori. Peggio ancora, è comune che ogni "
"bootloader richieda una serie di passaggi diversa per eseguire il flashing "
"di un'applicazione."

msgid ""
"If one can flash a bootloader to a micro-controller then one can generally "
"also use that mechanism to flash an application, but care should be taken "
"when doing this as one may inadvertently remove the bootloader. In contrast,"
" a bootloader will generally only permit a user to flash an application. It "
"is therefore recommended to use a bootloader to flash an application where "
"possible."
msgstr ""
"Se si può eseguire il flashing di un bootloader su un microcontrollore, "
"generalmente si può anche utilizzare quel meccanismo per eseguire il "
"flashing di un'applicazione, ma è necessario prestare attenzione quando si "
"esegue questa operazione poiché si potrebbe rimuovere inavvertitamente il "
"bootloader. Al contrario, un bootloader generalmente consentirà solo a un "
"utente di eseguire il flashing di un'applicazione. Si consiglia pertanto di "
"utilizzare un bootloader per eseguire il flashing di un'applicazione, ove "
"possibile."

msgid ""
"This document attempts to describe common bootloaders, the steps needed to "
"flash a bootloader, and the steps needed to flash an application. This "
"document is not an authoritative reference; it is intended as a collection "
"of useful information that the Klipper developers have accumulated."
msgstr ""
"Questo documento tenta di descrivere i bootloader comuni, i passaggi "
"necessari per eseguire il flashing di un bootloader e i passaggi necessari "
"per eseguire il flashing di un'applicazione. Questo documento non è un "
"riferimento autorevole; è inteso come una raccolta di informazioni utili che"
" gli sviluppatori di Klipper hanno accumulato."

msgid "AVR micro-controllers"
msgstr "Microcontrollori AVR"

msgid ""
"To flash a bootloader itself, the AVR chips require an external hardware "
"flashing tool (which communicates with the chip using SPI). This tool can be"
" purchased (for example, do a web search for \"avr isp\", \"arduino isp\", "
"or \"usb tiny isp\"). It is also possible to use another Arduino or "
"Raspberry Pi to flash an AVR bootloader (for example, do a web search for "
"\"program an avr using raspberry pi\"). The examples below are written "
"assuming an \"AVR ISP Mk2\" type device is in use."
msgstr ""
"Per eseguire il flashing di un bootloader, i chip AVR richiedono uno "
"strumento di flashing hardware esterno (che comunica con il chip tramite "
"SPI). Questo strumento può essere acquistato (ad esempio, eseguire una "
"ricerca sul Web per \"avr isp\", \"arduino isp\" o \"usb tiny isp\"). È "
"anche possibile utilizzare un altro Arduino o Raspberry Pi per eseguire il "
"flashing di un bootloader AVR (ad esempio, eseguire una ricerca sul Web per "
"\"programmare un avr utilizzando raspberry pi\"). Gli esempi seguenti sono "
"scritti presupponendo che sia in uso un dispositivo di tipo \"AVR ISP Mk2\"."

msgid ""
"The \"avrdude\" program is the most common tool used to flash atmega chips "
"(both bootloader flashing and application flashing)."
msgstr ""
"Il programma \"avrdude\" è lo strumento più comune utilizzato per eseguire "
"il flashing dei chip atmega (sia flash del bootloader che flash "
"dell'applicazione)."

msgid "Atmega2560"
msgstr "Atmega2560"

msgid ""
"This chip is typically found in the \"Arduino Mega\" and is very common in "
"3d printer boards."
msgstr ""
"Questo chip si trova in genere nell'\"Arduino Mega\" ed è molto comune nelle"
" schede per stampanti 3D."

msgid "To flash the bootloader itself use something like:"
msgstr "Per eseguire il flashing del bootloader stesso usa qualcosa come:"

msgid "To flash an application use something like:"
msgstr ""
"Per eseguire il flashing di un'applicazione, utilizzare qualcosa come:"

msgid "Atmega1280"
msgstr "Atmega1280"

msgid "This chip is typically found in earlier versions of the \"Arduino Mega\"."
msgstr "Questo chip si trova in genere nelle prime versioni di \"Arduino Mega\"."

msgid "Atmega1284p"
msgstr "Atmega1284p"

msgid "This chip is commonly found in \"Melzi\" style 3d printer boards."
msgstr ""
"Questo chip si trova comunemente nelle schede per stampanti 3D in stile "
"\"Melzi\"."

msgid ""
"Note that a number of \"Melzi\" style boards come preloaded with a "
"bootloader that uses a baud rate of 57600. In this case, to flash an "
"application use something like this instead:"
msgstr ""
"Si noti che un certo numero di schede in stile \"Melzi\" sono precaricate "
"con un bootloader che utilizza una velocità di trasmissione di 57600 baud. "
"In questo caso, per eseguire il flashing di un'applicazione utilizzare "
"invece qualcosa di simile:"

msgid "At90usb1286"
msgstr "At90usb1286"

msgid ""
"This document does not cover the method to flash a bootloader to the "
"At90usb1286 nor does it cover general application flashing to this device."
msgstr ""
"Questo documento non copre il metodo per eseguire il flashing di un "
"bootloader su At90usb1286 né copre il flashing di applicazioni generali su "
"questo dispositivo."

msgid "Atmega168"
msgstr "Atmega168"

msgid ""
"The atmega168 has limited flash space. If using a bootloader, it is "
"recommended to use the Optiboot bootloader. To flash that bootloader use "
"something like:"
msgstr ""
"L'atmega168 ha uno spazio flash limitato. Se si utilizza un bootloader, si "
"consiglia di utilizzare il bootloader Optiboot. Per eseguire il flashing di "
"quel bootloader usa qualcosa come:"

msgid ""
"To flash an application via the Optiboot bootloader use something like:"
msgstr ""
"Per eseguire il flashing di un'applicazione tramite il bootloader Optiboot, "
"utilizzare qualcosa come:"

msgid "SAM3 micro-controllers (Arduino Due)"
msgstr "Microcontrollori SAM3 (Arduino Due)"

msgid ""
"It is not common to use a bootloader with the SAM3 mcu. The chip itself has "
"a ROM that allows the flash to be programmed from 3.3V serial port or from "
"USB."
msgstr ""
"Non è comune utilizzare un bootloader con l'mcu SAM3. Il chip stesso ha una "
"ROM che permette di programmare il flash da porta seriale 3.3V o da USB."

msgid ""
"To enable the ROM, the \"erase\" pin is held high during a reset, which "
"erases the flash contents, and causes the ROM to run. On an Arduino Due, "
"this sequence can be accomplished by setting a baud rate of 1200 on the "
"\"programming usb port\" (the USB port closest to the power supply)."
msgstr ""
"Per abilitare la ROM, il pin \"erase\" viene tenuto alto durante un reset, "
"che cancella il contenuto della flash e fa funzionare la ROM. Su un Arduino "
"Due, questa sequenza può essere realizzata impostando un baud rate di 1200 "
"sulla \"porta usb di programmazione\" (la porta USB più vicina "
"all'alimentatore)."

msgid "SAM4 micro-controllers (Duet Wifi)"
msgstr "Microcontrollori SAM4 (Duet Wifi)"

msgid ""
"It is not common to use a bootloader with the SAM4 mcu. The chip itself has "
"a ROM that allows the flash to be programmed from 3.3V serial port or from "
"USB."
msgstr ""
"Non è comune utilizzare un bootloader con l'mcu SAM4. Il chip stesso ha una "
"ROM che permette di programmare la memoria flash da porta seriale 3.3V o da "
"USB."

msgid ""
"To enable the ROM, the \"erase\" pin is held high during a reset, which "
"erases the flash contents, and causes the ROM to run."
msgstr ""
"Per abilitare la ROM, il pin \"erase\" viene tenuto alto durante un reset, "
"che cancella il contenuto della memoria flash e fa funzionare la ROM."

msgid "SAMD21 micro-controllers (Arduino Zero)"
msgstr "Microcontrollori SAMD21 (Arduino Zero)"

msgid ""
"The SAMD21 bootloader is flashed via the ARM Serial Wire Debug (SWD) "
"interface. This is commonly done with a dedicated SWD hardware dongle. "
"Alternatively, one can use a [Raspberry Pi with OpenOCD](#running-openocd-"
"on-the-raspberry-pi)."
msgstr ""
"Il bootloader SAMD21 viene caricato in memoria flashing tramite "
"l'interfaccia ARM Serial Wire Debug (SWD). Questo viene fatto comunemente "
"con un dongle hardware SWD dedicato. In alternativa, è possibile utilizzare "
"un [Raspberry Pi con OpenOCD](#running-openocd-on-the-raspberry-pi)."

msgid "To flash a bootloader with OpenOCD use the following chip config:"
msgstr ""
"Per eseguire il flashing di un bootloader con OpenOCD, utilizzare la "
"seguente configurazione del chip:"

msgid "Obtain a bootloader - for example:"
msgstr "Ottieni un bootloader, ad esempio:"

msgid "Flash with OpenOCD commands similar to:"
msgstr "Carica la memoria Flash con comandi OpenOCD simili a:"

msgid ""
"The most common bootloader on the SAMD21 is the one found on the \"Arduino "
"Zero\". It uses an 8KiB bootloader (the application must be compiled with a "
"start address of 8KiB). One can enter this bootloader by double clicking the"
" reset button. To flash an application use something like:"
msgstr ""
"Il bootloader più comune sul SAMD21 è quello che si trova sull' \"Arduino "
"Zero\". Utilizza un bootloader da 8KiB (l'applicazione deve essere compilata"
" con un indirizzo iniziale di 8KiB). Si può entrare in questo bootloader "
"facendo doppio clic sul pulsante di ripristino. Per eseguire il flashing di "
"un'applicazione, utilizzare qualcosa come:"

msgid ""
"In contrast, the \"Arduino M0\" uses a 16KiB bootloader (the application "
"must be compiled with a start address of 16KiB). To flash an application on "
"this bootloader, reset the micro-controller and run the flash command within"
" the first few seconds of boot - something like:"
msgstr ""
"Al contrario, \"Arduino M0\" utilizza un bootloader da 16 KiB "
"(l'applicazione deve essere compilata con un indirizzo iniziale di 16 KiB). "
"Per eseguire il flashing di un'applicazione su questo bootloader, "
"ripristinare il microcontrollore ed eseguire il comando flash entro i primi "
"secondi dall'avvio, qualcosa del tipo:"

msgid "SAMD51 micro-controllers (Adafruit Metro-M4 and similar)"
msgstr "Microcontrollori SAMD51 (Adafruit Metro-M4 e simili)"

msgid ""
"Like the SAMD21, the SAMD51 bootloader is flashed via the ARM Serial Wire "
"Debug (SWD) interface. To flash a bootloader with [OpenOCD on a Raspberry "
"Pi](#running-openocd-on-the-raspberry-pi) use the following chip config:"
msgstr ""
"Come il SAMD21, il bootloader SAMD51 viene eseguito il flashing tramite "
"l'interfaccia ARM Serial Wire Debug (SWD). Per eseguire il flashing di un "
"bootloader con [OpenOCD su un Raspberry Pi](#running-openocd-on-the-"
"raspberry-pi) utilizzare la seguente configurazione del chip:"

msgid ""
"The SAMD51 uses a 16KiB bootloader (the application must be compiled with a "
"start address of 16KiB). To flash an application use something like:"
msgstr ""
"Il SAMD51 utilizza un bootloader da 16 KiB (l'applicazione deve essere "
"compilata con un indirizzo iniziale di 16 KiB). Per eseguire il flashing di "
"un'applicazione, utilizzare qualcosa come:"

msgid "STM32F103 micro-controllers (Blue Pill devices)"
msgstr "Microcontrollori STM32F103 (dispositivi Blue Pill)"

msgid ""
"After flashing, set both \"boot 0\" and \"boot 1\" back to low so that "
"future resets boot from flash."
msgstr ""
"Dopo aver caricato la memoria flash, imposta \"boot 0\" e \"boot 1\" su "
"basso in modo che in futuro ripristini l'avvio da flash."

msgid "STM32F103 with stm32duino bootloader"
msgstr "STM32F103 con bootloader stm32duino"

msgid "This bootloader can be flashed via 3.3V serial with something like:"
msgstr ""
"Questo bootloader può essere flashato tramite seriale 3.3V con qualcosa "
"come:"

msgid ""
"This bootloader uses 8KiB of flash space (the application must be compiled "
"with a start address of 8KiB). Flash an application with something like:"
msgstr ""
"Questo bootloader utilizza 8KiB di spazio flash (l'applicazione deve essere "
"compilata con un indirizzo iniziale di 8KiB). Caricare in memoria flash "
"un'applicazione con qualcosa come:"

msgid ""
"The bootloader typically runs for only a short period after boot. It may be "
"necessary to time the above command so that it runs while the bootloader is "
"still active (the bootloader will flash a board led while it is running). "
"Alternatively, set the \"boot 0\" pin to low and \"boot 1\" pin to high to "
"stay in the bootloader after a reset."
msgstr ""
"Il bootloader in genere viene eseguito solo per un breve periodo dopo "
"l'avvio. Potrebbe essere necessario sincronizzare il comando sopra in modo "
"che venga eseguito mentre il bootloader è ancora attivo (il bootloader farà "
"lampeggiare un led della scheda mentre è in esecuzione). In alternativa, "
"imposta il pin \"boot 0\" su basso e il pin \"boot 1\" su alto per rimanere "
"nel bootloader dopo un ripristino."

msgid "STM32F103 with HID bootloader"
msgstr "STM32F103 con bootloader HID"

msgid ""
"For generic STM32F103 boards such as the blue pill it is possible to flash "
"the bootloader via 3.3v serial using stm32flash as noted in the stm32duino "
"section above, substituting the file name for the desired hid bootloader "
"binary (ie: hid_generic_pc13.bin for the blue pill)."
msgstr ""
"Per schede STM32F103 generiche come la blue pill è possibile eseguire il "
"flashing del bootloader tramite seriale 3.3v utilizzando stm32flash come "
"indicato nella sezione stm32duino sopra, sostituendo il nome del file con il"
" binario del bootloader desiderato (es: hid_generic_pc13.bin per blue pill "
")."

msgid ""
"It is not possible to use stm32flash for the SKR Mini E3 as the boot0 pin is"
" tied directly to ground and not broken out via header pins. It is "
"recommended to use a STLink V2 with STM32Cubeprogrammer to flash the "
"bootloader. If you don't have access to a STLink it is also possible to use "
"a [Raspberry Pi and OpenOCD](#running-openocd-on-the-raspberry-pi) with the "
"following chip config:"
msgstr ""
"Non è possibile utilizzare stm32flash per SKR Mini E3 poiché il pin boot0 è "
"collegato direttamente a terra e non disponibile tramite pin header. Si "
"consiglia di utilizzare un STLink V2 con STM32Cubeprogrammer per eseguire il"
" flashing del bootloader. Se non hai accesso a un STLink è anche possibile "
"utilizzare un [Raspberry Pi e OpenOCD](#running-openocd-on-the-raspberry-pi)"
" con la seguente configurazione del chip:"

msgid ""
"If you wish you can make a backup of the current flash with the following "
"command. Note that it may take some time to complete:"
msgstr ""
"Se lo desideri puoi fare un backup della flash corrente con il seguente "
"comando. Tieni presente che il completamento potrebbe richiedere del tempo:"

msgid "finally, you can flash with commands similar to:"
msgstr "infine, puoi eseguire il flashing con comandi simili a:"

msgid "NOTES:"
msgstr "NOTE:"

msgid ""
"The example above erases the chip then programs the bootloader. Regardless "
"of the method chosen to flash it is recommended to erase the chip prior to "
"flashing."
msgstr ""
"L'esempio sopra cancella il chip, quindi programma il bootloader. "
"Indipendentemente dal metodo scelto per eseguire il flashing, si consiglia "
"di cancellare il chip prima del flashing."

msgid ""
"Prior flashing the SKR Mini E3 with this bootloader you should be aware that"
" you will no longer be able to update firmware via the sdcard."
msgstr ""
"Prima di eseguire il flashing di SKR Mini E3 con questo bootloader, dovresti"
" essere consapevole che non sarai più in grado di aggiornare il firmware "
"tramite la sdcard."

msgid ""
"This bootloader requires 2KiB of flash space (the application must be "
"compiled with a start address of 2KiB)."
msgstr ""
"Questo bootloader richiede 2KiB di spazio flash (l'applicazione deve essere "
"compilata con un indirizzo iniziale di 2KiB)."

msgid ""
"The hid-flash program is used to upload a binary to the bootloader. You can "
"install this software with the following commands:"
msgstr ""
"Il programma hid-flash viene utilizzato per caricare un file binario sul "
"bootloader. È possibile installare questo software con i seguenti comandi:"

msgid "If the bootloader is running you can flash with something like:"
msgstr ""
"Se il bootloader è in esecuzione, puoi eseguire il flash con qualcosa del "
"tipo:"

msgid "alternatively, you can use `make flash` to flash klipper directly:"
msgstr ""
"in alternativa, puoi usare `make flash` per flashare klipper direttamente:"

msgid "OR if klipper has been previously flashed:"
msgstr "O se klipper è stato precedentemente flashato:"

msgid ""
"It may be necessary to manually enter the bootloader, this can be done by "
"setting \"boot 0\" low and \"boot 1\" high. On the SKR Mini E3 \"Boot 1\" is"
" not available, so it may be done by setting pin PA2 low if you flashed "
"\"hid_btt_skr_mini_e3.bin\". This pin is labeld \"TX0\" on the TFT header in"
" the SKR Mini E3's \"PIN\" document. There is a ground pin next to PA2 which"
" you can use to pull PA2 low."
msgstr ""
"Potrebbe essere necessario inserire manualmente il bootloader, questo può "
"essere fatto impostando \"boot 0\" basso e \"boot 1\" alto. Su SKR Mini E3 "
"\"Boot 1\" non è disponibile, quindi può essere fatto impostando il pin PA2 "
"basso se hai flashato \"hid_btt_skr_mini_e3.bin\". Questo pin è etichettato "
"\"TX0\" sull'intestazione TFT nel documento \"PIN\" di SKR Mini E3. C'è un "
"pin di massa accanto a PA2 che puoi usare per abbassare PA2."

msgid "STM32F4 micro-controllers (SKR Pro 1.1)"
msgstr "Microcontrollori STM32F4 (SKR Pro 1.1)"

msgid ""
"Unless your board is DFU capable the most accessable flashing method is "
"likely via 3.3v serial, which follows the same procedure as [flashing the "
"STM32F103 using stm32flash](#stm32f103-micro-controllers-blue-pill-devices)."
" For example:"
msgstr ""
"A meno che la tua scheda non sia compatibile con DFU, il metodo di flashing "
"più accessibile è probabilmente tramite seriale 3.3v, che segue la stessa "
"procedura di [flash dell'STM32F103 usando stm32flash](#stm32f103-micro-"
"controllers-blue-pill-devices). Per esempio:"

msgid ""
"This bootloader requires 16Kib of flash space on the STM32F4 (the "
"application must be compiled with a start address of 16KiB)."
msgstr ""
"Questo bootloader richiede 16Kib di spazio flash sull'STM32F4 "
"(l'applicazione deve essere compilata con un indirizzo iniziale di 16KiB)."

msgid ""
"As with the STM32F1, the STM32F4 uses the hid-flash tool to upload binaries "
"to the MCU. See the instructions above for details on how to build and use "
"hid-flash."
msgstr ""
"Come con l'STM32F1, l'STM32F4 utilizza lo strumento hid-flash per caricare i"
" file binari nell'MCU. Consulta le istruzioni sopra per i dettagli su come "
"creare e utilizzare hid-flash."

msgid ""
"It may be necessary to manually enter the bootloader, this can be done by "
"setting \"boot 0\" low, \"boot 1\" high and plugging in the device. After "
"programming is complete unplug the device and set \"boot 1\" back to low so "
"the application will be loaded."
msgstr ""
"Potrebbe essere necessario inserire manualmente il bootloader, questo può "
"essere fatto impostando \"boot 0\" basso, \"boot 1\" alto e collegando il "
"dispositivo. Al termine della programmazione, scollegare il dispositivo e "
"impostare \"boot 1\" su basso in modo che l'applicazione venga caricata."

msgid "LPC176x micro-controllers (Smoothieboards)"
msgstr "Microcontrollori LPC176x (Smoothieboards)"

msgid "Running OpenOCD on the Raspberry PI"
msgstr "Eseguire OpenOCD su Raspberry PI"

msgid ""
"OpenOCD is a software package that can perform low-level chip flashing and "
"debugging. It can use the GPIO pins on a Raspberry Pi to communicate with a "
"variety of ARM chips."
msgstr ""
"OpenOCD è un pacchetto software in grado di eseguire il flashing e il debug "
"di chip di basso livello. Può utilizzare i pin GPIO su un Raspberry Pi per "
"comunicare con una varietà di chip ARM."

msgid ""
"Begin by downloading and compiling the software (each step may take several "
"minutes and the \"make\" step may take 30+ minutes):"
msgstr ""
"Inizia scaricando e compilando il software (ogni passaggio può richiedere "
"diversi minuti e il passaggio \"make\" può richiedere più di 30 minuti):"

msgid "Configure OpenOCD"
msgstr "Configurare OpenOCD"

msgid "Create an OpenOCD config file:"
msgstr "Crea un file di configurazione OpenOCD:"

msgid "Use a config similar to the following:"
msgstr "Utilizzare una configurazione simile alla seguente:"

msgid "Wire the Raspberry Pi to the target chip"
msgstr "Collega il Raspberry Pi al chip di destinazione"

msgid ""
"Poweroff both the the Raspberry Pi and the target chip before wiring! Verify"
" the target chip uses 3.3V prior to connecting to a Raspberry Pi!"
msgstr ""
"Spegni sia il Raspberry Pi che il chip di destinazione prima del cablaggio! "
"Verificare che il chip di destinazione utilizzi 3,3 V prima di connettersi a"
" un Raspberry Pi!"

msgid ""
"Connect GND, SWDCLK, SWDIO, and RST on the target chip to GND, GPIO25, "
"GPIO24, and GPIO18 respectively on the Raspberry Pi."
msgstr ""
"Collega GND, SWDCLK, SWDIO e RST sul chip di destinazione rispettivamente a "
"GND, GPIO25, GPIO24 e GPIO18 sul Raspberry Pi."

msgid "Then power up the Raspberry Pi and provide power to the target chip."
msgstr ""
"Quindi accendi il Raspberry Pi e fornisci alimentazione al chip di "
"destinazione."

msgid "Run OpenOCD"
msgstr "Eseguire OpenOCD"

msgid "Run OpenOCD:"
msgstr "Esegui OpenOCD:"

msgid ""
"The above should cause OpenOCD to emit some text messages and then wait (it "
"should not immediately return to the Unix shell prompt). If OpenOCD exits on"
" its own or if it continues to emit text messages then double check the "
"wiring."
msgstr ""
"Quanto sopra dovrebbe far sì che OpenOCD emetta alcuni messaggi di testo e "
"quindi attenda (non dovrebbe tornare immediatamente al prompt della shell "
"Unix). Se OpenOCD termina da solo o se continua a emettere messaggi di "
"testo, ricontrolla il cablaggio."

msgid ""
"Once OpenOCD is running and is stable, one can send it commands via telnet. "
"Open another ssh session and run the following:"
msgstr ""
"Una volta che OpenOCD è in esecuzione ed è stabile, è possibile inviargli "
"comandi tramite telnet. Apri un'altra sessione ssh ed esegui quanto segue:"

msgid ""
"(One can exit telnet by pressing ctrl+] and then running the \"quit\" "
"command.)"
msgstr ""
"(Si può uscire da telnet premendo ctrl+] e quindi eseguendo il comando "
"\"quit\".)"

msgid "OpenOCD and gdb"
msgstr "OpenOCD e gdb"

msgid ""
"It is possible to use OpenOCD with gdb to debug Klipper. The following "
"commands assume one is running gdb on a desktop class machine."
msgstr ""
"È possibile utilizzare OpenOCD con gdb per eseguire il debug di Klipper. I "
"seguenti comandi presuppongono che uno stia eseguendo gdb su una macchina di"
" classe desktop."

msgid "Add the following to the OpenOCD config file:"
msgstr "Aggiungi quanto segue al file di configurazione di OpenOCD:"

msgid ""
"Restart OpenOCD on the Raspberry Pi and then run the following Unix command "
"on the desktop machine:"
msgstr ""
"Riavvia OpenOCD sul Raspberry Pi e quindi esegui il seguente comando Unix "
"sul computer desktop:"

msgid "Within gdb run:"
msgstr "All'interno di gdb esegui:"

msgid ""
"(Replace \"octopi\" with the host name of the Raspberry Pi.) Once gdb is "
"running it is possible to set breakpoints and to inspect registers."
msgstr ""
"(Sostituisci \"octopi\" con il nome host del Raspberry Pi.) Una volta che "
"gdb è in esecuzione, è possibile impostare punti di interruzione e "
"ispezionare i registri."

msgid ""
"wget 'https://github.com/arduino/Arduino/raw/1.8.5/hardware/arduino/avr/bootloaders/stk500v2/stk500boot_v2_mega2560.hex'\n"
"\n"
"avrdude -cavrispv2 -patmega2560 -P/dev/ttyACM0 -b115200 -e -u -U lock:w:0x3F:m -U efuse:w:0xFD:m -U hfuse:w:0xD8:m -U lfuse:w:0xFF:m\n"
"avrdude -cavrispv2 -patmega2560 -P/dev/ttyACM0 -b115200 -U flash:w:stk500boot_v2_mega2560.hex\n"
"avrdude -cavrispv2 -patmega2560 -P/dev/ttyACM0 -b115200 -U lock:w:0x0F:m\n"
msgstr ""
"wget 'https://github.com/arduino/Arduino/raw/1.8.5/hardware/arduino/avr/bootloaders/stk500v2/stk500boot_v2_mega2560.hex'\n"
"\n"
"avrdude -cavrispv2 -patmega2560 -P/dev/ttyACM0 -b115200 -e -u -U lock:w:0x3F:m -U efuse:w:0xFD:m -U hfuse:w:0xD8:m -U lfuse:w:0xFF:m\n"
"avrdude -cavrispv2 -patmega2560 -P/dev/ttyACM0 -b115200 -U flash:w:stk500boot_v2_mega2560.hex\n"
"avrdude -cavrispv2 -patmega2560 -P/dev/ttyACM0 -b115200 -U lock:w:0x0F:m\n"

msgid ""
"avrdude -cwiring -patmega2560 -P/dev/ttyACM0 -b115200 -D "
"-Uflash:w:out/klipper.elf.hex:i\n"
msgstr ""
"avrdude -cwiring -patmega2560 -P/dev/ttyACM0 -b115200 -D "
"-Uflash:w:out/klipper.elf.hex:i\n"

msgid ""
"wget 'https://github.com/arduino/Arduino/raw/1.8.5/hardware/arduino/avr/bootloaders/atmega/ATmegaBOOT_168_atmega1280.hex'\n"
"\n"
"avrdude -cavrispv2 -patmega1280 -P/dev/ttyACM0 -b115200 -e -u -U lock:w:0x3F:m -U efuse:w:0xF5:m -U hfuse:w:0xDA:m -U lfuse:w:0xFF:m\n"
"avrdude -cavrispv2 -patmega1280 -P/dev/ttyACM0 -b115200 -U flash:w:ATmegaBOOT_168_atmega1280.hex\n"
"avrdude -cavrispv2 -patmega1280 -P/dev/ttyACM0 -b115200 -U lock:w:0x0F:m\n"
msgstr ""
"wget 'https://github.com/arduino/Arduino/raw/1.8.5/hardware/arduino/avr/bootloaders/atmega/ATmegaBOOT_168_atmega1280.hex'\n"
"\n"
"avrdude -cavrispv2 -patmega1280 -P/dev/ttyACM0 -b115200 -e -u -U lock:w:0x3F:m -U efuse:w:0xF5:m -U hfuse:w:0xDA:m -U lfuse:w:0xFF:m\n"
"avrdude -cavrispv2 -patmega1280 -P/dev/ttyACM0 -b115200 -U flash:w:ATmegaBOOT_168_atmega1280.hex\n"
"avrdude -cavrispv2 -patmega1280 -P/dev/ttyACM0 -b115200 -U lock:w:0x0F:m\n"

msgid ""
"avrdude -carduino -patmega1280 -P/dev/ttyACM0 -b57600 -D "
"-Uflash:w:out/klipper.elf.hex:i\n"
msgstr ""
"avrdude -carduino -patmega1280 -P/dev/ttyACM0 -b57600 -D "
"-Uflash:w:out/klipper.elf.hex:i\n"

msgid ""
"wget 'https://github.com/Lauszus/Sanguino/raw/1.0.2/bootloaders/optiboot/optiboot_atmega1284p.hex'\n"
"\n"
"avrdude -cavrispv2 -patmega1284p -P/dev/ttyACM0 -b115200 -e -u -U lock:w:0x3F:m -U efuse:w:0xFD:m -U hfuse:w:0xDE:m -U lfuse:w:0xFF:m\n"
"avrdude -cavrispv2 -patmega1284p -P/dev/ttyACM0 -b115200 -U flash:w:optiboot_atmega1284p.hex\n"
"avrdude -cavrispv2 -patmega1284p -P/dev/ttyACM0 -b115200 -U lock:w:0x0F:m\n"
msgstr ""
"wget 'https://github.com/Lauszus/Sanguino/raw/1.0.2/bootloaders/optiboot/optiboot_atmega1284p.hex'\n"
"\n"
"avrdude -cavrispv2 -patmega1284p -P/dev/ttyACM0 -b115200 -e -u -U lock:w:0x3F:m -U efuse:w:0xFD:m -U hfuse:w:0xDE:m -U lfuse:w:0xFF:m\n"
"avrdude -cavrispv2 -patmega1284p -P/dev/ttyACM0 -b115200 -U flash:w:optiboot_atmega1284p.hex\n"
"avrdude -cavrispv2 -patmega1284p -P/dev/ttyACM0 -b115200 -U lock:w:0x0F:m\n"

msgid ""
"avrdude -carduino -patmega1284p -P/dev/ttyACM0 -b115200 -D "
"-Uflash:w:out/klipper.elf.hex:i\n"
msgstr ""
"avrdude -carduino -patmega1284p -P/dev/ttyACM0 -b115200 -D "
"-Uflash:w:out/klipper.elf.hex:i\n"

msgid ""
"avrdude -carduino -patmega1284p -P/dev/ttyACM0 -b57600 -D "
"-Uflash:w:out/klipper.elf.hex:i\n"
msgstr ""
"avrdude -carduino -patmega1284p -P/dev/ttyACM0 -b57600 -D "
"-Uflash:w:out/klipper.elf.hex:i\n"

msgid "teensy_loader_cli --mcu=at90usb1286 out/klipper.elf.hex -v\n"
msgstr "teensy_loader_cli --mcu=at90usb1286 out/klipper.elf.hex -v\n"

msgid ""
"wget 'https://github.com/arduino/Arduino/raw/1.8.5/hardware/arduino/avr/bootloaders/optiboot/optiboot_atmega168.hex'\n"
"\n"
"avrdude -cavrispv2 -patmega168 -P/dev/ttyACM0 -b115200 -e -u -U lock:w:0x3F:m -U efuse:w:0x04:m -U hfuse:w:0xDD:m -U lfuse:w:0xFF:m\n"
"avrdude -cavrispv2 -patmega168 -P/dev/ttyACM0 -b115200 -U flash:w:optiboot_atmega168.hex\n"
"avrdude -cavrispv2 -patmega168 -P/dev/ttyACM0 -b115200 -U lock:w:0x0F:m\n"
msgstr ""
"wget 'https://github.com/arduino/Arduino/raw/1.8.5/hardware/arduino/avr/bootloaders/optiboot/optiboot_atmega168.hex'\n"
"\n"
"avrdude -cavrispv2 -patmega168 -P/dev/ttyACM0 -b115200 -e -u -U lock:w:0x3F:m -U efuse:w:0x04:m -U hfuse:w:0xDD:m -U lfuse:w:0xFF:m\n"
"avrdude -cavrispv2 -patmega168 -P/dev/ttyACM0 -b115200 -U flash:w:optiboot_atmega168.hex\n"
"avrdude -cavrispv2 -patmega168 -P/dev/ttyACM0 -b115200 -U lock:w:0x0F:m\n"

msgid ""
"avrdude -carduino -patmega168 -P/dev/ttyACM0 -b115200 -D "
"-Uflash:w:out/klipper.elf.hex:i\n"
msgstr ""
"avrdude -carduino -patmega168 -P/dev/ttyACM0 -b115200 -D "
"-Uflash:w:out/klipper.elf.hex:i\n"

msgid ""
"bossac -U -p /dev/ttyACM0 -a -e -w out/klipper.bin -v -b\n"
"bossac -U -p /dev/ttyACM0 -R\n"
msgstr ""
"bossac -U -p /dev/ttyACM0 -a -e -w out/klipper.bin -v -b\n"
"bossac -U -p /dev/ttyACM0 -R\n"

msgid "bossac --port=/dev/ttyACM0 -b -U -e -w -v -R out/klipper.bin\n"
msgstr "bossac --port=/dev/ttyACM0 -b -U -e -w -v -R out/klipper.bin\n"

msgid "source [find target/at91samdXX.cfg]\n"
msgstr "source [find target/at91samdXX.cfg]\n"

msgid ""
"wget 'https://github.com/arduino/ArduinoCore-"
"samd/raw/1.8.3/bootloaders/zero/samd21_sam_ba.bin'\n"
msgstr ""
"wget 'https://github.com/arduino/ArduinoCore-"
"samd/raw/1.8.3/bootloaders/zero/samd21_sam_ba.bin'\n"

msgid ""
"at91samd bootloader 0\n"
"program samd21_sam_ba.bin verify\n"
msgstr ""
"at91samd bootloader 0\n"
"program samd21_sam_ba.bin verify\n"

msgid "bossac -U -p /dev/ttyACM0 --offset=0x2000 -w out/klipper.bin -v -b -R\n"
msgstr "bossac -U -p /dev/ttyACM0 --offset=0x2000 -w out/klipper.bin -v -b -R\n"

msgid ""
"avrdude -c stk500v2 -p atmega2560 -P /dev/ttyACM0 -u "
"-Uflash:w:out/klipper.elf.hex:i\n"
msgstr ""
"avrdude -c stk500v2 -p atmega2560 -P /dev/ttyACM0 -u "
"-Uflash:w:out/klipper.elf.hex:i\n"

msgid "source [find target/atsame5x.cfg]\n"
msgstr "source [find target/atsame5x.cfg]\n"

msgid ""
"wget "
"'https://github.com/adafruit/uf2-samdx1/releases/download/v3.7.0/bootloader-"
"itsybitsy_m4-v3.7.0.bin'\n"
msgstr ""
"wget "
"'https://github.com/adafruit/uf2-samdx1/releases/download/v3.7.0/bootloader-"
"itsybitsy_m4-v3.7.0.bin'\n"

msgid ""
"at91samd bootloader 0\n"
"program bootloader-itsybitsy_m4-v3.7.0.bin verify\n"
"at91samd bootloader 16384\n"
msgstr ""
"at91samd bootloader 0\n"
"program bootloader-itsybitsy_m4-v3.7.0.bin verify\n"
"at91samd bootloader 16384\n"

msgid "bossac -U -p /dev/ttyACM0 --offset=0x4000 -w out/klipper.bin -v -b -R\n"
msgstr "bossac -U -p /dev/ttyACM0 --offset=0x4000 -w out/klipper.bin -v -b -R\n"

msgid "stm32flash -w out/klipper.bin -v -g 0 /dev/ttyAMA0\n"
msgstr "stm32flash -w out/klipper.bin -v -g 0 /dev/ttyAMA0\n"

msgid ""
"wget 'https://github.com/rogerclarkmelbourne/STM32duino-bootloader/raw/master/binaries/generic_boot20_pc13.bin'\n"
"\n"
"stm32flash -w generic_boot20_pc13.bin -v -g 0 /dev/ttyAMA0\n"
msgstr ""
"wget 'https://github.com/rogerclarkmelbourne/STM32duino-bootloader/raw/master/binaries/generic_boot20_pc13.bin'\n"
"\n"
"stm32flash -w generic_boot20_pc13.bin -v -g 0 /dev/ttyAMA0\n"

msgid "dfu-util -d 1eaf:0003 -a 2 -R -D out/klipper.bin\n"
msgstr "dfu-util -d 1eaf:0003 -a 2 -R -D out/klipper.bin\n"

msgid "source [find target/stm32f1x.cfg]\n"
msgstr "source [find target/stm32f1x.cfg]\n"

msgid "flash read_bank 0 btt_skr_mini_e3_backup.bin\n"
msgstr "flash read_bank 0 btt_skr_mini_e3_backup.bin\n"

msgid ""
"stm32f1x mass_erase 0\n"
"program hid_btt_skr_mini_e3.bin verify 0x08000000\n"
msgstr ""
"stm32f1x mass_erase 0\n"
"program hid_btt_skr_mini_e3.bin verify 0x08000000\n"

msgid ""
"You may need to hold down the reset button on the board while launching OpenOCD. It should display something like:Open On-Chip Debugger 0.10.0+dev-01204-gc60252ac-dirty (2020-04-27-16:00)\n"
"Licensed under GNU GPL v2\n"
"For bug reports, read\n"
"        http://openocd.org/doc/doxygen/bugs.html\n"
"DEPRECATED! use 'adapter speed' not 'adapter_khz'\n"
"Info : BCM2835 GPIO JTAG/SWD bitbang driver\n"
"Info : JTAG and SWD modes enabled\n"
"Info : clock speed 40 kHz\n"
"Info : SWD DPIDR 0x1ba01477\n"
"Info : stm32f1x.cpu: hardware has 6 breakpoints, 4 watchpoints\n"
"Info : stm32f1x.cpu: external reset detected\n"
"Info : starting gdb server for stm32f1x.cpu on 3333\n"
"Info : Listening on port 3333 for gdb connections\n"
msgstr ""
"You may need to hold down the reset button on the board while launching OpenOCD. It should display something like:Open On-Chip Debugger 0.10.0+dev-01204-gc60252ac-dirty (2020-04-27-16:00)\n"
"Licensed under GNU GPL v2\n"
"For bug reports, read\n"
"        http://openocd.org/doc/doxygen/bugs.html\n"
"DEPRECATED! use 'adapter speed' not 'adapter_khz'\n"
"Info : BCM2835 GPIO JTAG/SWD bitbang driver\n"
"Info : JTAG and SWD modes enabled\n"
"Info : clock speed 40 kHz\n"
"Info : SWD DPIDR 0x1ba01477\n"
"Info : stm32f1x.cpu: hardware has 6 breakpoints, 4 watchpoints\n"
"Info : stm32f1x.cpu: external reset detected\n"
"Info : starting gdb server for stm32f1x.cpu on 3333\n"
"Info : Listening on port 3333 for gdb connections\n"

msgid "After which you can release the reset button."
msgstr "Dopodiché puoi rilasciare il pulsante di reset."

msgid ""
"sudo apt install libusb-1.0\n"
"cd ~/klipper/lib/hidflash\n"
"make\n"
msgstr ""
"sudo apt install libusb-1.0\n"
"cd ~/klipper/lib/hidflash\n"
"make\n"

msgid "~/klipper/lib/hidflash/hid-flash ~/klipper/out/klipper.bin\n"
msgstr "~/klipper/lib/hidflash/hid-flash ~/klipper/out/klipper.bin\n"

msgid "make flash FLASH_DEVICE=1209:BEBA\n"
msgstr "make flash FLASH_DEVICE=1209:BEBA\n"

msgid "make flash FLASH_DEVICE=/dev/ttyACM0\n"
msgstr "make flash FLASH_DEVICE=/dev/ttyACM0\n"

msgid ""
"wget https://github.com/Arksine/STM32_HID_Bootloader/releases/download/v0.5-beta/hid_bootloader_SKR_PRO.bin\n"
"\n"
"stm32flash -w hid_bootloader_SKR_PRO.bin -v -g 0 /dev/ttyAMA0\n"
msgstr ""
"wget https://github.com/Arksine/STM32_HID_Bootloader/releases/download/v0.5-beta/hid_bootloader_SKR_PRO.bin\n"
"\n"
"stm32flash -w hid_bootloader_SKR_PRO.bin -v -g 0 /dev/ttyAMA0\n"

msgid ""
"sudo apt-get update\n"
"sudo apt-get install autoconf libtool telnet\n"
"mkdir ~/openocd\n"
"cd ~/openocd/\n"
"git clone http://openocd.zylin.com/openocd\n"
"cd openocd\n"
"./bootstrap\n"
"./configure --enable-sysfsgpio --enable-bcm2835gpio --prefix=/home/pi/openocd/install\n"
"make\n"
"make install\n"
msgstr ""
"sudo apt-get update\n"
"sudo apt-get install autoconf libtool telnet\n"
"mkdir ~/openocd\n"
"cd ~/openocd/\n"
"git clone http://openocd.zylin.com/openocd\n"
"cd openocd\n"
"./bootstrap\n"
"./configure --enable-sysfsgpio --enable-bcm2835gpio --prefix=/home/pi/openocd/install\n"
"make\n"
"make install\n"

msgid "nano ~/openocd/openocd.cfg\n"
msgstr "nano ~/openocd/openocd.cfg\n"

msgid ""
"# Uses RPi pins: GPIO25 for SWDCLK, GPIO24 for SWDIO, GPIO18 for nRST\n"
"source [find interface/raspberrypi2-native.cfg]\n"
"bcm2835gpio_swd_nums 25 24\n"
"bcm2835gpio_srst_num 18\n"
"transport select swd\n"
"\n"
"# Use hardware reset wire for chip resets\n"
"reset_config srst_only\n"
"adapter_nsrst_delay 100\n"
"adapter_nsrst_assert_width 100\n"
"\n"
"# Specify the chip type\n"
"source [find target/atsame5x.cfg]\n"
"\n"
"# Set the adapter speed\n"
"adapter_khz 40\n"
"\n"
"# Connect to chip\n"
"init\n"
"targets\n"
"reset halt\n"
msgstr ""
"# Uses RPi pins: GPIO25 for SWDCLK, GPIO24 for SWDIO, GPIO18 for nRST\n"
"source [find interface/raspberrypi2-native.cfg]\n"
"bcm2835gpio_swd_nums 25 24\n"
"bcm2835gpio_srst_num 18\n"
"transport select swd\n"
"\n"
"# Use hardware reset wire for chip resets\n"
"reset_config srst_only\n"
"adapter_nsrst_delay 100\n"
"adapter_nsrst_assert_width 100\n"
"\n"
"# Specify the chip type\n"
"source [find target/atsame5x.cfg]\n"
"\n"
"# Set the adapter speed\n"
"adapter_khz 40\n"
"\n"
"# Connect to chip\n"
"init\n"
"targets\n"
"reset halt\n"

msgid ""
"cd ~/openocd/\n"
"sudo ~/openocd/install/bin/openocd -f ~/openocd/openocd.cfg\n"
msgstr ""
"cd ~/openocd/\n"
"sudo ~/openocd/install/bin/openocd -f ~/openocd/openocd.cfg\n"

msgid "telnet 127.0.0.1 4444\n"
msgstr "telnet 127.0.0.1 4444\n"

msgid ""
"bindto 0.0.0.0\n"
"gdb_port 44444\n"
msgstr ""
"bindto 0.0.0.0\n"
"gdb_port 44444\n"

msgid ""
"cd /path/to/klipper/\n"
"gdb out/klipper.elf\n"
msgstr ""
"cd /path/to/klipper/\n"
"gdb out/klipper.elf\n"

msgid "target remote octopi:44444\n"
msgstr "target remote octopi:44444\n"

#: docs/Bootloaders.md:block 1 (header)
msgid "Bootloaders"
msgstr "Bootloader"

#: docs/Bootloaders.md:block 7 (paragraph)
msgid ""
"In general, the Arduino project is a good reference for bootloaders and "
"flashing procedures on the 8-bit Atmel Atmega micro-controllers. In "
"particular, the \"boards.txt\" file: "
"<https://github.com/arduino/Arduino/blob/1.8.5/hardware/arduino/avr/boards.txt>"
" is a useful reference."
msgstr ""
"In generale, il progetto Arduino è un buon riferimento per bootloader e "
"procedure di flashing sui microcontrollori Atmel Atmega a 8 bit. In "
"particolare, il file \"boards.txt\": "
"<https://github.com/arduino/Arduino/blob/1.8.5/hardware/arduino/avr/boards.txt>"
" è un utile riferimento."

#: docs/Bootloaders.md:block 32 (paragraph)
msgid ""
"The Teensy++ device from pjrc.com comes with a proprietary bootloader. It "
"requires a custom flashing tool from "
"<https://github.com/PaulStoffregen/teensy_loader_cli>. One can flash an "
"application with it using something like:"
msgstr ""
"Il dispositivo Teensy++ di pjrc.com viene fornito con un bootloader "
"proprietario. Richiede uno strumento di flashing personalizzato da "
"<https://github.com/PaulStoffregen/teensy_loader_cli>. Si può eseguire il "
"flashing di un'applicazione usando qualcosa come:"

#: docs/Bootloaders.md:block 42 (paragraph)
msgid ""
"The code at <https://github.com/shumatech/BOSSA> can be used to program the "
"SAM3. It is recommended to use version 1.9 or later."
msgstr ""
"Il codice in <https://github.com/shumatech/BOSSA> può essere utilizzato per "
"programmare il SAM3. Si consiglia di utilizzare la versione 1.9 o "
"successiva."

#: docs/Bootloaders.md:block 48 (paragraph)
msgid ""
"The code at <https://github.com/shumatech/BOSSA> can be used to program the "
"SAM4. It is necessary to use version `1.8.0` or higher."
msgstr ""
"Il codice in <https://github.com/shumatech/BOSSA> può essere utilizzato per "
"programmare il SAM4. È necessario utilizzare la versione `1.8.0` o "
"successiva."

#: docs/Bootloaders.md:block 66 (paragraph)
msgid ""
"Obtain a bootloader - several bootloaders are available from "
"<https://github.com/adafruit/uf2-samdx1/releases/latest>. For example:"
msgstr ""
"Ottieni un bootloader: diversi bootloader sono disponibili da "
"<https://github.com/adafruit/uf2-samdx1/releases/latest>. Per esempio:"

#: docs/Bootloaders.md:block 78 (paragraph)
msgid ""
"The \"stm32duino\" project has a USB capable bootloader - see: "
"<https://github.com/rogerclarkmelbourne/STM32duino-bootloader>"
msgstr ""
"Il progetto \"stm32duino\" ha un bootloader compatibile con USB - vedere: "
"<https://github.com/rogerclarkmelbourne/STM32duino-bootloader>"

#: docs/Bootloaders.md:block 113 (paragraph)
msgid ""
"This document does not describe the method to flash a bootloader itself - "
"see: <http://smoothieware.org/flashing-the-bootloader> for further "
"information on that topic."
msgstr ""
"Questo documento non descrive il metodo per eseguire il flashing di un "
"bootloader stesso - vedere: <http://smoothieware.org/flashing-the-"
"bootloader> per ulteriori informazioni su questo argomento."

#: docs/Bootloaders.md:block 114 (paragraph)
msgid ""
"It is common for Smoothieboards to come with a bootloader from: "
"<https://github.com/triffid/LPC17xx-DFU-Bootloader>. When using this "
"bootloader the application must be compiled with a start address of 16KiB. "
"The easiest way to flash an application with this bootloader is to copy the "
"application file (eg, `out/klipper.bin`) to a file named `firmware.bin` on "
"an SD card, and then to reboot the micro-controller with that SD card."
msgstr ""
"È comune che per le Smoothieboard venga fornito con un bootloader da: "
"<https://github.com/triffid/LPC17xx-DFU-Bootloader>. Quando si utilizza "
"questo bootloader, l'applicazione deve essere compilata con un indirizzo "
"iniziale di 16 KiB. Il modo più semplice per eseguire il flashing di "
"un'applicazione con questo bootloader è copiare il file dell'applicazione "
"(ad es. `out/klipper.bin`) in un file denominato `firmware.bin` su una "
"scheda SD, quindi riavviare il microcontrollore con quella scheda SD."

#: docs/Bootloaders.md:block 117 (paragraph)
msgid ""
"This section describes how one can install and launch OpenOCD. It is derived"
" from the instructions at: <https://learn.adafruit.com/programming-"
"microcontrollers-using-openocd-on-raspberry-pi>"
msgstr ""
"Questa sezione descrive come installare e avviare OpenOCD. È derivato dalle "
"istruzioni su: <https://learn.adafruit.com/programming-microcontrollers-"
"using-openocd-on-raspberry-pi>"

#: docs/Bootloaders.md:block 75 (paragraph)
msgid ""
"Note that if one is using a Raspberry Pi for the 3.3V serial, the stm32flash"
" protocol uses a serial parity mode which the Raspberry Pi's \"mini UART\" "
"does not support. See "
"<https://www.raspberrypi.com/documentation/computers/configuration.html#configuring-"
"uarts> for details on enabling the full uart on the Raspberry Pi GPIO pins."
msgstr ""
"Si noti che se si utilizza un Raspberry Pi per la seriale da 3,3 V, il "
"protocollo stm32flash utilizza una modalità di parità seriale che il \"mini "
"UART\" di Raspberry Pi non supporta. Vedere "
"<https://www.raspberrypi.com/documentation/computers/configuration.html#configuring-"
"uarts> per i dettagli sull'abilitazione dell'uart completo sui pin GPIO di "
"Raspberry Pi."

#: docs/Bootloaders.md:block 85 (paragraph)
msgid ""
"The [HID bootloader](https://github.com/Serasidis/STM32_HID_Bootloader) is a"
" compact, driverless bootloader capable of flashing over USB. Also available"
" is a [fork with builds specific to the SKR Mini E3 "
"1.2](https://github.com/Arksine/STM32_HID_Bootloader/releases/latest)."
msgstr ""
"Il [bootloader HID](https://github.com/Serasidis/STM32_HID_Bootloader) è un "
"bootloader compatto e senza driver in grado di eseguire il flashing "
"attraverso USB. È inoltre disponibile un [fork con build specifiche per SKR "
"Mini E3 "
"1.2](https://github.com/Arksine/STM32_HID_Bootloader/releases/latest)."

#: docs/Bootloaders.md:block 106 (paragraph)
msgid ""
"STM32F4 microcontrollers come equipped with a built-in system bootloader "
"capable of flashing over USB (via DFU), 3.3v Serial, and various other "
"methods (see STM Document AN2606 for more information). Some STM32F4 boards,"
" such as the SKR Pro 1.1, are not able to enter the DFU bootloader. The HID "
"bootloader is available for STM32F405/407 based boards should the user "
"prefer flashing over USB over using the sdcard. Note that you may need to "
"configure and build a version specific to your board, a [build for the SKR "
"Pro 1.1 is available "
"here](https://github.com/Arksine/STM32_HID_Bootloader/releases/latest)."
msgstr ""
"I microcontrollori STM32F4 sono dotati di un bootloader di sistema integrato"
" in grado di eseguire il flashing su USB (tramite DFU), seriale 3.3v e vari "
"altri metodi (consultare il documento STM AN2606 per ulteriori "
"informazioni). Alcune schede STM32F4, come SKR Pro 1.1, non sono in grado di"
" accedere al bootloader DFU. Il bootloader HID è disponibile per schede "
"basate su STM32F405/407 nel caso in cui l'utente preferisca eseguire il "
"flashing su USB anziché utilizzare la scheda SD. Tieni presente che potrebbe"
" essere necessario configurare e creare una versione specifica per la tua "
"scheda, una [build per SKR Pro 1.1 è disponibile "
"qui](https://github.com/Arksine/STM32_HID_Bootloader/releases/latest)."

#: docs/Bootloaders.md:block 105 (header)
msgid "STM32F103/STM32F072 with MSC bootloader"
msgstr "STM32F103/STM32F072 con bootloader MSC"

#: docs/Bootloaders.md:block 106 (paragraph)
msgid ""
"The [MSC bootloader](https://github.com/Telekatz/MSC-stm32f103-bootloader) "
"is a driverless bootloader capable of flashing over USB."
msgstr ""
"Il [bootloader MSC](https://github.com/Telekatz/MSC-stm32f103-bootloader) è "
"un bootloader senza driver in grado di eseguire il flashing su USB."

#: docs/Bootloaders.md:block 107 (paragraph)
msgid ""
"It is possible to flash the bootloader via 3.3v serial using stm32flash as "
"noted in the stm32duino section above, substituting the file name for the "
"desired MSC bootloader binary (ie: MSCboot-Bluepill.bin for the blue pill)."
msgstr ""
"È possibile eseguire il flashing del bootloader tramite seriale 3.3v usando "
"stm32flash come indicato nella sezione stm32duino sopra, sostituendo il nome"
" del file con il file binario del bootloader MSC desiderato (es: MSCboot-"
"Bluepill.bin per la Blue pill)."

#: docs/Bootloaders.md:block 108 (paragraph)
msgid ""
"For STM32F072 boards it is also possible to flash the bootloader over USB "
"(via DFU) with something like:"
msgstr ""
"Per le schede STM32F072 è anche possibile eseguire il flashing del "
"bootloader su USB (tramite DFU) con qualcosa del tipo:"

#: docs/Bootloaders.md:block 109 (code)
msgid ""
" dfu-util -d 0483:df11 -a 0 -R -D  MSCboot-STM32F072.bin "
"-s0x08000000:leave\n"
msgstr ""
" dfu-util -d 0483:df11 -a 0 -R -D MSCboot-STM32F072.bin -s0x08000000:leave\n"

#: docs/Bootloaders.md:block 110 (paragraph)
msgid ""
"This bootloader uses 8KiB or 16KiB of flash space, see description of the "
"bootloader (the application must be compiled with with the corresponding "
"starting address)."
msgstr ""
"Questo bootloader utilizza 8KiB o 16KiB di spazio flash, vedere la "
"descrizione del bootloader (l'applicazione deve essere compilata con "
"l'indirizzo iniziale corrispondente)."

#: docs/Bootloaders.md:block 111 (paragraph)
msgid ""
"The bootloader can be activated by pressing the reset button of the board "
"twice. As soon as the bootloader is activated, the board appears as a USB "
"flash drive onto which the klipper.bin file can be copied."
msgstr ""
"Il bootloader può essere attivato premendo due volte il pulsante di reset "
"della scheda. Non appena il bootloader viene attivato, la scheda appare come"
" una chiavetta USB su cui è possibile copiare il file klipper.bin."

#: docs/Bootloaders.md:block 73 (paragraph)
msgid ""
"The STM32F103 devices have a ROM that can flash a bootloader or application "
"via 3.3V serial. Typically one would wire the PA10 (MCU Rx) and PA9 (MCU Tx)"
" pins to a 3.3V UART adapter. To access the ROM, one should connect the "
"\"boot 0\" pin to high and \"boot 1\" pin to low, and then reset the device."
" The \"stm32flash\" package can then be used to flash the device using "
"something like:"
msgstr ""
"I dispositivi STM32F103 dispongono di una ROM che può eseguire il flashing "
"di un bootloader o di un'applicazione tramite seriale a 3,3 V. In genere si "
"collegano i pin PA10 (MCU Rx) e PA9 (MCU Tx) a un adattatore UART da 3,3 V. "
"Per accedere alla ROM, è necessario collegare il pin \"boot 0\" in alto e il"
" pin \"boot 1\" in basso, quindi ripristinare il dispositivo. Il pacchetto "
"\"stm32flash\" può quindi essere utilizzato per eseguire il flashing del "
"dispositivo utilizzando qualcosa come:"

#: docs/Bootloaders.md:block 112 (header)
msgid "STM32F103/STM32F0x2 with CanBoot bootloader"
msgstr "STM32F103/STM32F0x2 con bootloader CanBoot"

#: docs/Bootloaders.md:block 113 (paragraph)
msgid ""
"The [CanBoot](https://github.com/Arksine/CanBoot) bootloader provides an "
"option for uploading Klipper firmware over the CANBUS. The bootloader itself"
" is derived from Klipper's source code. Currently CanBoot supports the "
"STM32F103, STM32F042, and STM32F072 models."
msgstr ""
"Il bootloader [CanBoot](https://github.com/Arksine/CanBoot) fornisce "
"un'opzione per caricare il firmware Klipper su CANBUS. Il bootloader stesso "
"è derivato dal codice sorgente di Klipper. Attualmente CanBoot supporta i "
"modelli STM32F103, STM32F042 e STM32F072."

#: docs/Bootloaders.md:block 114 (paragraph)
msgid ""
"It is recommended to use a ST-Link Programmer to flash CanBoot, however it "
"should be possible to flash using `stm32flash` on STM32F103 devices, and "
"`dfu-util` on STM32F042/STM32F072 devices. See the previous sections in this"
" document for instructions on these flashing methods, substituting "
"`canboot.bin` for the file name where appropriate. The CanBoot repo linked "
"above provides instructions for building the bootloader."
msgstr ""
"Si consiglia di utilizzare un programmatore ST-Link per eseguire il flashing"
" di CanBoot, tuttavia dovrebbe essere possibile eseguire il flashing "
"utilizzando `stm32flash` sui dispositivi STM32F103 e `dfu-util` sui "
"dispositivi STM32F042/STM32F072. Vedere le sezioni precedenti di questo "
"documento per istruzioni su questi metodi di flashing, sostituendo "
"`canboot.bin` per il nome del file ove appropriato. Il link al repository "
"CanBoot collegato sopra fornisce istruzioni per la creazione del bootloader."

#: docs/Bootloaders.md:block 115 (paragraph)
msgid ""
"The first time CanBoot has been flashed it should detect that no application"
" is present and enter the bootloader. If this doesn't occur it is possible "
"to enter the bootloader by pressing the reset button twice in succession."
msgstr ""
"La prima volta che CanBoot è stato flashato, dovrebbe rilevare che non è "
"presente alcuna applicazione e accedere al bootloader. Se ciò non accade è "
"possibile entrare nel bootloader premendo due volte di seguito il pulsante "
"di reset."

#: docs/Bootloaders.md:block 116 (paragraph)
msgid ""
"The `flash_can.py` utility supplied in the `lib/canboot` folder may be used "
"to upload Klipper firmware. The device UUID is necessary to flash. If you do"
" not have a UUID it is possible to query nodes currently running the "
"bootloader:"
msgstr ""
"L'utilità `flash_can.py` fornita nella cartella `lib/canboot` può essere "
"utilizzata per caricare il firmware di Klipper. E' necessario l'UUID del "
"dispositivo per eseguire il flashing. Se non si dispone di un UUID è "
"possibile interrogare i nodi che attualmente eseguono il bootloader:"

#: docs/Bootloaders.md:block 117 (code)
msgid "python3 flash_can.py -q\n"
msgstr "python3 flash_can.py -q\n"

#: docs/Bootloaders.md:block 118 (paragraph)
msgid ""
"This will return UUIDs for all connected nodes not currently assigned a "
"UUID. This should include all nodes currently in the bootloader."
msgstr ""
"Ciò restituirà gli UUID per tutti i nodi collegati non attualmente assegnati"
" a un UUID. Questo dovrebbe includere tutti i nodi attualmente nel "
"bootloader."

#: docs/Bootloaders.md:block 119 (paragraph)
msgid "Once you have a UUID, you may upload firmware with following command:"
msgstr ""
"Una volta che hai un UUID, puoi caricare il firmware con il seguente "
"comando:"

#: docs/Bootloaders.md:block 120 (code)
msgid ""
"python3 flash_can.py -i can0 -f ~/klipper/out/klipper.bin -u aabbccddeeff\n"
msgstr ""
"python3 flash_can.py -i can0 -f ~/klipper/out/klipper.bin -u aabbccddeeff\n"

#: docs/Bootloaders.md:block 121 (paragraph)
msgid ""
"Where `aabbccddeeff` is replaced by your UUID. Note that the `-i` and `-f` "
"options may be omitted, they default to `can0` and "
"`~/klipper/out/klipper.bin` respectively."
msgstr ""
"Dove `aabbccddeeff` è sostituito dal tuo UUID. Nota che le opzioni `-i` e "
"`-f` possono essere omesse, per impostazione predefinita sono "
"rispettivamente `can0` e `~/klipper/out/klipper.bin`."

#: docs/Bootloaders.md:block 122 (paragraph)
msgid ""
"When building Klipper for use with CanBoot, select the 8 KiB Bootloader "
"option."
msgstr ""
"Quando crei Klipper per l'uso con CanBoot, seleziona l'opzione Bootloader da"
" 8 KiB."

#~ msgid ""
#~ "The STM32F103 devices have a ROM that can flash a bootloader or application "
#~ "via 3.3V serial. To access this ROM, one should connect the \"boot 0\" pin "
#~ "to high and \"boot 1\" pin to low, and then reset the device. The "
#~ "\"stm32flash\" package can then be used to flash the device using something "
#~ "like:"
#~ msgstr ""

#~ msgid ""
#~ "The [HID bootloader](https://github.com/Serasidis/STM32_HID_Bootloader) is a"
#~ " compact, driverless bootloader capable of flashing over USB. Also available"
#~ " is a [fork with builds specific to the SKR Mini E3 "
#~ "1.2](https://github.com/Arksine/STM32_HID_Bootloader/releases/tag/v0.5-beta)."
#~ msgstr ""

#~ msgid ""
#~ "STM32F4 microcontrollers come equipped with a built-in system bootloader "
#~ "capable of flashing over USB (via DFU), 3.3v Serial, and various other "
#~ "methods (see STM Document AN2606 for more information). Some STM32F4 boards,"
#~ " such as the SKR Pro 1.1, are not able to enter the DFU bootloader. The HID "
#~ "bootloader is available for STM32F405/407 based boards should the user "
#~ "prefer flashing over USB over using the sdcard. Note that you may need to "
#~ "configure and build a version specific to your board, a [build for the SKR "
#~ "Pro 1.1 is available "
#~ "here](https://github.com/Arksine/STM32_HID_Bootloader/releases/tag/v0.5-beta)."
#~ msgstr ""

#~ msgid ""
#~ "Note that if one is using a Raspberry Pi for the 3.3V serial, the stm32flash"
#~ " protocol uses a serial parity mode which the Raspberry Pi's \"miniuart\" "
#~ "does not support. See "
#~ "<https://www.raspberrypi.org/documentation/configuration/uart.md> for "
#~ "details on enabling the full uart on the Raspberry Pi GPIO pins."
#~ msgstr ""

#~ msgid ""
#~ "In general, the Arduino project is a good reference for bootloaders and "
#~ "flashing procedures on the 8-bit Atmel Atmega micro-controllers. In "
#~ "particular, the \"boards.txt\" file: "
#~ "[https://github.com/arduino/Arduino/blob/1.8.5/hardware/arduino/avr/boards.txt](https://github.com/arduino/Arduino/blob/1.8.5/hardware/arduino/avr/boards.txt)"
#~ " is a useful reference."
#~ msgstr ""

#~ msgid ""
#~ "The Teensy++ device from pjrc.com comes with a proprietary bootloader. It "
#~ "requires a custom flashing tool from "
#~ "[https://github.com/PaulStoffregen/teensy_loader_cli](https://github.com/PaulStoffregen/teensy_loader_cli)."
#~ " One can flash an application with it using something like:"
#~ msgstr ""

#~ msgid ""
#~ "The code at "
#~ "[https://github.com/shumatech/BOSSA](https://github.com/shumatech/BOSSA) can"
#~ " be used to program the SAM3. It is recommended to use version 1.9 or later."
#~ msgstr ""

#~ msgid ""
#~ "The code at "
#~ "[https://github.com/shumatech/BOSSA](https://github.com/shumatech/BOSSA) can"
#~ " be used to program the SAM4. It is necessary to use version `1.8.0` or "
#~ "higher."
#~ msgstr ""

#~ msgid ""
#~ "Obtain a bootloader - several bootloaders are available from "
#~ "[https://github.com/adafruit/uf2-samdx1/releases/latest](https://github.com/adafruit/uf2-samdx1/releases/latest)."
#~ " For example:"
#~ msgstr ""

#~ msgid ""
#~ "Note that if one is using a Raspberry Pi for the 3.3V serial, the stm32flash"
#~ " protocol uses a serial parity mode which the Raspberry Pi's \"miniuart\" "
#~ "does not support. See "
#~ "[https://www.raspberrypi.org/documentation/configuration/uart.md](https://www.raspberrypi.org/documentation/configuration/uart.md)"
#~ " for details on enabling the full uart on the Raspberry Pi GPIO pins."
#~ msgstr ""

#~ msgid ""
#~ "The \"stm32duino\" project has a USB capable bootloader - see: "
#~ "[https://github.com/rogerclarkmelbourne/STM32duino-"
#~ "bootloader](https://github.com/rogerclarkmelbourne/STM32duino-bootloader)"
#~ msgstr ""

#~ msgid ""
#~ "This document does not describe the method to flash a bootloader itself - "
#~ "see: [http://smoothieware.org/flashing-the-"
#~ "bootloader](http://smoothieware.org/flashing-the-bootloader) for further "
#~ "information on that topic."
#~ msgstr ""

#~ msgid ""
#~ "It is common for Smoothieboards to come with a bootloader from: "
#~ "[https://github.com/triffid/LPC17xx-DFU-"
#~ "Bootloader](https://github.com/triffid/LPC17xx-DFU-Bootloader). When using "
#~ "this bootloader the application must be compiled with a start address of "
#~ "16KiB. The easiest way to flash an application with this bootloader is to "
#~ "copy the application file (eg, `out/klipper.bin`) to a file named "
#~ "`firmware.bin` on an SD card, and then to reboot the micro-controller with "
#~ "that SD card."
#~ msgstr ""

#~ msgid ""
#~ "This section describes how one can install and launch OpenOCD. It is derived"
#~ " from the instructions at: [https://learn.adafruit.com/programming-"
#~ "microcontrollers-using-openocd-on-raspberry-"
#~ "pi](https://learn.adafruit.com/programming-microcontrollers-using-openocd-"
#~ "on-raspberry-pi)"
#~ msgstr ""

#~ msgid ""
#~ "You may need to hold down the reset button on the board while launching "
#~ "OpenOCD. It should display something like:After which you can release the "
#~ "reset button."
#~ msgstr ""
