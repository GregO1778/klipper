# Dex94 <Dasvaresu@dr.com>, 2022.
# Ale Ale <ale.99.ale@gmail.com>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-08-18 04:18+0000\n"
"Last-Translator: Ale Ale <ale.99.ale@gmail.com>\n"
"Language-Team: Italian <https://hosted.weblate.org/projects/klipper/canbus_protocol/it/>\n"
"Language: it\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.14-dev\n"

msgid "Micro-controller id assignment"
msgstr "Assegnazione dell'id del microcontrollore"

msgid ""
"Klipper uses only CAN 2.0A standard size CAN bus packets, which are limited "
"to 8 data bytes and an 11-bit CAN bus identifier. In order to support "
"efficient communication, each micro-controller is assigned at run-time a "
"unique 1-byte CAN bus nodeid (`canbus_nodeid`) for general Klipper command "
"and response traffic. Klipper command messages going from host to micro-"
"controller use the CAN bus id of `canbus_nodeid * 2 + 256`, while Klipper "
"response messages from micro-controller to host use `canbus_nodeid * 2 + 256"
" + 1`."
msgstr ""
"Klipper utilizza solo pacchetti CAN bus di dimensioni standard CAN 2.0A, che"
" sono limitati a 8 byte di dati e un identificatore bus CAN a 11 bit. Per "
"supportare una comunicazione efficiente, a ogni microcontrollore viene "
"assegnato in fase di esecuzione un ID nodo bus CAN univoco a 1 byte "
"(\"canbus_nodeid\") per il traffico generale di comandi e risposte Klipper. "
"I messaggi di comando di Klipper che vanno dall'host al microcontrollore "
"utilizzano l'ID bus CAN di `canbus_nodeid * 2 + 256`, mentre i messaggi di "
"risposta di Klipper dal microcontrollore all'host usano `canbus_nodeid * 2 +"
" 256 + 1`."

msgid ""
"Each micro-controller has a factory assigned unique chip identifier that is "
"used during id assignment. This identifier can exceed the length of one CAN "
"packet, so a hash function is used to generate a unique 6-byte id "
"(`canbus_uuid`) from the factory id."
msgstr ""
"Ogni microcontrollore ha un identificatore di chip univoco assegnato in "
"fabbrica che viene utilizzato durante l'assegnazione dell'ID. Questo "
"identificatore può superare la lunghezza di un pacchetto CAN, quindi una "
"funzione hash viene utilizzata per generare un ID univoco a 6 byte "
"(`canbus_uuid`) dall'ID di fabbrica."

msgid "Admin messages"
msgstr "Messaggi dell'amministratore"

msgid ""
"Admin messages are used for id assignment. Admin messages sent from host to "
"micro-controller use the CAN bus id `0x3f0` and messages sent from micro-"
"controller to host use the CAN bus id `0x3f1`. All micro-controllers listen "
"to messages on id `0x3f0`; that id can be thought of as a \"broadcast "
"address\"."
msgstr ""
"I messaggi dell'amministratore vengono utilizzati per l'assegnazione "
"dell'ID. I messaggi di amministrazione inviati dall'host al microcontrollore"
" utilizzano l'ID bus CAN \"0x3f0\" e i messaggi inviati dal microcontrollore"
" all'host utilizzano l'ID bus CAN \"0x3f1\". Tutti i microcontrollori "
"ascoltano i messaggi sull'id `0x3f0`; quell'ID può essere considerato un "
"\"indirizzo di trasmissione\"."

msgid "CMD_QUERY_UNASSIGNED message"
msgstr "messaggio CMD_QUERY_UNASSIGNED"

msgid ""
"This command queries all micro-controllers that have not yet been assigned a"
" `canbus_nodeid`. Unassigned micro-controllers will respond with a "
"RESP_NEED_NODEID response message."
msgstr ""
"Questo comando interroga tutti i microcontrollori a cui non è stato ancora "
"assegnato un `canbus_nodeid`. I microcontrollori non assegnati risponderanno"
" con un messaggio di risposta RESP_NEED_NODEID."

msgid ""
"The CMD_QUERY_UNASSIGNED message format is: `<1-byte message_id = 0x00>`"
msgstr ""
"Il formato del messaggio CMD_QUERY_UNASSIGNED è: `<1 byte message_id = "
"0x00>`"

msgid ""
"This command assigns a `canbus_nodeid` to the micro-controller with a given "
"`canbus_uuid`."
msgstr ""
"Questo comando assegna un `canbus_nodeid` al microcontrollore con un dato "
"`canbus_uuid`."

msgid "RESP_NEED_NODEID message"
msgstr "Messaggio RESP_NEED_NODEID"

msgid "Data Packets"
msgstr "Pacchetti dati"

msgid ""
"The packet data in messages using the node's receive CAN bus id "
"(`canbus_nodeid * 2 + 256`) are simply appended to a buffer, and when a "
"complete [mcu protocol message](Protocol.md) is found its contents are "
"parsed and processed. The data is treated as a byte stream - there is no "
"requirement for the start of a Klipper message block to align with the start"
" of a CAN bus packet."
msgstr ""
"I dati del pacchetto nei messaggi che utilizzano l'ID bus CAN di ricezione "
"del nodo (`canbus_nodeid * 2 + 256`) vengono semplicemente aggiunti a un "
"buffer e quando viene trovato un [mcu protocol message](Protocol.md) "
"completo, il suo contenuto viene analizzato ed elaborato . I dati vengono "
"trattati come un flusso di byte: non è necessario che l'inizio di un blocco "
"di messaggi Klipper sia allineato con l'inizio di un pacchetto bus CAN."

msgid ""
"Similarly, mcu protocol message responses are sent from micro-controller to "
"host by copying the message data into one or more packets with the node's "
"transmit CAN bus id (`canbus_nodeid * 2 + 256 + 1`)."
msgstr ""
"Allo stesso modo, le risposte ai messaggi del protocollo mcu vengono inviate"
" dal microcontrollore all'host copiando i dati del messaggio in uno o più "
"pacchetti con l'ID del bus CAN di trasmissione del nodo (`canbus_nodeid * 2 "
"+ 256 + 1`)."

#: docs/CANBUS_protocol.md:block 1 (header)
msgid "CANBUS protocol"
msgstr "Protocollo CANBUS"

#: docs/CANBUS_protocol.md:block 2 (paragraph)
msgid ""
"This document describes the protocol Klipper uses to communicate over [CAN "
"bus](https://en.wikipedia.org/wiki/CAN_bus). See <CANBUS.md> for information"
" on configuring Klipper with CAN bus."
msgstr ""
"Questo documento descrive il protocollo utilizzato da Klipper per comunicare"
" su [CAN bus](https://en.wikipedia.org/wiki/CAN_bus). Vedere <CANBUS.md> per"
" informazioni sulla configurazione di Klipper con CANBUS."

#: docs/CANBUS_protocol.md:block 11 (header)
msgid "CMD_SET_KLIPPER_NODEID message"
msgstr "CMD_SET_KLIPPER_NODEID messaggio"

#: docs/CANBUS_protocol.md:block 13 (paragraph)
msgid ""
"The CMD_SET_KLIPPER_NODEID message format is: `<1-byte message_id = "
"0x01><6-byte canbus_uuid><1-byte canbus_nodeid>`"
msgstr ""
"Il formato del messaggio CMD_SET_KLIPPER_NODEID è: `<1-byte message_id = "
"0x01><6-byte canbus_uuid><1-byte canbus_nodeid>`"

#: docs/CANBUS_protocol.md:block 15 (paragraph)
msgid ""
"The RESP_NEED_NODEID message format is: `<1-byte message_id = 0x20><6-byte "
"canbus_uuid><1-byte set_klipper_nodeid = 0x01>`"
msgstr ""
"Il formato del messaggio RESP_NEED_NODEID è: `<1-byte message_id = "
"0x20><6-byte canbus_uuid><1-byte set_klipper_nodeid = 0x01>`"

#: docs/CANBUS_protocol.md:block 17 (paragraph)
msgid ""
"A micro-controller that has been assigned a nodeid via the "
"CMD_SET_KLIPPER_NODEID command can send and receive data packets."
msgstr ""
"Un microcontrollore a cui è stato assegnato un nodeid tramite il comando "
"CMD_SET_KLIPPER_NODEID può inviare e ricevere pacchetti di dati."

#~ msgid "CMD_SET_NODEID message"
#~ msgstr "Messaggio CMD_SET_NODEID"

#~ msgid ""
#~ "The CMD_SET_NODEID message format is: `<1-byte message_id = 0x01><6-byte "
#~ "canbus_uuid><1-byte canbus_nodeid>`"
#~ msgstr ""
#~ "Il formato del messaggio CMD_SET_NODEID è: `<1-byte message_id = "
#~ "0x01><6-byte canbus_uuid><1-byte canbus_nodeid>`"

#~ msgid ""
#~ "The RESP_NEED_NODEID message format is: `<1-byte message_id = 0x20><6-byte "
#~ "canbus_uuid>`"
#~ msgstr ""
#~ "Il formato del messaggio RESP_NEED_NODEID è: `<1-byte message_id = "
#~ "0x20><6-byte canbus_uuid>`"

#~ msgid ""
#~ "A micro-controller that has been assigned a nodeid via the CMD_SET_NODEID "
#~ "command can send and receive data packets."
#~ msgstr ""
#~ "Un microcontrollore a cui è stato assegnato un nodeid tramite il comando "
#~ "CMD_SET_NODEID può inviare e ricevere pacchetti di dati."

#~ msgid ""
#~ "This document describes the protocol Klipper uses to communicate over [CAN "
#~ "bus](https://en.wikipedia.org/wiki/CAN_bus). See [CANBUS.md](CANBUS.md) for "
#~ "information on configuring Klipper with CAN bus."
#~ msgstr ""
