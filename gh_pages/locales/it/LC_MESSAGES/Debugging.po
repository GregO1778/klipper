# Dex94 <Dasvaresu@dr.com>, 2022.
# Ale Ale <ale.99.ale@gmail.com>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-08-10 04:19+0000\n"
"Last-Translator: Ale Ale <ale.99.ale@gmail.com>\n"
"Language-Team: Italian <https://hosted.weblate.org/projects/klipper/debugging/it/>\n"
"Language: it\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.14-dev\n"

msgid "This document describes some of the Klipper debugging tools."
msgstr "Questo documento descrive alcuni degli strumenti di debug di Klipper."

msgid "Translating gcode files to micro-controller commands"
msgstr "Traduzione di file gcode in comandi del microcontrollore"

msgid ""
"The Klippy host code can run in a batch mode to produce the low-level micro-"
"controller commands associated with a gcode file. Inspecting these low-level"
" commands is useful when trying to understand the actions of the low-level "
"hardware. It can also be useful to compare the difference in micro-"
"controller commands after a code change."
msgstr ""
"Il codice host Klippy può essere eseguito in modalità batch per produrre i "
"comandi del microcontrollore di basso livello associati a un file gcode. "
"L'ispezione di questi comandi di basso livello è utile quando si cerca di "
"comprendere le azioni dell'hardware di basso livello. Può anche essere utile"
" confrontare la differenza nei comandi del microcontrollore dopo una "
"modifica del codice."

msgid ""
"To run Klippy in this batch mode, there is a one time step necessary to "
"generate the micro-controller \"data dictionary\". This is done by compiling"
" the micro-controller code to obtain the **out/klipper.dict** file:"
msgstr ""
"Per eseguire Klippy in questa modalità batch, è necessario un passaggio per "
"generare il \"dizionario dati\" del microcontrollore. Questo viene fatto "
"compilando il codice del microcontrollore per ottenere il file "
"**out/klipper.dict**:"

msgid ""
"Once the above is done it is possible to run Klipper in batch mode (see "
"[installation](Installation.md) for the steps necessary to build the python "
"virtual environment and a printer.cfg file):"
msgstr ""
"Una volta fatto quanto sopra è possibile eseguire Klipper in modalità batch "
"(vedi [installazione](Installation.md) per i passaggi necessari per "
"costruire l'ambiente virtuale python e un file printer.cfg):"

msgid ""
"The above will produce a file **test.serial** with the binary serial output."
" This output can be translated to readable text with:"
msgstr ""
"Quanto sopra produrrà un file **test.serial** con output seriale binario. "
"Questo output può essere tradotto in testo leggibile con:"

msgid ""
"The resulting file **test.txt** contains a human readable list of micro-"
"controller commands."
msgstr ""
"Il file risultante **test.txt** contiene un elenco leggibile di comandi del "
"microcontrollore."

msgid ""
"The batch mode disables certain response / request commands in order to "
"function. As a result, there will be some differences between actual "
"commands and the above output. The generated data is useful for testing and "
"inspection; it is not useful for sending to a real micro-controller."
msgstr ""
"La modalità batch disabilita alcuni comandi di risposta/richiesta per "
"funzionare. Di conseguenza, ci saranno alcune differenze tra i comandi "
"effettivi e l'output sopra. I dati generati sono utili per il test e "
"l'ispezione; non è utile per l'invio a un vero microcontrollore."

msgid "Testing with simulavr"
msgstr "Test con simulavr"

msgid ""
"The [simulavr](http://www.nongnu.org/simulavr/) tool enables one to simulate"
" an Atmel ATmega micro-controller. This section describes how one can run "
"test gcode files through simulavr. It is recommended to run this on a "
"desktop class machine (not a Raspberry Pi) as it does require significant "
"cpu to run efficiently."
msgstr ""
"Lo strumento [simulavr](http://www.nongnu.org/simulavr/) consente di "
"simulare un microcontrollore Atmel ATmega. Questa sezione descrive come "
"eseguire test di file gcode tramite simulavr. Si consiglia di eseguirlo su "
"una macchina di classe desktop (non un Raspberry Pi) poiché richiede una CPU"
" significativa per funzionare in modo efficiente."

msgid "To compile Klipper for use in simulavr, run:"
msgstr "Per compilare Klipper per l'uso in simulavr, eseguire:"

msgid ""
"Then, with simulavr running in another window, one can run the following to "
"read gcode from a file (eg, \"test.gcode\"), process it with Klippy, and "
"send it to Klipper running in simulavr (see [installation](Installation.md) "
"for the steps necessary to build the python virtual environment):"
msgstr ""
"Quindi, con simulavr in esecuzione in un'altra finestra, è possibile "
"eseguire quanto segue per leggere gcode da un file (ad es. \"test.gcode\"), "
"elaborarlo con Klippy e inviarlo a Klipper in esecuzione in simulavr (vedere"
" [installazione](Installazione .md) per i passaggi necessari per costruire "
"l'ambiente virtuale Python):"

msgid "Using simulavr with gtkwave"
msgstr "Utilizzo di simulavr con gtkwave"

msgid ""
"One useful feature of simulavr is its ability to create signal wave "
"generation files with the exact timing of events. To do this, follow the "
"directions above, but run avrsim.py with a command-line like the following:"
msgstr ""
"Una caratteristica utile di simulavr è la sua capacità di creare file di "
"generazione di onde di segnale con l'esatta sincronizzazione degli eventi. "
"Per fare ciò, segui le istruzioni sopra, ma esegui avrsim.py con una riga di"
" comando come la seguente:"

msgid ""
"The above would create a file **avrsim.vcd** with information on each change"
" to the GPIOs on PORTA and PORTB. This could then be viewed using gtkwave "
"with:"
msgstr ""
"Quanto sopra creerebbe un file **avrsim.vcd** con informazioni su ogni "
"modifica ai GPIO su PORTA e PORTB. Questo potrebbe quindi essere "
"visualizzato usando gtkwave con:"

msgid "Manually sending commands to the micro-controller"
msgstr "Invio manuale di comandi al microcontrollore"

msgid ""
"Normally, the host klippy.py process would be used to translate gcode "
"commands to Klipper micro-controller commands. However, it's also possible "
"to manually send these MCU commands (functions marked with the "
"DECL_COMMAND() macro in the Klipper source code). To do so, run:"
msgstr ""
"Normalmente, il processo host klippy.py verrebbe utilizzato per tradurre i "
"comandi gcode in comandi del microcontrollore Klipper. Tuttavia, è anche "
"possibile inviare manualmente questi comandi MCU (funzioni contrassegnate "
"con la macro DECL_COMMAND() nel codice sorgente di Klipper). Per farlo, "
"esegui:"

msgid ""
"See the \"HELP\" command within the tool for more information on its "
"functionality."
msgstr ""
"Vedere il comando \"HELP\" all'interno dello strumento per ulteriori "
"informazioni sulla sua funzionalità."

msgid ""
"Some command-line options are available. For more information run: "
"`~/klippy-env/bin/python ./klippy/console.py --help`"
msgstr ""
"Sono disponibili alcune opzioni della riga di comando. Per ulteriori "
"informazioni esegui: `~/klippy-env/bin/python ./klippy/console.py --help`"

msgid "Generating load graphs"
msgstr "Generare di grafici di carico"

msgid ""
"The Klippy log file (/tmp/klippy.log) stores statistics on bandwidth, micro-"
"controller load, and host buffer load. It can be useful to graph these "
"statistics after a print."
msgstr ""
"Il file di registro di Klippy (/tmp/klippy.log) memorizza le statistiche "
"sulla larghezza di banda, sul carico del microcontrollore e sul carico del "
"buffer dell'host. Può essere utile rappresentare graficamente queste "
"statistiche dopo una stampa."

msgid ""
"To generate a graph, a one time step is necessary to install the "
"\"matplotlib\" package:"
msgstr ""
"Per generare un grafico, è necessario un passaggio una tantum per installare"
" il pacchetto \"matplotlib\":"

msgid "Then graphs can be produced with:"
msgstr "Quindi i grafici possono essere prodotti con:"

msgid "One can then view the resulting **loadgraph.png** file."
msgstr "Si può quindi visualizzare il file **loadgraph.png** risultante."

msgid ""
"Different graphs can be produced. For more information run: "
"`~/klipper/scripts/graphstats.py --help`"
msgstr ""
"Possono essere prodotti diversi grafici. Per ulteriori informazioni esegui: "
"`~/klipper/scripts/graphstats.py --help`"

msgid "Extracting information from the klippy.log file"
msgstr "Estrazione di informazioni dal file klippy.log"

msgid ""
"The Klippy log file (/tmp/klippy.log) also contains debugging information. "
"There is a logextract.py script that may be useful when analyzing a micro-"
"controller shutdown or similar problem. It is typically run with something "
"like:"
msgstr ""
"Anche il file di registro di Klippy (/tmp/klippy.log) contiene informazioni "
"di debug. Esiste uno script logextract.py che può essere utile quando si "
"analizza l'arresto di un microcontrollore o un problema simile. In genere "
"viene eseguito con qualcosa come:"

msgid ""
"The script will extract the printer config file and will extract MCU "
"shutdown information. The information dumps from an MCU shutdown (if "
"present) will be reordered by timestamp to assist in diagnosing cause and "
"effect scenarios."
msgstr ""
"Lo script estrarrà il file di configurazione della stampante ed estrarrà le "
"informazioni di arresto dell'MCU. I dump delle informazioni da un arresto "
"dell'MCU (se presente) verranno riordinati in base al timestamp per "
"facilitare la diagnosi degli scenari di causa ed effetto."

msgid "Running the regression tests"
msgstr "Esecuzione dei test di regressione"

msgid ""
"The main Klipper GitHub repository uses \"github actions\" to run a series "
"of regression tests. It can be useful to run some of these tests locally."
msgstr ""
"Il repository principale di Klipper GitHub utilizza \"github actions\" per "
"eseguire una serie di test di regressione. Può essere utile eseguire alcuni "
"di questi test in locale."

msgid "The source code \"whitespace check\" can be run with:"
msgstr "Il sorgente \"controllo spazi bianchi\" può essere eseguito con:"

msgid ""
"make menuconfig\n"
"make\n"
msgstr ""
"make menuconfig\n"
"make\n"

msgid ""
"~/klippy-env/bin/python ./klippy/klippy.py ~/printer.cfg -i test.gcode -o "
"test.serial -v -d out/klipper.dict\n"
msgstr ""
"~/klippy-env/bin/python ./klippy/klippy.py ~/printer.cfg -i test.gcode -o "
"test.serial -v -d out/klipper.dict\n"

msgid ""
"~/klippy-env/bin/python ./klippy/parsedump.py out/klipper.dict test.serial >"
" test.txt\n"
msgstr ""
"~/klippy-env/bin/python ./klippy/parsedump.py out/klipper.dict test.serial >"
" test.txt\n"

msgid ""
"~/klippy-env/bin/python ./klippy/klippy.py config/generic-simulavr.cfg -i "
"test.gcode -v\n"
msgstr ""
"~/klippy-env/bin/python ./klippy/klippy.py config/generic-simulavr.cfg -i "
"test.gcode -v\n"

msgid "gtkwave avrsim.vcd\n"
msgstr "gtkwave avrsim.vcd\n"

msgid "~/klippy-env/bin/python ./klippy/console.py /tmp/pseudoserial\n"
msgstr "~/klippy-env/bin/python ./klippy/console.py /tmp/pseudoserial\n"

msgid ""
"sudo apt-get update\n"
"sudo apt-get install python-matplotlib\n"
msgstr ""
"sudo apt-get update\n"
"sudo apt-get install python-matplotlib\n"

msgid "~/klipper/scripts/graphstats.py /tmp/klippy.log -o loadgraph.png\n"
msgstr "~/klipper/scripts/graphstats.py /tmp/klippy.log -o loadgraph.png\n"

msgid ""
"mkdir work_directory\n"
"cd work_directory\n"
"cp /tmp/klippy.log .\n"
"~/klipper/scripts/logextract.py ./klippy.log\n"
msgstr ""
"mkdir work_directory\n"
"cd work_directory\n"
"cp /tmp/klippy.log .\n"
"~/klipper/scripts/logextract.py ./klippy.log\n"

msgid "./scripts/check_whitespace.sh\n"
msgstr "./scripts/check_whitespace.sh\n"

msgid ""
"tar xfz klipper-dict-20??????.tar.gz\n"
"~/klippy-env/bin/python ~/klipper/scripts/test_klippy.py -d dict/ ~/klipper/test/klippy/*.test\n"
msgstr ""
"tar xfz klipper-dict-20??????.tar.gz\n"
"~/klippy-env/bin/python ~/klipper/scripts/test_klippy.py -d dict/ ~/klipper/test/klippy/*.test\n"

#: docs/Debugging.md:block 1 (header)
msgid "Debugging"
msgstr "Debugging"

#: docs/Debugging.md:block 24 (header)
msgid "Motion analysis and data logging"
msgstr "Analisi del movimento e registrazione dei dati"

#: docs/Debugging.md:block 25 (paragraph)
msgid ""
"Klipper supports logging its internal motion history, which can be later "
"analyzed. To use this feature, Klipper must be started with the [API "
"Server](API_Server.md) enabled."
msgstr ""
"Klipper supporta la registrazione della cronologia dei movimenti interni, "
"che può essere analizzata in seguito. Per utilizzare questa funzione, "
"Klipper deve essere avviato con [Server API](API_Server.md) abilitato."

#: docs/Debugging.md:block 26 (paragraph)
msgid "Data logging is enabled with the `data_logger.py` tool. For example:"
msgstr ""
"La registrazione dei dati è abilitata con lo strumento `data_logger.py`. Per"
" esempio:"

#: docs/Debugging.md:block 27 (code)
msgid "~/klipper/scripts/motan/data_logger.py /tmp/klippy_uds mylog\n"
msgstr "~/klipper/scripts/motan/data_logger.py /tmp/klippy_uds mylog\n"

#: docs/Debugging.md:block 28 (paragraph)
msgid ""
"This command will connect to the Klipper API Server, subscribe to status and"
" motion information, and log the results. Two files are generated - a "
"compressed data file and an index file (eg, `mylog.json.gz` and "
"`mylog.index.gz`). After starting the logging, it is possible to complete "
"prints and other actions - the logging will continue in the background. When"
" done logging, hit `ctrl-c` to exit from the `data_logger.py` tool."
msgstr ""
"Questo comando si collegherà al Klipper API Server, sottoscriverà le "
"informazioni sullo stato e sul movimento e registrerà i risultati. Vengono "
"generati due file: un file di dati compresso e un file di indice (ad "
"esempio, `mylog.json.gz` e `mylog.index.gz`). Dopo aver avviato la "
"registrazione, è possibile completare le stampe e altre azioni: la "
"registrazione continuerà in background. Al termine della registrazione, "
"premi `ctrl-c` per uscire dallo strumento `data_logger.py`."

#: docs/Debugging.md:block 29 (paragraph)
msgid ""
"The resulting files can be read and graphed using the `motan_graph.py` tool."
" To generate graphs on a Raspberry Pi, a one time step is necessary to "
"install the \"matplotlib\" package:"
msgstr ""
"I file risultanti possono essere letti e rappresentati graficamente "
"utilizzando lo strumento `motan_graph.py`. Per generare grafici su un "
"Raspberry Pi, è necessario un passaggio per installare il pacchetto "
"\"matplotlib\":"

#: docs/Debugging.md:block 31 (paragraph)
msgid ""
"However, it may be more convenient to copy the data files to a desktop class"
" machine along with the Python code in the `scripts/motan/` directory. The "
"motion analysis scripts should run on any machine with a recent version of "
"[Python](https://python.org) and [Matplotlib](https://matplotlib.org/) "
"installed."
msgstr ""
"Tuttavia, potrebbe essere più conveniente copiare i file di dati su una "
"macchina di classe desktop insieme al codice Python nella directory "
"`scripts/motan/`. Gli script di analisi del movimento dovrebbero essere "
"eseguiti su qualsiasi macchina con una versione recente di "
"[Python](https://python.org) e [Matplotlib](https://matplotlib.org/) "
"installata."

#: docs/Debugging.md:block 32 (paragraph)
msgid "Graphs can be generated with a command like the following:"
msgstr "I grafici possono essere generati con un comando come il seguente:"

#: docs/Debugging.md:block 33 (code)
msgid "~/klipper/scripts/motan/motan_graph.py mylog -o mygraph.png\n"
msgstr "~/klipper/scripts/motan/motan_graph.py mylog -o mygraph.png\n"

#: docs/Debugging.md:block 34 (paragraph)
msgid ""
"One can use the `-g` option to specify the datasets to graph (it takes a "
"Python literal containing a list of lists). For example:"
msgstr ""
"One can use the `-g` option to specify the datasets to graph (it takes a "
"Python literal containing a list of lists). For example:"

#: docs/Debugging.md:block 35 (code)
msgid ""
"~/klipper/scripts/motan/motan_graph.py mylog -g "
"'[[\"trapq(toolhead,velocity)\"], [\"trapq(toolhead,accel)\"]]'\n"
msgstr ""
"~/klipper/scripts/motan/motan_graph.py mylog -g "
"'[[\"trapq(toolhead,velocity)\"], [\"trapq(toolhead,accel)\"]]'\n"

#: docs/Debugging.md:block 36 (paragraph)
msgid ""
"The list of available datasets can be found using the `-l` option - for "
"example:"
msgstr ""
"L'elenco dei set di dati disponibili può essere trovato usando l'opzione "
"`-l`, ad esempio:"

#: docs/Debugging.md:block 37 (code)
msgid "~/klipper/scripts/motan/motan_graph.py -l\n"
msgstr "~/klipper/scripts/motan/motan_graph.py -l\n"

#: docs/Debugging.md:block 38 (paragraph)
msgid ""
"It is also possible to specify matplotlib plot options for each dataset:"
msgstr ""
"È anche possibile specificare le opzioni di stampa matplotlib per ogni set "
"di dati:"

#: docs/Debugging.md:block 39 (code)
msgid ""
"~/klipper/scripts/motan/motan_graph.py mylog -g "
"'[[\"trapq(toolhead,velocity)?color=red&alpha=0.4\"]]'\n"
msgstr ""
"~/klipper/scripts/motan/motan_graph.py mylog -g "
"'[[\"trapq(toolhead,velocity)?color=red&alpha=0.4\"]]'\n"

#: docs/Debugging.md:block 40 (paragraph)
msgid ""
"Many matplotlib options are available; some examples are \"color\", "
"\"label\", \"alpha\", and \"linestyle\"."
msgstr ""
"Sono disponibili molte opzioni di matplotlib; alcuni esempi sono \"color\", "
"\"label\", \"alpha\" e \"linestyle\"."

#: docs/Debugging.md:block 41 (paragraph)
msgid ""
"The `motan_graph.py` tool supports several other command-line options - use "
"the `--help` option to see a list. It may also be convenient to view/modify "
"the [motan_graph.py](../scripts/motan/motan_graph.py) script itself."
msgstr ""
"Lo strumento `motan_graph.py` supporta molte altre opzioni della riga di "
"comando: usa l'opzione `--help` per vedere un elenco. Può anche essere "
"conveniente visualizzare/modificare lo stesso script "
"[motan_graph.py](../scripts/motan/motan_graph.py)."

#: docs/Debugging.md:block 60 (code)
msgid ""
"cd /path/to/klipper\n"
"make menuconfig\n"
msgstr ""
"cd /path/to/klipper\n"
"make menuconfig\n"

#: docs/Debugging.md:block 61 (paragraph)
msgid ""
"and compile the micro-controller software for an AVR atmega644p and select "
"SIMULAVR software emulation support. Then one can compile Klipper (run "
"`make`) and then start the simulation with:"
msgstr ""
"e compilare il software del microcontrollore per un AVR atmega644p e "
"selezionare il supporto per l'emulazione del software SIMULAVR. Quindi si "
"può compilare Klipper (eseguire `make`) e quindi avviare la simulazione con:"

#: docs/Debugging.md:block 67 (code)
msgid ""
"PYTHONPATH=/path/to/simulavr/src/python/ ./scripts/avrsim.py out/klipper.elf"
" -t PORTA.PORT,PORTC.PORT\n"
msgstr ""
"PYTHONPATH=/path/to/simulavr/src/python/ ./scripts/avrsim.py out/klipper.elf"
" -t PORTA.PORT,PORTC.PORT\n"

#: docs/Debugging.md:block 7 (paragraph)
msgid ""
"The Klippy regression test suite requires \"data dictionaries\" from many "
"platforms. The easiest way to obtain them is to [download them from "
"github](https://github.com/Klipper3d/klipper/issues/1438). Once the data "
"dictionaries are downloaded, use the following to run the regression suite:"
msgstr ""
"La suite di test di regressione Klippy richiede \"dizionari di dati\" da "
"molte piattaforme. Il modo più semplice per ottenerli è [scaricarli da "
"github](https://github.com/Klipper3d/klipper/issues/1438). Una volta "
"scaricati i dizionari di dati, utilizzare quanto segue per eseguire la suite"
" di regressione:"

#: docs/Debugging.md:block 42 (paragraph)
msgid ""
"The raw data logs produced by the `data_logger.py` tool follow the format "
"described in the [API Server](API_Server.md). It may be useful to inspect "
"the data with a Unix command like the following: `gunzip < mylog.json.gz | "
"tr '\\03' '\\n' | less`"
msgstr ""
"I log di dati grezzi prodotti dallo strumento `data_logger.py` seguono il "
"formato descritto in [Server API](API_Server.md). Può essere utile "
"ispezionare i dati con un comando Unix come il seguente: `gunzip < "
"mylog.json.gz | tr '\\03' '\\n' | less`"

#: docs/Debugging.md:block 57 (paragraph)
msgid ""
"To use simulavr, download the simulavr package and compile with python "
"support. Note that the build system may need to have some packages (such as "
"swig) installed in order to build the python module."
msgstr ""
"Per utilizzare simulavr, scarica il pacchetto simulavr e compila con il "
"supporto python. Nota che il sistema di build potrebbe aver bisogno di "
"alcuni pacchetti (come swig) installati per costruire il modulo python."

#: docs/Debugging.md:block 58 (code)
msgid ""
"git clone git://git.savannah.nongnu.org/simulavr.git\n"
"cd simulavr\n"
"make python\n"
"make build\n"
msgstr ""
"git clone git://git.savannah.nongnu.org/simulavr.git\n"
"cd simulavr\n"
"make python\n"
"make build\n"

#: docs/Debugging.md:block 59 (paragraph)
msgid ""
"Make sure a file like **./build/pysimulavr/_pysimulavr.*.so** is present "
"after the above compilation:"
msgstr ""
"Assicurati che un file come **./build/pysimulavr/_pysimulavr.*.so** sia "
"presente dopo la compilazione di cui sopra:"

#: docs/Debugging.md:block 60 (code)
msgid "ls ./build/pysimulavr/_pysimulavr.*.so\n"
msgstr "ls ./build/pysimulavr/_pysimulavr.*.so\n"

#: docs/Debugging.md:block 61 (paragraph)
msgid ""
"This commmand should report a specific file (e.g. "
"**./build/pysimulavr/_pysimulavr.cpython-39-x86_64-linux-gnu.so**) and not "
"an error."
msgstr ""
"Questo comando dovrebbe segnalare un file specifico (ad es. "
"**./build/pysimulavr/_pysimulavr.cpython-39-x86_64-linux-gnu.so**) e non un "
"errore."

#: docs/Debugging.md:block 62 (paragraph)
msgid ""
"If you are on a Debian-based system (Debian, Ubuntu, etc.) you can install "
"the following packages and generate *.deb files for system-wide installation"
" of simulavr:"
msgstr ""
"Se utilizzi un sistema basato su Debian (Debian, Ubuntu, ecc.) puoi "
"installare i seguenti pacchetti e generare file *.deb per l'installazione di"
" simulavr a livello di sistema:"

#: docs/Debugging.md:block 63 (code)
msgid ""
"sudo apt update\n"
"sudo apt install g++ make cmake swig rst2pdf help2man texinfo\n"
"make cfgclean python debian\n"
"sudo dpkg -i build/debian/python3-simulavr*.deb\n"
msgstr ""
"sudo apt update\n"
"sudo apt install g++ make cmake swig rst2pdf help2man texinfo\n"
"make cfgclean python debian\n"
"sudo dpkg -i build/debian/python3-simulavr*.deb\n"

#: docs/Debugging.md:block 67 (code)
msgid ""
"PYTHONPATH=/path/to/simulavr/build/pysimulavr/ ./scripts/avrsim.py "
"out/klipper.elf\n"
msgstr ""
"PYTHONPATH=/path/to/simulavr/build/pysimulavr/ ./scripts/avrsim.py "
"out/klipper.elf\n"

#: docs/Debugging.md:block 68 (paragraph)
msgid ""
"Note that if you have installed python3-simulavr system-wide, you do not "
"need to set `PYTHONPATH`, and can simply run the simulator as"
msgstr ""
"Nota che se hai installato python3-simulavr a livello di sistema, non è "
"necessario impostare `PYTHONPATH` e puoi semplicemente eseguire il "
"simulatore come"

#: docs/Debugging.md:block 69 (code)
msgid "./scripts/avrsim.py out/klipper.elf\n"
msgstr "./scripts/avrsim.py out/klipper.elf\n"

#~ msgid ""
#~ "To use simulavr, download the simulavr package and compile with python "
#~ "support:"
#~ msgstr ""

#~ msgid ""
#~ "Note that the build system may need to have some packages (such as swig) "
#~ "installed in order to build the python module. Make sure the file "
#~ "**src/python/_pysimulavr.so** is present after the above compilation."
#~ msgstr ""

#~ msgid ""
#~ "git clone git://git.savannah.nongnu.org/simulavr.git\n"
#~ "cd simulavr\n"
#~ "./bootstrap\n"
#~ "./configure --enable-python\n"
#~ "make\n"
#~ msgstr ""

#~ msgid ""
#~ "PYTHONPATH=/path/to/simulavr/src/python/ ./scripts/avrsim.py "
#~ "out/klipper.elf\n"
#~ msgstr ""

#~ msgid ""
#~ "The Klippy regression test suite requires \"data dictionaries\" from many "
#~ "platforms. The easiest way to obtain them is to [download them from "
#~ "github](https://github.com/KevinOConnor/klipper/issues/1438). Once the data "
#~ "dictionaries are downloaded, use the following to run the regression suite:"
#~ msgstr ""

#~ msgid ""
#~ "and compile the micro-controller software for an AVR atmega644p, set the MCU"
#~ " frequency to 20Mhz, and select SIMULAVR software emulation support. Then "
#~ "one can compile Klipper (run `make`) and then start the simulation with:"
#~ msgstr ""

#~ msgid ""
#~ "cd /patch/to/klipper\n"
#~ "make menuconfig\n"
#~ msgstr ""

#~ msgid ""
#~ "PYTHONPATH=/path/to/simulavr/src/python/ ./scripts/avrsim.py -m atmega644 -s"
#~ " 20000000 -b 250000 out/klipper.elf\n"
#~ msgstr ""

#~ msgid ""
#~ "PYTHONPATH=/path/to/simulavr/src/python/ ./scripts/avrsim.py -m atmega644 -s"
#~ " 20000000 -b 250000 out/klipper.elf -t PORTA.PORT,PORTC.PORT\n"
#~ msgstr ""
