# mirokymac <toufubomb@gmail.com>, 2021.
# Yifei Ding <dingyifeiair@gmail.com>, 2021, 2022.
# Neko.vecter <Vecterfang@icloud.com>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-08-22 13:24+0000\n"
"Last-Translator: Neko.vecter <Vecterfang@icloud.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/klipper/measuring_resonances/zh_Hans/>\n"
"Language: zh_Hans\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.14-dev\n"

msgid "Measuring Resonances"
msgstr "共振值测量"

msgid ""
"Klipper has built-in support for ADXL345 accelerometer, which can be used to"
" measure resonance frequencies of the printer for different axes, and auto-"
"tune [input shapers](Resonance_Compensation.md) to compensate for "
"resonances. Note that using ADXL345 requires some soldering and crimping. "
"ADXL345 can be connected to a Raspberry Pi directly, or to an SPI interface "
"of an MCU board (it needs to be reasonably fast)."
msgstr ""
"Klipper内建有ADXL345加速度传感器驱动，可用以测量打印机不同运动轴发生共振的频率，从而自动进行 "
"[输入整形](Resonance_Compensation.md) "
"以实现共振补偿。注意使用ADXL345需要进行焊接和压线。ADXL345可以直接连接到树莓派，也可以连接到MCU的SPI总线（注意MCU有一定的性能需求）。"

msgid "Installation instructions"
msgstr "安装指南"

msgid "Wiring"
msgstr "接线"

msgid ""
"You need to connect ADXL345 to your Raspberry Pi via SPI. Note that the I2C "
"connection, which is suggested by ADXL345 documentation, has too low "
"throughput and **will not work**. The recommended connection scheme:"
msgstr ""
"我们需要将ADXL345连接到树莓派的SPI接口。注意，尽管ADXL345文档推荐使用I2C，但其数据吞吐能力不足，**不能**实现共振测量的要求。推荐的接线图为："

msgid "ADXL345 pin"
msgstr "ADXL345引脚"

msgid "RPi pin"
msgstr "树莓派引脚"

msgid "RPi pin name"
msgstr "树莓派引脚名称"

msgid "3V3 (or VCC)"
msgstr "3V3 或 VCC"

msgid "01"
msgstr "01"

msgid "3.3v DC power"
msgstr "3.3v 直流（DC）电源"

msgid "GND"
msgstr "GND"

msgid "06"
msgstr "06"

msgid "Ground"
msgstr "地（GND）"

msgid "CS"
msgstr "CS（芯片选定）"

msgid "24"
msgstr "24"

msgid "GPIO08 (SPI0_CE0_N)"
msgstr "GPIO08 (SPI0_CE0_N)"

msgid "SDO"
msgstr "SDO"

msgid "21"
msgstr "21"

msgid "GPIO09 (SPI0_MISO)"
msgstr "GPIO09 (SPI0_MISO)"

msgid "SDA"
msgstr "SDA"

msgid "19"
msgstr "19"

msgid "GPIO10 (SPI0_MOSI)"
msgstr "GPIO10 (SPI0_MOSI)"

msgid "SCL"
msgstr "SCL"

msgid "23"
msgstr "23"

msgid "GPIO11 (SPI0_SCLK)"
msgstr "GPIO11 (SPI0_SCLK)"

msgid "Fritzing wiring diagrams for some of the ADXL345 boards:"
msgstr "部分ADXL345开发板的Fritzing接线图如下："

msgid "![ADXL345-Rpi](img/adxl345-fritzing.png)"
msgstr "![ADXL345-树莓派](img/adxl345-fritzing.png)"

msgid ""
"Double-check your wiring before powering up the Raspberry Pi to prevent "
"damaging it or the accelerometer."
msgstr "为避免损坏树莓派或者加速度传感器，请检测接线正确再对树莓派上电。"

msgid "Mounting the accelerometer"
msgstr "固定加速度传感器"

msgid ""
"The accelerometer must be attached to the toolhead. One needs to design a "
"proper mount that fits their own 3D printer. It is better to align the axes "
"of the accelerometer with the printer's axes (but if it makes it more "
"convenient, axes can be swapped - i.e. no need to align X axis with X and so"
" forth - it should be fine even if Z axis of accelerometer is X axis of the "
"printer, etc.)."
msgstr ""
"加速度传感器应固定在打印头上。应根据打印机的情况设计合适的固定件。推荐将加速度的测量轴与打印机运行轴的方向进行对齐。然而，如果轴对齐极其麻烦，可以将打印机的轴使用其他测量轴对齐，比如打印机+X对应传感器-X，甚至打印机+X对应传感器-"
"Z等。"

msgid "An example of mounting ADXL345 on the SmartEffector:"
msgstr "下面是ADXL345固定到SmartEffector的示例："

msgid "![ADXL345 on SmartEffector](img/adxl345-mount.jpg)"
msgstr "![ADXL345固定在SmartEffector](img/adxl345-mount.jpg)"

msgid ""
"Note that on a bed slinger printer one must design 2 mounts: one for the "
"toolhead and one for the bed, and run the measurements twice. See the "
"corresponding [section](#bed-slinger-printers) for more details."
msgstr ""
"注意，滑床式打印机需要设计两个固定件：一个安装于打印头，另一个用于热床，并进行两次测量。详见 [对应分节](#bed-slinger-"
"printers)。"

msgid ""
"**Attention:** make sure the accelerometer and any screws that hold it in "
"place do not touch any metal parts of the printer. Basically, the mount must"
" be designed such as to ensure the electrical isolation of the accelerometer"
" from the printer frame. Failing to ensure that can create a ground loop in "
"the system that may damage the electronics."
msgstr ""
"**注意！**：务必确保加速度传感器和任何螺丝都不应该接触到打印机的金属部分。紧固件必须设计成在加速度传感器和打印机框体间形成电气绝缘。错误的设计可能会形成短路，从而损坏电气元件。"

msgid "Software installation"
msgstr "软件设置"

msgid ""
"Afterwards, check and follow the instructions in the [RPi Microcontroller "
"document](RPi_microcontroller.md) to setup the \"linux mcu\" on the "
"Raspberry Pi."
msgstr "之后，参考[树莓派作为微控制器文档](RPi_microcontroller.md)的指引完成“LINUX微处理器”的设置。"

msgid ""
"Make sure the Linux SPI driver is enabled by running `sudo raspi-config` and"
" enabling SPI under the \"Interfacing options\" menu."
msgstr ""
"通过运行`sudo raspi-config` 后的 \"Interfacing options\"菜单中启用 SPI 以确保Linux SPI "
"驱动已启用。"

msgid ""
"It is advised to start with 1 probe point, in the middle of the print bed, "
"slightly above it."
msgstr "建议在测试开始前，用探针在热床中央进行一次探测，触发后稍微上移。"

msgid "Restart Klipper via the `RESTART` command."
msgstr "通过`RESTART`命令重启Klipper。"

msgid "Measuring the resonances"
msgstr "测量共振值"

msgid "Checking the setup"
msgstr "检查设置"

msgid "Now you can test a connection."
msgstr "首先测试加速度传感器的连接。"

msgid ""
"For \"non bed-slingers\" (e.g. one accelerometer), in Octoprint, enter "
"`ACCELEROMETER_QUERY`"
msgstr "对于只有一个加速度传感器的情况，在Octoprint，输入`ACCELEROMETER_QUERY`（检查已连接的加速度传感器状态）"

msgid ""
"For \"bed-slingers\" (e.g. more than one accelerometer), enter "
"`ACCELEROMETER_QUERY CHIP=<chip>` where `<chip>` is the name of the chip as-"
"entered, e.g. `CHIP=bed` (see: [bed-slinger](#bed-slinger-printers)) for all"
" installed accelerometer chips."
msgstr ""
"对于“滑动床”（即有多个加速度传感器），输入`ACCELEROMETER_QUERY "
"CHIP=<chip>`，其中`<chip>`是设置文档中的加速度传感器命名，例如 `CHIP=bed`(参见：[bed-slinger](#bed-"
"slinger-printers))。"

msgid ""
"You should see the current measurements from the accelerometer, including "
"the free-fall acceleration, e.g."
msgstr "你应该会看到来自加速度计的当前测量值，包括自由落体（free-fall）的加速度，比如说。"

msgid ""
"If you get an error like `Invalid adxl345 id (got xx vs e5)`, where `xx` is "
"some other ID, it is indicative of the connection problem with ADXL345, or "
"the faulty sensor. Double-check the power, the wiring (that it matches the "
"schematics, no wire is broken or loose, etc.), and soldering quality."
msgstr ""
"如果输出类似 `Invalid adxl345 id (got xx vs "
"e5)`，其中'xx'为e5以外ID，这表示出现连接问题（如，连接错误、线缆电阻过大、干扰等），或传感器错误（如，残次传感器 或 "
"错误的传感器）。请在此检查电源，接线（再三确定接线正确，没有破损、松动的电线）或焊接问题。"

msgid ""
"Next, try running `MEASURE_AXES_NOISE` in Octoprint, you should get some "
"baseline numbers for the noise of accelerometer on the axes (should be "
"somewhere in the range of ~1-100). Too high axes noise (e.g. 1000 and more) "
"can be indicative of the sensor issues, problems with its power, or too "
"noisy imbalanced fans on a 3D printer."
msgstr ""
"下一步，在Octoprint中输入 "
"`MEASURE_AXES_NOISE`，之后将会显示各个轴的基准测量噪声（其值应在1-100之间）。如果轴的噪声极高（例如 1000 "
"或更高）可能意味着3D打印机上存在传感器问题、电源问题或不平衡的风扇。"

msgid "Now you can run some real-life tests. Run the following command:"
msgstr "现在可以运行进行实测。运行以下命令:"

msgid ""
"Note that it will create vibrations on X axis. It will also disable input "
"shaping if it was enabled previously, as it is not valid to run the "
"resonance testing with the input shaper enabled."
msgstr ""
"注意，这将在X轴上产生振动。如果之前启用了输入整形（input shaping ），它也将禁用输入整形，因为在启用输入整形的情况下运行共振测试是无效的。"

msgid ""
"**Attention!** Be sure to observe the printer for the first time, to make "
"sure the vibrations do not become too violent (`M112` command can be used to"
" abort the test in case of emergency; hopefully it will not come to this "
"though). If the vibrations do get too strong, you can attempt to specify a "
"lower than the default value for `accel_per_hz` parameter in "
"`[resonance_tester]` section, e.g."
msgstr ""
"**注意！**请确保第一次运行时时刻观察打印机，以确保振动不会太剧烈（`M112`命令可以在紧急情况下中止测试；但愿不会到这一步）。如果振动确实太强烈，你可以尝试在`[Resonance_tester]`分段中为`accel_per_hz`参数指定一个低于默认值的值，比如说。"

msgid "If it works for X axis, run for Y axis as well:"
msgstr "如果它适用于 X 轴，则也可以为 Y 轴运行："

msgid ""
"This script will generate the charts `/tmp/shaper_calibrate_x.png` and "
"`/tmp/shaper_calibrate_y.png` with frequency responses. You will also get "
"the suggested frequencies for each input shaper, as well as which input "
"shaper is recommended for your setup. For example:"
msgstr ""
"此脚本将生成频率响应的图表 `/tmp/shaper_calibrate_x.png` 和 "
"`/tmp/shaper_calibrate_y.png`。它还会给出每个输入整形器的建议频率，以及推荐的输入整形器。例如："

msgid "![Resonances](img/calibrate-y.png)"
msgstr "![共振](img/calibrate-y.png)"

msgid ""
"The suggested configuration can be added to `[input_shaper]` section of "
"`printer.cfg`, e.g.:"
msgstr "推荐的配置可以添加到`[input_shaper]`的`printer.cfg`分段中，例如："

msgid ""
"or you can choose some other configuration yourself based on the generated "
"charts: peaks in the power spectral density on the charts correspond to the "
"resonance frequencies of the printer."
msgstr "也可以根据生成的图表自己选择一些其他配置：图表上的功率谱密度的峰值对应于打印机的共振频率。"

msgid ""
"Note that alternatively you can run the input shaper autocalibration from "
"Klipper [directly](#input-shaper-auto-calibration), which can be convenient,"
" for example, for the input shaper [re-calibration](#input-shaper-re-"
"calibration)."
msgstr ""
"请注意，可以[直接](#input-shaper-auto-"
"calibration)在Klipper中运行输入整形器自动校准，这可能更方便，例如，对于输入整形器[重新校准](#input-shaper-re-"
"calibration)。"

msgid "Bed-slinger printers"
msgstr "平行于喷嘴移动打印床的打印机"

msgid ""
"If your printer is a bed slinger printer, you will need to change the "
"location of the accelerometer between the measurements for X and Y axes: "
"measure the resonances of X axis with the accelerometer attached to the "
"toolhead and the resonances of Y axis - to the bed (the usual bed slinger "
"setup)."
msgstr ""
"如果打印机的打印床可以平行于喷嘴移动，测量X和Y轴时需要改变加速度计的安装位置。安装加速度计到打印头以测量X轴共振，安装到打印床以测量Y轴（该类打印机的常见配置）。"

msgid ""
"However, you can also connect two accelerometers simultaneously, though they"
" must be connected to different boards (say, to an RPi and printer MCU "
"board), or to two different physical SPI interfaces on the same board "
"(rarely available). Then they can be configured in the following manner:"
msgstr ""
"也可以同时连接两个加速度计，尽管它们必须连接到不同的主板（例如，连接到树莓派和MCU），或者连接到同一板上两个不同的物理SPI接口（大多数情况下不可用）。然后可以按以下方式配置它们："

msgid ""
"Then the commands `TEST_RESONANCES AXIS=X` and `TEST_RESONANCES AXIS=Y` will"
" use the correct accelerometer for each axis."
msgstr "然后，命令`TEST_RESONANCES AXIS=X`和`TEST_RESONANCES AXIS=Y`会使用每个轴相应的加速度计。"

msgid "Max smoothing"
msgstr "最大平滑度"

msgid ""
"Keep in mind that the input shaper can create some smoothing in parts. "
"Automatic tuning of the input shaper performed by `calibrate_shaper.py` "
"script or `SHAPER_CALIBRATE` command tries not to exacerbate the smoothing, "
"but at the same time they try to minimize the resulting vibrations. "
"Sometimes they can make a sub-optimal choice of the shaper frequency, or "
"maybe you simply prefer to have less smoothing in parts at the expense of a "
"larger remaining vibrations. In these cases, you can request to limit the "
"maximum smoothing from the input shaper."
msgstr ""
"请注意，输入整形器会在使一些打印的路径被平滑。由执行`calibrate_shaper.py`脚本或`SHAPER_CALIBRATE`命令自动得出的输入整形器会尽量不加剧平滑的同时试图最小化产生的振动。脚本可能会得出不是最优的整形器的频率，或者你可能希望以更强的剩余振动为代价来减少平滑度。在这些情况下，可以要求脚本限制输入整形器的最大平滑度。"

msgid "Let's consider the following results from the automatic tuning:"
msgstr "参考以下自动调谐结果："

msgid "![Resonances](img/calibrate-x.png)"
msgstr "![共振](img/calibrate-x.png)"

msgid ""
"Note that the reported `smoothing` values are some abstract projected "
"values. These values can be used to compare different configurations: the "
"higher the value, the more smoothing a shaper will create. However, these "
"smoothing scores do not represent any real measure of smoothing, because the"
" actual smoothing depends on [`max_accel`](#selecting-max-accel) and "
"`square_corner_velocity` parameters. Therefore, you should print some test "
"prints to see how much smoothing exactly a chosen configuration creates."
msgstr ""
"请注意，报告的 `smoothing "
"`（平滑）值是抽象的预测值。这些值可用于比较不同的配置：值越高，整形器造成的平滑度就越高。但是，这些平滑值并不表示任何实际的平滑度的量，因为实际的平滑取决于[`max_accel`](#selecting-"
"max-accel)和`square_corner_velocity`参数。因此，如果希望了解所选配置造成的实际平滑效果，需要打印一些测试件。"

msgid ""
"In the example above the suggested shaper parameters are not bad, but what "
"if you want to get less smoothing on the X axis? You can try to limit the "
"maximum shaper smoothing using the following command:"
msgstr ""
"在上面的示例中，脚本给出了不错的整形器参数建议，但是如果想在 X 轴上减少平滑度，就需要尝试使用以下命令限制脚本挑选参数时的整形器平滑值极限："

msgid ""
"which limits the smoothing to 0.2 score. Now you can get the following "
"result:"
msgstr "这将平滑值限制在0.2。现在可以得到以下结果："

msgid "![Resonances](img/calibrate-x-max-smoothing.png)"
msgstr "![共振](img/calibrate-x-max-smoothing.png)"

msgid ""
"If you compare to the previously suggested parameters, the vibrations are a "
"bit larger, but the smoothing is significantly smaller than previously, "
"allowing larger maximum acceleration."
msgstr "新的参数与之前的建议比，振动要大一些，但平滑度明显比之前小，允许打印时更高的极限加速度。"

msgid ""
"When deciding which `max_smoothing` parameter to choose, you can use a "
"trial-and-error approach. Try a few different values and see which results "
"you get. Note that the actual smoothing produced by the input shaper "
"depends, primarily, on the lowest resonance frequency of the printer: the "
"higher the frequency of the lowest resonance - the smaller the smoothing. "
"Therefore, if you request the script to find a configuration of the input "
"shaper with the unrealistically small smoothing, it will be at the expense "
"of increased ringing at the lowest resonance frequencies (which are, "
"typically, also more prominently visible in prints). So, always double-check"
" the projected remaining vibrations reported by the script and make sure "
"they are not too high."
msgstr ""
"在选择 `max_smoothing` "
"参数时，可以使用试错的方法。试试几个不同的值并对比得到的结果。请注意，输入整形器产生的实际平滑效果主要取决于打印机的最低谐振频率：最低谐振的频率越高，平滑效果越小。因此，如果要求脚本找到一个具有不切实际小平滑度的输入整形器配置，它将以增加最低共振频率的振纹为代价（通常，这在打印件中比平滑产生的影响更明显）。因此，一定要仔细检查脚本所报告的预计剩余振动，确保它们不会太高。"

msgid ""
"Note that if you chose a good `max_smoothing` value for both of your axes, "
"you can store it in the `printer.cfg` as"
msgstr "注意，如果为两个轴选择了一个相同的 `max_smoothing` 值，可以把它存储在 `printer.cfg` 为"

msgid ""
"Then, if you [rerun](#input-shaper-re-calibration) the input shaper auto-"
"tuning using `SHAPER_CALIBRATE` Klipper command in the future, it will use "
"the stored `max_smoothing` value as a reference."
msgstr ""
"如果在将来使用`SHAPER_CALIBRATE` Klipper命令[重新运行](#input-shaper-re-"
"calibration)输入整形器自动调谐，它将使用存储的`max_smoothing` 值作为参考。"

msgid "Selecting max_accel"
msgstr "选择 max_accel"

msgid ""
"Since the input shaper can create some smoothing in parts, especially at "
"high accelerations, you will still need to choose the `max_accel` value that"
" does not create too much smoothing in the printed parts. A calibration "
"script provides an estimate for `max_accel` parameter that should not create"
" too much smoothing. Note that the `max_accel` as displayed by the "
"calibration script is only a theoretical maximum at which the respective "
"shaper is still able to work without producing too much smoothing. It is by "
"no means a recommendation to set this acceleration for printing. The maximum"
" acceleration your printer is able to sustain depends on its mechanical "
"properties and the maximum torque of the used stepper motors. Therefore, it "
"is suggested to set `max_accel` in `[printer]` section that does not exceed "
"the estimated values for X and Y axes, likely with some conservative safety "
"margin."
msgstr ""
"由于输入整形器会在打印件中产生一些平滑，特别是在高加速时，选择一个不会产生过多平滑的`max_accel` 依然很重要校准脚本为`max_accel` "
"参数提供了一个不应该产生过多平滑的估计值。请注意，由校准脚本显示的`max_accel` "
"只是一个理论上的最大值，在这个值上，各自的整形器仍然能够工作而不产生过多的平滑。这决不是建议设置的打印加速度。你的打印机能够承受的最大加速度取决于它的机械性能和所用步进电机的最大扭矩。因此，建议在`[printer]`"
" 部分设置`max_accel` 时不要超过X轴和Y轴的估计值，并保守一些。"

msgid ""
"Alternatively, follow [this](Resonance_Compensation.md#selecting-max_accel) "
"part of the input shaper tuning guide and print the test model to choose "
"`max_accel` parameter experimentally."
msgstr ""
"或者，按照[这个](Resonance_Compensation.md#selecting-"
"max_accel)章节的输入整形器调整指南，打印测试模型，通过实验选择`max_accel` 参数。"

msgid ""
"The same notice applies to the input shaper [auto-calibration](#input-"
"shaper-auto-calibration) with `SHAPER_CALIBRATE` command: it is still "
"necessary to choose the right `max_accel` value after the auto-calibration, "
"and the suggested acceleration limits will not be applied automatically."
msgstr ""
"同样的通知也适用于带有`SHAPER_CALIBRATE` 命令的输入整形器[自动校准](#input-shaper-auto-"
"calibration)：在自动校准后仍需选择正确的`max_accel` 值，建议的加速度限制将不会被自动应用。"

msgid ""
"If you are doing a shaper re-calibration and the reported smoothing for the "
"suggested shaper configuration is almost the same as what you got during the"
" previous calibration, this step can be skipped."
msgstr "如果重新校准一个整形器，并且建议的整形器配置的报告平滑度与你在以前的校准中得到的几乎相同，这个步骤可以被跳过。"

msgid "Input Shaper auto-calibration"
msgstr "输入整形器自动校准"

msgid ""
"Besides manually choosing the appropriate parameters for the input shaper "
"feature, it is also possible to run the auto-tuning for the input shaper "
"directly from Klipper. Run the following command via Octoprint terminal:"
msgstr "除了为输入整形器功能手动选择适当的参数外，还可以直接从Klipper运行输入整形器的自动调谐。通过Octoprint终端运行以下命令："

msgid ""
"This will run the full test for both axes and generate the csv output "
"(`/tmp/calibration_data_*.csv` by default) for the frequency response and "
"the suggested input shapers. You will also get the suggested frequencies for"
" each input shaper, as well as which input shaper is recommended for your "
"setup, on Octoprint console. For example:"
msgstr ""
"这将为两个轴运行完整的测试，并生成用于频率响应和建议的输入整形器的csv输出（默认为`/tmp/calibration_data_*.csv` "
"）。在Octoprint中会提示控制台每个输入整形器的建议频率，以及为这台打印机推荐的输入整形器。例如："

msgid ""
"If you agree with the suggested parameters, you can execute `SAVE_CONFIG` "
"now to save them and restart the Klipper. Note that this will not update "
"`max_accel` value in `[printer]` section. You should update it manually "
"following the considerations in [Selecting max_accel](#selecting-max_accel) "
"section."
msgstr ""
"如果认同建议的参数，现在可以执行`SAVE_CONFIG` 来保存设置并重新启动Klipper。 请注意，这不会更新`[printer]` "
"分段中的`max_accel`值。应该按照[选择max_accel](#selecting-max_accel)章节中的注意事项手动更新它。"

msgid ""
"If your printer is a bed slinger printer, you can specify which axis to "
"test, so that you can change the accelerometer mounting point between the "
"tests (by default the test is performed for both axes):"
msgstr "如果你的打印机热床水平移动，可以选择测试的轴，这样就可以在测试之间改变加速度计的安装点（默认情况下，测试会同时对两个轴一起进行）："

msgid "You can execute `SAVE_CONFIG` twice - after calibrating each axis."
msgstr "可以在校准每个轴之后执行`SAVE_CONFIG`。"

msgid ""
"However, if you connected two accelerometers simultaneously, you simply run "
"`SHAPER_CALIBRATE` without specifying an axis to calibrate the input shaper "
"for both axes in one go."
msgstr "然而，如果同时连接了两个加速度计，只需要运行`SHAPER_CALIBRATE` ，而不指定轴，就可以一次性校准两个轴的输入整形器。"

msgid "Input Shaper re-calibration"
msgstr "重新校准输入整形器"

msgid ""
"`SHAPER_CALIBRATE` command can be also used to re-calibrate the input shaper"
" in the future, especially if some changes to the printer that can affect "
"its kinematics are made. One can either re-run the full calibration using "
"`SHAPER_CALIBRATE` command, or restrict the auto-calibration to a single "
"axis by supplying `AXIS=` parameter, like"
msgstr ""
"`SHAPER_CALIBRATE` "
"命令也可以用来在将来重新校准输入整形器，特别是当打印机发生了一些可能影响其运动学的变化时。可以使用`SHAPER_CALIBRATE` "
"命令重新进行全面校准，或者通过提供`AXIS=` 参数将自动校准限制在一个轴上，例如"

msgid ""
"**Warning!** It is not advisable to run the shaper autocalibration very "
"frequently (e.g. before every print, or every day). In order to determine "
"resonance frequencies, autocalibration creates intensive vibrations on each "
"of the axes. Generally, 3D printers are not designed to withstand a "
"prolonged exposure to vibrations near the resonance frequencies. Doing so "
"may increase wear of the printer components and reduce their lifespan. There"
" is also an increased risk of some parts unscrewing or becoming loose. "
"Always check that all parts of the printer (including the ones that may "
"normally not move) are securely fixed in place after each auto-tuning."
msgstr ""

msgid ""
"Also, due to some noise in measurements, it is possible that the tuning "
"results will be slightly different from one calibration run to another one. "
"Still, it is not expected that the noise will affect the print quality too "
"much. However, it is still advised to double-check the suggested parameters,"
" and print some test prints before using them to confirm they are good."
msgstr ""

msgid "Offline processing of the accelerometer data"
msgstr ""

msgid ""
"It is possible to generate the raw accelerometer data and process it offline"
" (e.g. on a host machine), for example to find resonances. In order to do "
"so, run the following commands via Octoprint terminal:"
msgstr ""

msgid ""
"ignoring any errors for `SET_INPUT_SHAPER` command. For `TEST_RESONANCES` "
"command, specify the desired test axis. The raw data will be written into "
"`/tmp` directory on the RPi."
msgstr ""

msgid ""
"The data can be processed later by the following scripts: "
"`scripts/graph_accelerometer.py` and `scripts/calibrate_shaper.py`. Both of "
"them accept one or several raw csv files as the input depending on the mode."
" The graph_accelerometer.py script supports several modes of operation:"
msgstr ""

msgid ""
"plotting raw accelerometer data (use `-r` parameter), only 1 input is "
"supported;"
msgstr ""

msgid ""
"plotting a frequency response (no extra parameters required), if multiple "
"inputs are specified, the average frequency response is computed;"
msgstr ""

msgid ""
"comparison of the frequency response between several inputs (use `-c` "
"parameter); you can additionally specify which accelerometer axis to "
"consider via `-a x`, `-a y` or `-a z` parameter (if none specified, the sum "
"of vibrations for all axes is used);"
msgstr ""

msgid ""
"plotting the spectrogram (use `-s` parameter), only 1 input is supported; "
"you can additionally specify which accelerometer axis to consider via `-a "
"x`, `-a y` or `-a z` parameter (if none specified, the sum of vibrations for"
" all axes is used)."
msgstr ""

msgid ""
"Note that graph_accelerometer.py script supports only the raw_data\\*.csv "
"files and not resonances\\*.csv or calibration_data\\*.csv files."
msgstr ""

msgid "For example,"
msgstr ""

msgid ""
"will plot the comparison of several `/tmp/raw_data_x_*.csv` files for Z axis"
" to `/tmp/resonances_x.png` file."
msgstr ""

msgid ""
"The shaper_calibrate.py script accepts 1 or several inputs and can run "
"automatic tuning of the input shaper and suggest the best parameters that "
"work well for all provided inputs. It prints the suggested parameters to the"
" console, and can additionally generate the chart if `-o output.png` "
"parameter is provided, or the CSV file if `-c output.csv` parameter is "
"specified."
msgstr ""

msgid ""
"Providing several inputs to shaper_calibrate.py script can be useful if "
"running some advanced tuning of the input shapers, for example:"
msgstr ""

msgid ""
"Running `TEST_RESONANCES AXIS=X OUTPUT=raw_data` (and `Y` axis) for a single"
" axis twice on a bed slinger printer with the accelerometer attached to the "
"toolhead the first time, and the accelerometer attached to the bed the "
"second time in order to detect axes cross-resonances and attempt to cancel "
"them with input shapers."
msgstr ""

msgid ""
"Running `TEST_RESONANCES AXIS=Y OUTPUT=raw_data` twice on a bed slinger with"
" a glass bed and a magnetic surfaces (which is lighter) to find the input "
"shaper parameters that work well for any print surface configuration."
msgstr ""

msgid "Combining the resonance data from multiple test points."
msgstr ""

msgid ""
"Combining the resonance data from 2 axis (e.g. on a bed slinger printer to "
"configure X-axis input_shaper from both X and Y axes resonances to cancel "
"vibrations of the *bed* in case the nozzle 'catches' a print when moving in "
"X axis direction)."
msgstr ""

msgid "~/klippy-env/bin/pip install -v numpy\n"
msgstr ""

msgid "Recv: // adxl345 values (x, y, z): 470.719200, 941.438400, 9728.196800\n"
msgstr ""

msgid "TEST_RESONANCES AXIS=X\n"
msgstr ""

msgid ""
"[resonance_tester]\n"
"accel_chip: adxl345\n"
"accel_per_hz: 50  # default is 75\n"
"probe_points: ...\n"
msgstr ""

msgid "TEST_RESONANCES AXIS=Y\n"
msgstr ""

msgid ""
"~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png\n"
"~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png\n"
msgstr ""

msgid ""
"Fitted shaper 'zv' frequency = 34.4 Hz (vibrations = 4.0%, smoothing ~= 0.132)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 4500 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 34.6 Hz (vibrations = 0.0%, smoothing ~= 0.170)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 3500 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 41.4 Hz (vibrations = 0.0%, smoothing ~= 0.188)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 3200 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 51.8 Hz (vibrations = 0.0%, smoothing ~= 0.201)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 3000 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 61.8 Hz (vibrations = 0.0%, smoothing ~= 0.215)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 2800 mm/sec^2\n"
"Recommended shaper is mzv @ 34.6 Hz\n"
msgstr ""

msgid ""
"[input_shaper]\n"
"shaper_freq_x: ...\n"
"shaper_type_x: ...\n"
"shaper_freq_y: 34.6\n"
"shaper_type_y: mzv\n"
"\n"
"[printer]\n"
"max_accel: 3000  # should not exceed the estimated max_accel for X and Y axes\n"
msgstr ""

msgid ""
"[adxl345 hotend]\n"
"# Assuming `hotend` chip is connected to an RPi\n"
"cs_pin: rpi:None\n"
"\n"
"[adxl345 bed]\n"
"# Assuming `bed` chip is connected to a printer MCU board\n"
"cs_pin: ...  # Printer board SPI chip select (CS) pin\n"
"\n"
"[resonance_tester]\n"
"# Assuming the typical setup of the bed slinger printer\n"
"accel_chip_x: adxl345 hotend\n"
"accel_chip_y: adxl345 bed\n"
"probe_points: ...\n"
msgstr ""

msgid ""
"Fitted shaper 'zv' frequency = 57.8 Hz (vibrations = 20.3%, smoothing ~= 0.053)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 13000 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 34.8 Hz (vibrations = 3.6%, smoothing ~= 0.168)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 3600 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 48.8 Hz (vibrations = 4.9%, smoothing ~= 0.135)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 4400 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 45.2 Hz (vibrations = 0.1%, smoothing ~= 0.264)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 2200 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 48.0 Hz (vibrations = 0.0%, smoothing ~= 0.356)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 1500 mm/sec^2\n"
"Recommended shaper is 2hump_ei @ 45.2 Hz\n"
msgstr ""
"Fitted shaper 'zv' frequency = 57.8 Hz (vibrations = 20.3%, smoothing ~= 0.053)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 13000 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 34.8 Hz (vibrations = 3.6%, smoothing ~= 0.168)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 3600 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 48.8 Hz (vibrations = 4.9%, smoothing ~= 0.135)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 4400 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 45.2 Hz (vibrations = 0.1%, smoothing ~= 0.264)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 2200 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 48.0 Hz (vibrations = 0.0%, smoothing ~= 0.356)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 1500 mm/sec^2\n"
"Recommended shaper is 2hump_ei @ 45.2 Hz\n"

msgid ""
"~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o "
"/tmp/shaper_calibrate_x.png --max_smoothing=0.2\n"
msgstr ""
"~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o "
"/tmp/shaper_calibrate_x.png --max_smoothing=0.2\n"

msgid ""
"Fitted shaper 'zv' frequency = 55.4 Hz (vibrations = 19.7%, smoothing ~= 0.057)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 12000 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 34.6 Hz (vibrations = 3.6%, smoothing ~= 0.170)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 3500 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 48.2 Hz (vibrations = 4.8%, smoothing ~= 0.139)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 4300 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 52.0 Hz (vibrations = 2.7%, smoothing ~= 0.200)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 3000 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 72.6 Hz (vibrations = 1.4%, smoothing ~= 0.155)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 3900 mm/sec^2\n"
"Recommended shaper is 3hump_ei @ 72.6 Hz\n"
msgstr ""
"Fitted shaper 'zv' frequency = 55.4 Hz (vibrations = 19.7%, smoothing ~= 0.057)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 12000 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 34.6 Hz (vibrations = 3.6%, smoothing ~= 0.170)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 3500 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 48.2 Hz (vibrations = 4.8%, smoothing ~= 0.139)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 4300 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 52.0 Hz (vibrations = 2.7%, smoothing ~= 0.200)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 3000 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 72.6 Hz (vibrations = 1.4%, smoothing ~= 0.155)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 3900 mm/sec^2\n"
"Recommended shaper is 3hump_ei @ 72.6 Hz\n"

msgid ""
"[resonance_tester]\n"
"accel_chip: ...\n"
"probe_points: ...\n"
"max_smoothing: 0.25  # an example\n"
msgstr ""
"[resonance_tester]\n"
"accel_chip: ...\n"
"probe_points: ...\n"
"max_smoothing: 0.25  # an example\n"

msgid "SHAPER_CALIBRATE\n"
msgstr "SHAPER_CALIBRATE\n"

msgid ""
"Calculating the best input shaper parameters for y axis\n"
"Fitted shaper 'zv' frequency = 39.0 Hz (vibrations = 13.2%, smoothing ~= 0.105)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 5900 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 36.8 Hz (vibrations = 1.7%, smoothing ~= 0.150)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 4000 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 36.6 Hz (vibrations = 2.2%, smoothing ~= 0.240)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 2500 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 48.0 Hz (vibrations = 0.0%, smoothing ~= 0.234)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 2500 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 59.0 Hz (vibrations = 0.0%, smoothing ~= 0.235)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 2500 mm/sec^2\n"
"Recommended shaper_type_y = mzv, shaper_freq_y = 36.8 Hz\n"
msgstr ""
"Calculating the best input shaper parameters for y axis\n"
"Fitted shaper 'zv' frequency = 39.0 Hz (vibrations = 13.2%, smoothing ~= 0.105)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 5900 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 36.8 Hz (vibrations = 1.7%, smoothing ~= 0.150)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 4000 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 36.6 Hz (vibrations = 2.2%, smoothing ~= 0.240)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 2500 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 48.0 Hz (vibrations = 0.0%, smoothing ~= 0.234)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 2500 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 59.0 Hz (vibrations = 0.0%, smoothing ~= 0.235)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 2500 mm/sec^2\n"
"Recommended shaper_type_y = mzv, shaper_freq_y = 36.8 Hz\n"

msgid "SHAPER_CALIBRATE AXIS=Y\n"
msgstr "SHAPER_CALIBRATE AXIS=Y\n"

msgid "SHAPER_CALIBRATE AXIS=X\n"
msgstr "SHAPER_CALIBRATE AXIS=X\n"

msgid ""
"SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0\n"
"TEST_RESONANCES AXIS=X OUTPUT=raw_data\n"
msgstr ""
"SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0\n"
"TEST_RESONANCES AXIS=X OUTPUT=raw_data\n"

msgid ""
"~/klipper/scripts/graph_accelerometer.py /tmp/raw_data_x_*.csv -o "
"/tmp/resonances_x.png -c -a z\n"
msgstr ""
"~/klipper/scripts/graph_accelerometer.py /tmp/raw_data_x_*.csv -o "
"/tmp/resonances_x.png -c -a z\n"

#: docs/Measuring_Resonances.md:block 80 (header)
msgid "Testing custom axes"
msgstr "自定义测试轴"

#: docs/Measuring_Resonances.md:block 81 (paragraph)
msgid ""
"`TEST_RESONANCES` command supports custom axes. While this is not really "
"useful for input shaper calibration, it can be used to study printer "
"resonances in-depth and to check, for example, belt tension."
msgstr ""

#: docs/Measuring_Resonances.md:block 82 (paragraph)
msgid "To check the belt tension on CoreXY printers, execute"
msgstr ""

#: docs/Measuring_Resonances.md:block 83 (code)
msgid ""
"TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data\n"
"TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data\n"
msgstr ""

#: docs/Measuring_Resonances.md:block 84 (paragraph)
msgid "and use `graph_accelerometer.py` to process the generated files, e.g."
msgstr ""

#: docs/Measuring_Resonances.md:block 85 (code)
msgid ""
"~/klipper/scripts/graph_accelerometer.py -c /tmp/raw_data_axis*.csv -o "
"/tmp/resonances.png\n"
msgstr ""

#: docs/Measuring_Resonances.md:block 86 (paragraph)
msgid "which will generate `/tmp/resonances.png` comparing the resonances."
msgstr "以生成`/tmp/resonances.png`，对比共振的数据。"

#: docs/Measuring_Resonances.md:block 87 (paragraph)
msgid ""
"For Delta printers with the default tower placement (tower A ~= 210 degrees,"
" B ~= 330 degrees, and C ~= 90 degrees), execute"
msgstr "对标准构型的三角洲打印机（A塔~210°，B塔~330°，C塔~90°），执行"

#: docs/Measuring_Resonances.md:block 88 (code)
msgid ""
"TEST_RESONANCES AXIS=0,1 OUTPUT=raw_data\n"
"TEST_RESONANCES AXIS=-0.866025404,-0.5 OUTPUT=raw_data\n"
"TEST_RESONANCES AXIS=0.866025404,-0.5 OUTPUT=raw_data\n"
msgstr ""
"TEST_RESONANCES AXIS=0,1 OUTPUT=raw_data\n"
"TEST_RESONANCES AXIS=-0.866025404,-0.5 OUTPUT=raw_data\n"
"TEST_RESONANCES AXIS=0.866025404,-0.5 OUTPUT=raw_data\n"

#: docs/Measuring_Resonances.md:block 89 (paragraph)
msgid "and then use the same command"
msgstr "然后使用同样的命令"

#: docs/Measuring_Resonances.md:block 91 (paragraph)
msgid "to generate `/tmp/resonances.png` comparing the resonances."
msgstr "以生成`/tmp/resonances.png`，对比共振的数据。"

#: docs/Measuring_Resonances.md:block 3 (paragraph)
msgid ""
"When sourcing ADXL345, be aware that there is a variety of different PCB "
"board designs and different clones of them. Make sure that the board "
"supports SPI mode (small number of boards appear to be hard-configured for "
"I2C by pulling SDO to GND), and, if it is going to be connected to a 5V "
"printer MCU, that it has a voltage regulator and a level shifter."
msgstr ""

#: docs/Measuring_Resonances.md:block 26 (code)
msgid ""
"[mcu rpi]\n"
"serial: /tmp/klipper_host_mcu\n"
"\n"
"[adxl345]\n"
"cs_pin: rpi:None\n"
"\n"
"[resonance_tester]\n"
"accel_chip: adxl345\n"
"probe_points:\n"
"    100, 100, 20  # an example\n"
msgstr ""

#: docs/Measuring_Resonances.md:block 45 (paragraph)
msgid ""
"This will generate 2 CSV files (`/tmp/resonances_x_*.csv` and "
"`/tmp/resonances_y_*.csv`). These files can be processed with the stand-"
"alone script on a Raspberry Pi. To do that, run the following commands:"
msgstr ""

#: docs/Measuring_Resonances.md:block 111 (paragraph)
msgid ""
"The raw data can also be obtained by running the command "
"`ACCELEROMETER_MEASURE` command twice during some normal printer activity - "
"first to start the measurements, and then to stop them and write the output "
"file. Refer to [G-Codes](G-Codes.md#adxl345) for more details."
msgstr ""

#: docs/Measuring_Resonances.md:block 8 (paragraph)
msgid ""
"An alternative to the ADXL345 is the MPU-9250 (or MPU-6050). This "
"accelerometer has been tested to work over I2C on the RPi at 400kbaud. "
"Recommended connection scheme for I2C:"
msgstr ""

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "MPU-9250 pin"
msgstr ""

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "09"
msgstr ""

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "03"
msgstr ""

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "GPIO02 (SDA1)"
msgstr ""

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "05"
msgstr ""

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "GPIO03 (SCL1)"
msgstr ""

#: docs/Measuring_Resonances.md:block 20 (paragraph)
msgid ""
"Note that resonance measurements and shaper auto-calibration require "
"additional software dependencies not installed by default. First, run on "
"your Raspberry Pi the following commands:"
msgstr ""

#: docs/Measuring_Resonances.md:block 21 (code)
msgid ""
"sudo apt update\n"
"sudo apt install python3-numpy python3-matplotlib libatlas-base-dev\n"
msgstr ""

#: docs/Measuring_Resonances.md:block 22 (paragraph)
msgid ""
"Next, in order to install NumPy in the Klipper environment, run the command:"
msgstr ""

#: docs/Measuring_Resonances.md:block 24 (paragraph)
msgid ""
"Note that, depending on the performance of the CPU, it may take *a lot* of "
"time, up to 10-20 minutes. Be patient and wait for the completion of the "
"installation. On some occasions, if the board has too little RAM the "
"installation may fail and you will need to enable swap."
msgstr ""

#: docs/Measuring_Resonances.md:block 27 (paragraph)
msgid "For the ADXL345, add the following to the printer.cfg file:"
msgstr ""

#: docs/Measuring_Resonances.md:block 30 (paragraph)
msgid ""
"For the MPU-9250, make sure the Linux I2C driver is enabled and the baud "
"rate is set to 400000 (see [Enabling I2C](RPi_microcontroller.md#optional-"
"enabling-i2c) section for more details). Then, add the following to the "
"printer.cfg:"
msgstr ""

#: docs/Measuring_Resonances.md:block 31 (code)
msgid ""
"[mcu rpi]\n"
"serial: /tmp/klipper_host_mcu\n"
"\n"
"[mpu9250]\n"
"i2c_mcu: rpi\n"
"i2c_bus: i2c.1\n"
"\n"
"[resonance_tester]\n"
"accel_chip: mpu9250\n"
"probe_points:\n"
"    100, 100, 20  # an example\n"
msgstr ""

#~ msgid ""
#~ "Note that resonance measurements and shaper auto-calibration require "
#~ "additional software dependencies not installed by default. First, you will "
#~ "have to run on your Raspberry Pi the following command:"
#~ msgstr "共振测量和自动整形校正需要额外的依赖项，这些依赖在Klipper安装时未作部署，因此，需要在树莓派上运行下面的命令："

#~ msgid ""
#~ "to install `numpy` package. Note that, depending on the performance of the "
#~ "CPU, it may take *a lot* of time, up to 10-20 minutes. Be patient and wait "
#~ "for the completion of the installation. On some occasions, if the board has "
#~ "too little RAM, the installation may fail and you will need to enable swap."
#~ msgstr ""
#~ "安装`numpy`包。numpy需要在安装时进行编译。编译时间据主机的CPU算力而异，需要*耗费大量时间*，最大可至半小时（PiZero），请耐心等待编译安装完成。少部分情况下，主机的RAM不足会导致安装失败，需要开启swap功能以实现安装。"

#~ msgid "Add the following to the printer.cfg file:"
#~ msgstr "在printer.cfg中添加以下内容："

#~ msgid ""
#~ "Next, run the following commands to install the additional dependencies:"
#~ msgstr ""

#~ msgid ""
#~ "sudo apt update\n"
#~ "sudo apt install python3-numpy python3-matplotlib\n"
#~ msgstr ""

#~ msgid ""
#~ "This will generate 2 CSV files (`/tmp/resonances_x_*.csv` and "
#~ "`/tmp/resonances_y_*.csv`). These files can be processed with the stand-"
#~ "alone script on a Raspberry Pi. To do that, run running the following "
#~ "commands:"
#~ msgstr ""
#~ "这将产生2个CSV文件（`/tmp/resonances_x_*.csv`和`/tmp/resonances_y_*.csv`）。这两个文件可以在树莓派上用独立的脚本进行处理。运行以下命令进行处理："

#~ msgid ""
#~ "The raw data can also be obtained by running the command "
#~ "`ACCELEROMETER_MEASURE` command twice during some normal printer activity - "
#~ "first to start the measurements, and then to stop them and write the output "
#~ "file. Refer to [G-Codes](G-Codes.md#adxl345-accelerometer-commands) for more"
#~ " details."
#~ msgstr ""

#~ msgid ""
#~ "[mcu rpi]\n"
#~ "serial: /tmp/klipper_host_mcu\n"
#~ "\n"
#~ "[adxl345]\n"
#~ "cs_pin: rpi:None\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "accel_chip: adxl345\n"
#~ "probe_points:\n"
#~ "    100,100,20  # an example\n"
#~ msgstr ""

#~ msgid ""
#~ "sudo apt update\n"
#~ "sudo apt install python-numpy python-matplotlib\n"
#~ msgstr ""

#~ msgid ""
#~ "When sourcing ADLX345, be aware that there is a variety of different PCB "
#~ "board designs and different clones of them. Make sure that the board "
#~ "supports SPI mode (small number of boards appear to be hard-configured for "
#~ "I2C by pulling SDO to GND), and, if it is going to be connected to a 5V "
#~ "printer MCU, that it has a voltage regulator and a level shifter."
#~ msgstr ""
#~ "购买ADXL345时，要注意选择合适的PCB版型，务必购买支持SPI模式的产品。少数产品将SDO引脚连接到GND，从而使ADXL硬设置到I2C模式。同时，在将ADXL345连接到5V驱动的MCU时，应在ADXL345和MCU引脚间使用调压模块和电流转换模块。"

#~ msgid ""
#~ "Next, run the following command to install the additional dependencies:"
#~ msgstr ""

#~ msgid "sudo apt install python-numpy python-matplotlib\n"
#~ msgstr ""
