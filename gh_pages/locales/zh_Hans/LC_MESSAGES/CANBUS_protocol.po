# Yifei Ding <dingyifeiair@gmail.com>, 2021, 2022.
# Neko.vecter <Vecterfang@icloud.com>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-08-26 09:05+0000\n"
"Last-Translator: Yifei Ding <dingyifeiair@gmail.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/klipper/canbus_protocol/zh_Hans/>\n"
"Language: zh_Hans\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.14-dev\n"

msgid "Micro-controller id assignment"
msgstr "分配微控制器 ID (Micro-controller id assignment)"

msgid ""
"Klipper uses only CAN 2.0A standard size CAN bus packets, which are limited "
"to 8 data bytes and an 11-bit CAN bus identifier. In order to support "
"efficient communication, each micro-controller is assigned at run-time a "
"unique 1-byte CAN bus nodeid (`canbus_nodeid`) for general Klipper command "
"and response traffic. Klipper command messages going from host to micro-"
"controller use the CAN bus id of `canbus_nodeid * 2 + 256`, while Klipper "
"response messages from micro-controller to host use `canbus_nodeid * 2 + 256"
" + 1`."
msgstr ""
"Klipper使用 CAN 2.0A 标准大小的 CAN Bus 包，是一个被限制在8 data bytes 和 11-bit CAN Bus "
"标识符。为了支持更高效的传输，每个微控制器 (micro-controller) 在运行时候去分配一个 1-byte 的CAN Bus nodeid "
"(`canbus_nodeid`) 通常来说用于Klipper 的命令和响应通信。主机到微控制器的Klipper命令信息使用`canbus_nodeid"
" * 2 + 256`的CAN总线ID，而从微控制器到主机的Klipper响应信息使用`canbus_nodeid * 2 + 256 + 1`。"

msgid ""
"Each micro-controller has a factory assigned unique chip identifier that is "
"used during id assignment. This identifier can exceed the length of one CAN "
"packet, so a hash function is used to generate a unique 6-byte id "
"(`canbus_uuid`) from the factory id."
msgstr ""
"每个微控制器出厂时都有一个用于ID分配的唯一的芯片标识符。这个标识符可以超过一个 CAN 数据包的长度，一个哈希函数会用出厂标识符生成一个唯一的 6 "
"字节标识（`canbus_uuid`）。"

msgid "Admin messages"
msgstr "管理消息"

msgid ""
"Admin messages are used for id assignment. Admin messages sent from host to "
"micro-controller use the CAN bus id `0x3f0` and messages sent from micro-"
"controller to host use the CAN bus id `0x3f1`. All micro-controllers listen "
"to messages on id `0x3f0`; that id can be thought of as a \"broadcast "
"address\"."
msgstr ""
"管理信息用于 ID 分配。从主机发送到微控制器的管理消息使用CAN总线的 ID `0x3f0`，而从微控制器发送到主机的消息使用CAN总线的 ID "
"`0x3f1`。所有的微控制器都听从ID `0x3f0`上的消息；这个 ID 可以被认为是一个\"广播地址\"。"

msgid "CMD_QUERY_UNASSIGNED message"
msgstr "CMD_QUERY_UNASSIGNED 消息"

msgid ""
"This command queries all micro-controllers that have not yet been assigned a"
" `canbus_nodeid`. Unassigned micro-controllers will respond with a "
"RESP_NEED_NODEID response message."
msgstr ""
"该命令查询所有尚未被分配 `canbus_nodeid` 的微控制器。未分配的微控制器将以 RESP_NEED_NODEID 响应消息进行回应。"

msgid ""
"The CMD_QUERY_UNASSIGNED message format is: `<1-byte message_id = 0x00>`"
msgstr "CMD_QUERY_UNASSIGNED 消息格式是：`<1-byte message_id = 0x00>`"

msgid ""
"This command assigns a `canbus_nodeid` to the micro-controller with a given "
"`canbus_uuid`."
msgstr "这个命令根据微处理器给定的 `canbus_uuid` 给相应的微处理器分配一个 `canbus_nodeid`。"

msgid "RESP_NEED_NODEID message"
msgstr "RESP_NEED_NODEID 消息"

msgid "Data Packets"
msgstr "数据包"

msgid ""
"The packet data in messages using the node's receive CAN bus id "
"(`canbus_nodeid * 2 + 256`) are simply appended to a buffer, and when a "
"complete [mcu protocol message](Protocol.md) is found its contents are "
"parsed and processed. The data is treated as a byte stream - there is no "
"requirement for the start of a Klipper message block to align with the start"
" of a CAN bus packet."
msgstr ""
"带有节点接收 CAN 总线ID（`canbus_nodeid * 2 + 256`）的消息中的数据包被简单地添加到一个缓冲区，当一个完整的[mcu "
"协议消息](Protocol.md)被找到时，其内容会被解析和处理。数据被视为比特流（byte stream）- "
"Klipper信息块的开头不需要与CAN bus的数据包开头对齐。"

msgid ""
"Similarly, mcu protocol message responses are sent from micro-controller to "
"host by copying the message data into one or more packets with the node's "
"transmit CAN bus id (`canbus_nodeid * 2 + 256 + 1`)."
msgstr ""
"类似地，mcu 协议消息响应通过将消息数据插入到具有节点发送 CAN 总线 ID 的一个或多个数据包（`canbus_nodeid * 2 + 256 "
"+ 1`）并从微控制器发送到主机。"

#: docs/CANBUS_protocol.md:block 1 (header)
msgid "CANBUS protocol"
msgstr "CANBUS 协议 (CANBUS protocol)"

#: docs/CANBUS_protocol.md:block 2 (paragraph)
msgid ""
"This document describes the protocol Klipper uses to communicate over [CAN "
"bus](https://en.wikipedia.org/wiki/CAN_bus). See <CANBUS.md> for information"
" on configuring Klipper with CAN bus."
msgstr ""
"本文档描述了 Klipper "
"通过[CAN总线](https://en.wikipedia.org/wiki/CAN_bus)进行通信的协议。参见<CANBUS.md>了解如何在 "
"Klipper 中配置 CAN 总线。"

#: docs/CANBUS_protocol.md:block 11 (header)
msgid "CMD_SET_KLIPPER_NODEID message"
msgstr "CMD_SET_KLIPPER_NODEID 信息"

#: docs/CANBUS_protocol.md:block 13 (paragraph)
msgid ""
"The CMD_SET_KLIPPER_NODEID message format is: `<1-byte message_id = "
"0x01><6-byte canbus_uuid><1-byte canbus_nodeid>`"
msgstr ""
"CMD_SET_KLIPPER_NODEID 消息的格式是：`<1-byte message_id = 0x01><6-byte "
"canbus_uuid><1-byte canbus_nodeid>`"

#: docs/CANBUS_protocol.md:block 15 (paragraph)
msgid ""
"The RESP_NEED_NODEID message format is: `<1-byte message_id = 0x20><6-byte "
"canbus_uuid><1-byte set_klipper_nodeid = 0x01>`"
msgstr ""
"RESP_NEED_NODEID 消息的格式是：`<1-byte message_id = 0x20><6-byte "
"canbus_uuid><1-byte set_klipper_nodeid = 0x01>`"

#: docs/CANBUS_protocol.md:block 17 (paragraph)
msgid ""
"A micro-controller that has been assigned a nodeid via the "
"CMD_SET_KLIPPER_NODEID command can send and receive data packets."
msgstr "被 CMD_SET_KLIPPER_NODEID 命令分配了节点的微控制器可以接受和发送数据包。"

#~ msgid "CMD_SET_NODEID message"
#~ msgstr "CMD_SET_NODEID 消息"

#~ msgid ""
#~ "The CMD_SET_NODEID message format is: `<1-byte message_id = 0x01><6-byte "
#~ "canbus_uuid><1-byte canbus_nodeid>`"
#~ msgstr ""
#~ "CMD_SET_NODEID 的消息格式是：`<1-byte message_id = 0x01><6-byte canbus_uuid><1-byte"
#~ " canbus_nodeid>`"

#~ msgid ""
#~ "The RESP_NEED_NODEID message format is: `<1-byte message_id = 0x20><6-byte "
#~ "canbus_uuid>`"
#~ msgstr "RESP_NEED_NODEID消息格式为：`<1字节message_id = 0x20><6字节canbus_uuid>`"

#~ msgid ""
#~ "A micro-controller that has been assigned a nodeid via the CMD_SET_NODEID "
#~ "command can send and receive data packets."
#~ msgstr "通过 CMD_SET_NODEID 命令分配了节点 ID 的微控制器可以发送和接收数据包。"

#~ msgid ""
#~ "This document describes the protocol Klipper uses to communicate over [CAN "
#~ "bus](https://en.wikipedia.org/wiki/CAN_bus). See [CANBUS.md](CANBUS.md) for "
#~ "information on configuring Klipper with CAN bus."
#~ msgstr ""
