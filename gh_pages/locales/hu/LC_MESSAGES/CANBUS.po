# Zs.Antal <zsikaiantal@gmail.com>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-09-25 10:15+0000\n"
"Last-Translator: Zs.Antal <zsikaiantal@gmail.com>\n"
"Language-Team: Hungarian <https://hosted.weblate.org/projects/klipper/canbus/"
"hu/>\n"
"Language: hu\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.14.1\n"

msgid "This document describes Klipper's CAN bus support."
msgstr "Ez a dokumentum a Klipper CAN busz támogatását írja le."

msgid "Device Hardware"
msgstr "Eszköz Hardver"

msgid "Host Hardware"
msgstr "Gazdagép Hardver"

msgid ""
"In order to use a CAN bus, it is necessary to have a host adapter. There are "
"currently two common options:"
msgstr ""
"A CAN-busz használatához szükség van egy host-adapterre. Jelenleg két "
"elterjedt lehetőség van:"

msgid ""
"Use a [Waveshare Raspberry Pi CAN hat](https://www.waveshare.com/rs485-can-"
"hat.htm) or one of its many clones."
msgstr ""
"Használjon egy [Waveshare Raspberry Pi CAN sapkát](https://www.waveshare.com/"
"rs485-can-hat.htm) vagy annak számos klónja közül egyet."

msgid ""
"It is also necessary to configure the host operating system to use the "
"adapter. This is typically done by creating a new file named `/etc/network/"
"interfaces.d/can0` with the following contents:"
msgstr ""
"Az adapter használatához a gazdagép operációs rendszert is konfigurálni "
"kell. Ez általában úgy történik, hogy létrehozunk egy új `/etc/network/"
"interfaces.d/can0` nevű fájlt a következő tartalommal:"

msgid ""
"Note that the \"Raspberry Pi CAN hat\" also requires [changes to config.txt]"
"(https://www.waveshare.com/wiki/RS485_CAN_HAT)."
msgstr ""
"Ne feledd, hogy a \"Raspberry Pi CAN sapka\" is megköveteli a [config.txt "
"módosítását](https://www.waveshare.com/wiki/RS485_CAN_HAT)."

msgid "Terminating Resistors"
msgstr "Az ellenállások megszüntetése"

msgid ""
"A CAN bus should have two 120 ohm resistors between the CANH and CANL wires. "
"Ideally, one resistor located at each the end of the bus."
msgstr ""
"A CAN-buszon két 120 ohmos ellenállásnak kell lennie a CANH és CANL "
"vezetékek között. Ideális esetben egy-egy ellenállás a busz mindkét végén "
"található."

msgid ""
"Note that some devices have a builtin 120 ohm resistor (for example, the "
"\"Waveshare Raspberry Pi CAN hat\" has a soldered on resistor that can not "
"be easily removed). Some devices do not include a resistor at all. Other "
"devices have a mechanism to select the resistor (typically by connecting a "
"\"pin jumper\"). Be sure to check the schematics of all devices on the CAN "
"bus to verify that there are two and only two 120 Ohm resistors on the bus."
msgstr ""
"Vedd figyelembe, hogy egyes eszközök beépített 120 ohmos ellenállással "
"rendelkeznek (például a \"Waveshare Raspberry Pi CAN sapka\" egy "
"beforrasztott ellenállással rendelkezik, amelyet nem lehet könnyen "
"eltávolítani). Egyes eszközök egyáltalán nem tartalmaznak ellenállást. Más "
"eszközök rendelkeznek egy mechanizmussal az ellenállás kiválasztására "
"(általában egy \"pin jumper\" csatlakoztatásával). Mindenképpen ellenőrizze "
"a CAN-buszon lévő összes eszköz kapcsolási rajzát, hogy a buszon két és csak "
"két 120 Ohm-os ellenállás van-e."

msgid ""
"To test that the resistors are correct, one can remove power to the printer "
"and use a multi-meter to check the resistance between the CANH and CANL "
"wires - it should report ~60 ohms on a correctly wired CAN bus."
msgstr ""
"Az ellenállások értékének teszteléséhez a nyomtatót áramtalaníthatja, és egy "
"multi-méterrel ellenőrizheti a CANH és CANL vezetékek közötti ellenállást. "
"Egy helyesen bekötött CAN-buszon ~60 ohmot kell mérnie."

msgid "Finding the canbus_uuid for new micro-controllers"
msgstr "A canbus_uuid keresése új mikrovezérlőkhöz"

msgid ""
"Each micro-controller on the CAN bus is assigned a unique id based on the "
"factory chip identifier encoded into each micro-controller. To find each "
"micro-controller device id, make sure the hardware is powered and wired "
"correctly, and then run:"
msgstr ""
"A CAN-buszon lévő minden mikrovezérlőhöz egyedi azonosítót rendelnek a gyári "
"chipazonosító alapján, amely minden mikrovezérlőbe kódolva van. Az egyes "
"mikrokontrollerek eszközazonosítójának megtalálásához győződjön meg arról, "
"hogy a hardver megfelelően van bekapcsolva és bekötve, majd futtassa le:"

msgid ""
"If uninitialized CAN devices are detected the above command will report "
"lines like the following:"
msgstr ""
"Ha nem inicializált CAN-eszközöket észlelsz, a fenti parancs a következő "
"sorokat fogja jelenteni:"

msgid ""
"Each device will have a unique identifier. In the above example, "
"`11aa22bb33cc` is the micro-controller's \"canbus_uuid\"."
msgstr ""
"Minden eszköz egyedi azonosítóval rendelkezik. A fenti példában "
"`11aa22bb33cc` a mikrokontroller \"canbus_uuid\" azonosítója."

msgid ""
"Note that the `canbus_query.py` tool will only report uninitialized devices "
"- if Klipper (or a similar tool) configures the device then it will no "
"longer appear in the list."
msgstr ""
"Vedd figyelembe, hogy a `canbus_query.py` eszköz csak az inicializálatlan "
"eszközöket jelzi. Ha a Klipper (vagy egy hasonló eszköz) konfigurálja az "
"eszközt, akkor az már nem jelenik meg a listában."

msgid "Configuring Klipper"
msgstr "A Klipper beállítása"

msgid ""
"Update the Klipper [mcu configuration](Config_Reference.md#mcu) to use the "
"CAN bus to communicate with the device - for example:"
msgstr ""
"Frissítse a Klipper [mcu konfigurációt](Config_Reference.md#mcu), hogy a CAN-"
"buszon keresztül kommunikáljon az eszközzel - például:"

msgid ""
"auto can0\n"
"iface can0 can static\n"
"    bitrate 500000\n"
"    up ifconfig $IFACE txqueuelen 128\n"
msgstr ""
"auto can0\n"
"iface can0 can static\n"
"    bitrate 500000\n"
"    up ifconfig $IFACE txqueuelen 128\n"

msgid "~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0\n"
msgstr "~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0\n"

msgid ""
"[mcu my_can_mcu]\n"
"canbus_uuid: 11aa22bb33cc\n"
msgstr ""
"[mcu my_can_mcu]\n"
"canbus_uuid: 11aa22bb33cc\n"

#: docs/CANBUS.md:block 1 (header)
msgid "CANBUS"
msgstr "CANBUS"

#: docs/CANBUS.md:block 8 (ordered list)
msgid ""
"Use a USB CAN adapter (for example <https://hacker-gadgets.com/product/"
"cantact-usb-can-adapter/>). There are many different USB to CAN adapters "
"available - when choosing one, we recommend verifying it can run the "
"[candlelight firmware](https://github.com/candle-usb/candleLight_fw). "
"(Unfortunately, we've found some USB adapters run defective firmware and are "
"locked down, so verify before purchasing.)"
msgstr ""
"Használjon USB CAN-adaptert (például <https://hacker-gadgets.com/product/"
"cantact-usb-can-adapter/>). Számos különböző USB-CAN adapter áll "
"rendelkezésre - az adapter kiválasztásakor javasoljuk, hogy ellenőrizze, "
"hogy képes-e a [candlelight firmware](https://github.com/candle-usb/"
"candleLight_fw) futtatására. (Sajnos azt tapasztaltuk, hogy néhány USB-"
"adapter hibás firmware-t futtat, és le van zárva, ezért vásárlás előtt "
"ellenőrizze.)"

#: docs/CANBUS.md:block 5 (paragraph)
msgid ""
"To compile for CAN, run `make menuconfig` and select \"CAN bus\" as the "
"communication interface. Finally, compile the micro-controller code and "
"flash it to the target board."
msgstr ""
"A CAN-hez való fordításhoz futtassa a `make menuconfig` parancsot, és "
"válassza a \"CAN busz\" kommunikációs interfészt. Végül fordítsa le a "
"mikrokontroller kódját, és égesse a céllapra."

#: docs/CANBUS.md:block 26 (header)
msgid "USB to CAN bus bridge mode"
msgstr "USB és CAN-busz közötti híd üzemmód"

#: docs/CANBUS.md:block 27 (paragraph)
msgid ""
"Some micro-controllers support selecting \"USB to CAN bus bridge\" mode "
"during \"make menuconfig\". This mode may allow one to use a micro-"
"controller as both a \"USB to CAN bus adapter\" and as a Klipper node."
msgstr ""
"Egyes mikrovezérlők támogatják az \"USB to CAN bus bridge\" üzemmód "
"kiválasztását a \"make menuconfig\" során. Ez az üzemmód lehetővé teheti, "
"hogy egy mikrokontrollert \"USB CAN busz adapterként\" és Klipper "
"csomópontként is használjunk."

#: docs/CANBUS.md:block 28 (paragraph)
msgid ""
"When Klipper uses this mode the micro-controller appears as a \"USB CAN bus "
"adapter\" under Linux. The \"Klipper bridge mcu\" itself will appear as if "
"was on this CAN bus - it can be identified via `canbus_query.py` and "
"configured like other CAN bus Klipper nodes. It will appear alongside other "
"devices that are actually on the CAN bus."
msgstr ""
"Amikor a Klipper ezt az üzemmódot használja, a mikrokontroller \"USB CAN "
"busz adapterként\" jelenik meg Linux alatt. Maga a \"Klipper bridge mcu\" "
"úgy jelenik meg, mintha ezen a CAN buszon lenne. A `canbus_query.py` "
"segítségével azonosítható és konfigurálható, mint a többi CAN buszos Klipper "
"csomópont. A többi, ténylegesen a CAN-buszon lévő eszköz mellett fog "
"megjelenni."

#: docs/CANBUS.md:block 29 (paragraph)
msgid "Some important notes when using this mode:"
msgstr "Néhány fontos megjegyzés ennek az üzemmódnak a használatához:"

#: docs/CANBUS.md:block 30 (unordered list)
msgid ""
"The \"bridge mcu\" is not actually on the CAN bus. Messages to and from it "
"do not consume bandwidth on the CAN bus. The mcu can not be seen by other "
"adapters that may be on the CAN bus."
msgstr ""
"A \"bridge mcu\" valójában nem a CAN-buszon van. A hozzá érkező és tőle "
"érkező üzenetek nem fogyasztanak sávszélességet a CAN-buszon. Az MCU-t nem "
"láthatják más adapterek, amelyek esetleg a CAN-buszon vannak."

#: docs/CANBUS.md:block 30 (unordered list)
msgid ""
"It is necessary to configure the `can0` (or similar) interface in Linux in "
"order to communicate with the bus. However, Linux CAN bus speed and CAN bus "
"bit-timing options are ignored by Klipper. Currently, the CAN bus frequency "
"is specified during \"make menuconfig\" and the bus speed specified in Linux "
"is ignored."
msgstr ""
"A busszal való kommunikációhoz szükséges a `can0` (vagy hasonló) interfész "
"konfigurálása Linuxban. A Linux CAN-busz sebességét és a CAN-busz bit-"
"időzítési beállításait azonban a Klipper figyelmen kívül hagyja. Jelenleg a "
"CAN-busz frekvenciáját a \"make menuconfig\" futtatása során kell megadni, "
"és a Linuxban megadott buszsebességet figyelmen kívül hagyjuk."

#: docs/CANBUS.md:block 4 (paragraph)
msgid ""
"Klipper currently supports CAN on stm32 and rp2040 chips. In addition, the "
"micro-controller chip must be on a board that has a CAN transceiver."
msgstr ""
"A Klipper jelenleg támogatja a CAN-t az STM32 és RP2040 chipeken. Ezenkívül "
"a mikrokontroller chipnek olyan lapkán kell lennie, amely rendelkezik CAN "
"csatlakozóval."

#: docs/CANBUS.md:block 20 (code)
msgid "Found canbus_uuid=11aa22bb33cc, Application: Klipper\n"
msgstr "Talált canbus_uuid=11aa22bb33cc, Alkalmazás: Klipper\n"

#: docs/CANBUS.md:block 30 (unordered list)
msgid ""
"Whenever the \"bridge mcu\" is reset, Linux will disable the corresponding "
"`can0` interface. To ensure proper handling of FIRMWARE_RESTART and RESTART "
"commands, it is recommended to replace `auto` with `allow-hotplug` in the `/"
"etc/network/interfaces.d/can0` file. For example:"
msgstr ""
"Amikor a \"bridge mcu\" visszaáll, a Linux letiltja a megfelelő `can0` "
"interfészt. A FIRMWARE_RESTART és a RESTART parancsok megfelelő kezelése "
"érdekében ajánlott az `/etc/network/interfaces.d/can0` fájlban az `auto` "
"helyett az `allow-hotplug` parancsot használni. Például:"

#: docs/CANBUS.md:block 31 (code)
msgid ""
"allow-hotplug can0\n"
"iface can0 can static\n"
"    bitrate 500000\n"
"    up ifconfig $IFACE txqueuelen 128\n"
msgstr ""
"allow-hotplug can0\n"
"iface can0 can static\n"
"    bitrate 500000\n"
"    up ifconfig $IFACE txqueuelen 128\n"

#~ msgid ""
#~ "Klipper currently only supports CAN on stm32 chips. In addition, the "
#~ "micro-controller chip must support CAN and it must be on a board that has "
#~ "a CAN transceiver."
#~ msgstr ""
#~ "A Klipper jelenleg csak az STM32 chipeken támogatja a CAN-t. Ezenkívül a "
#~ "mikrokontroller chipnek támogatnia kell a CAN-t, és olyan lapon kell "
#~ "lennie, amely rendelkezik CAN adó-vevővel."

#~ msgid "Found canbus_uuid=11aa22bb33cc\n"
#~ msgstr "Talált canbus_uuid=11aa22bb33cc\n"

#~ msgid ""
#~ "Whenever the \"bridge mcu\" is reset, Linux will disable the "
#~ "corresponding `can0` interface. Generally, this may require running "
#~ "commands such as \"ip up\" to restart the interface. Thus, Klipper "
#~ "FIRMWARE_RESTART commands (or regular RESTART after a config change) may "
#~ "require restarting the `can0` interface."
#~ msgstr ""
#~ "Amikor a \"bridge mcu\" visszaáll, a Linux letiltja a megfelelő `can0` "
#~ "interfészt. Általában ehhez olyan parancsok futtatására lehet szükség, "
#~ "mint például az \"ip up\", hogy újraindítsa az interfészt. Így a Klipper "
#~ "FIRMWARE_RESTART parancsok (vagy egy konfigurációváltás után a szokásos "
#~ "RESTART) a `can0` interfész újraindítását igényelhetik."
