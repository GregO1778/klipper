# Fred Chan <fred2088@gmail.com>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-02-27 14:54+0000\n"
"Last-Translator: Fred Chan <fred2088@gmail.com>\n"
"Language-Team: Chinese (Traditional) <https://hosted.weblate.org/projects/klipper/measuring_resonances/zh_Hant/>\n"
"Language: zh_Hant\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.11.1-dev\n"

msgid "Measuring Resonances"
msgstr "共振值測量"

msgid ""
"Klipper has built-in support for ADXL345 accelerometer, which can be used to"
" measure resonance frequencies of the printer for different axes, and auto-"
"tune [input shapers](Resonance_Compensation.md) to compensate for "
"resonances. Note that using ADXL345 requires some soldering and crimping. "
"ADXL345 can be connected to a Raspberry Pi directly, or to an SPI interface "
"of an MCU board (it needs to be reasonably fast)."
msgstr ""
"Klipper內建有ADXL345加速度感測器驅動，可用以測量印表機不同運動軸發生共振的頻率，從而自動進行 "
"[輸入整形](Resonance_Compensation.md) "
"以實現共振補償。注意使用ADXL345需要進行焊接和壓線。ADXL345可以直接連線到樹莓派，也可以連線到MCU的SPI匯流排（注意MCU有一定的效能需求）。"

msgid "Installation instructions"
msgstr "安裝指南"

msgid "Wiring"
msgstr "接線"

msgid ""
"You need to connect ADXL345 to your Raspberry Pi via SPI. Note that the I2C "
"connection, which is suggested by ADXL345 documentation, has too low "
"throughput and **will not work**. The recommended connection scheme:"
msgstr ""
"我們需要將ADXL345連線到樹莓派的SPI介面。注意，儘管ADXL345文件推薦使用I2C，但其數據吞吐能力不足，**不能**實現共振測量的要求。推薦的接線圖為："

msgid "ADXL345 pin"
msgstr "ADXL345引腳"

msgid "RPi pin"
msgstr "樹莓派引腳"

msgid "RPi pin name"
msgstr "樹莓派引腳名稱"

msgid "3V3 (or VCC)"
msgstr "3V3 或 VCC"

msgid "01"
msgstr "01"

msgid "3.3v DC power"
msgstr "3.3v 直流（DC）電源"

msgid "GND"
msgstr "GND"

msgid "06"
msgstr "06"

msgid "Ground"
msgstr "地（GND）"

msgid "CS"
msgstr "CS（晶片選定）"

msgid "24"
msgstr "24"

msgid "GPIO08 (SPI0_CE0_N)"
msgstr "GPIO08 (SPI0_CE0_N)"

msgid "SDO"
msgstr "SDO"

msgid "21"
msgstr "21"

msgid "GPIO09 (SPI0_MISO)"
msgstr "GPIO09 (SPI0_MISO)"

msgid "SDA"
msgstr "SDA"

msgid "19"
msgstr "19"

msgid "GPIO10 (SPI0_MOSI)"
msgstr "GPIO10 (SPI0_MOSI)"

msgid "SCL"
msgstr "SCL"

msgid "23"
msgstr "23"

msgid "GPIO11 (SPI0_SCLK)"
msgstr "GPIO11 (SPI0_SCLK)"

msgid "Fritzing wiring diagrams for some of the ADXL345 boards:"
msgstr "部分ADXL345開發板的Fritzing接線圖如下："

msgid "![ADXL345-Rpi](img/adxl345-fritzing.png)"
msgstr "![ADXL345-樹莓派](img/adxl345-fritzing.png)"

msgid ""
"Double-check your wiring before powering up the Raspberry Pi to prevent "
"damaging it or the accelerometer."
msgstr "為避免損害樹莓派或加速度感測器，請再三確認接線正確再對樹莓派上電。"

msgid "Mounting the accelerometer"
msgstr "固定加速度感測器"

msgid ""
"The accelerometer must be attached to the toolhead. One needs to design a "
"proper mount that fits their own 3D printer. It is better to align the axes "
"of the accelerometer with the printer's axes (but if it makes it more "
"convenient, axes can be swapped - i.e. no need to align X axis with X and so"
" forth - it should be fine even if Z axis of accelerometer is X axis of the "
"printer, etc.)."
msgstr ""
"加速度感測器應固定在列印頭上。應根據印表機的情況設計合適的固定件。推薦將加速度的測量軸與印表機執行軸的方向進行對齊。然而，如果軸對齊極其麻煩，可以將印表機的軸使用其他測量軸對齊，比如印表機+X對應感測器-X，甚至印表機+X對應感測器-"
"Z等。"

msgid "An example of mounting ADXL345 on the SmartEffector:"
msgstr "下面是ADXL345固定到SmartEffector的示例："

msgid "![ADXL345 on SmartEffector](img/adxl345-mount.jpg)"
msgstr "![ADXL345固定在SmartEffector](img/adxl345-mount.jpg)"

msgid ""
"Note that on a bed slinger printer one must design 2 mounts: one for the "
"toolhead and one for the bed, and run the measurements twice. See the "
"corresponding [section](#bed-slinger-printers) for more details."
msgstr ""
"注意，滑床式印表機需要設計兩個固定件：一個安裝于列印頭，另一個用於熱床，並進行兩次測量。詳見 [對應分節](#bed-slinger-"
"printers)。"

msgid ""
"**Attention:** make sure the accelerometer and any screws that hold it in "
"place do not touch any metal parts of the printer. Basically, the mount must"
" be designed such as to ensure the electrical isolation of the accelerometer"
" from the printer frame. Failing to ensure that can create a ground loop in "
"the system that may damage the electronics."
msgstr ""
"**注意**：務必確保加速度感測器和任何螺絲都不應該接觸到印表機的金屬部分。緊韌體必須設計成在加速度感測器和印表機框體間形成電氣絕緣。錯誤的設計可能會形成短路，從而損毀電氣元件。"

msgid "Software installation"
msgstr "軟體設定"

msgid ""
"Afterwards, check and follow the instructions in the [RPi Microcontroller "
"document](RPi_microcontroller.md) to setup the \"linux mcu\" on the "
"Raspberry Pi."
msgstr "之後，參考[樹莓派作為微控制器文件](RPi_microcontroller.md)的指引完成「LINUX微處理器」的設定。"

msgid ""
"Make sure the Linux SPI driver is enabled by running `sudo raspi-config` and"
" enabling SPI under the \"Interfacing options\" menu."
msgstr ""
"通過執行`sudo raspi-config` 后的 \"Interfacing options\"菜單中啟用 SPI 以確保Linux SPI "
"驅動已啟用。"

msgid ""
"It is advised to start with 1 probe point, in the middle of the print bed, "
"slightly above it."
msgstr "建議在測試開始前，用探針在熱床中央進行一次探測，觸發后稍微上移。"

msgid "Restart Klipper via the `RESTART` command."
msgstr "通過`RESTART`命令重啟Klipper。"

msgid "Measuring the resonances"
msgstr "測量共振值"

msgid "Checking the setup"
msgstr "檢查設定"

msgid "Now you can test a connection."
msgstr "首先測試加速度感測器的連線。"

msgid ""
"For \"non bed-slingers\" (e.g. one accelerometer), in Octoprint, enter "
"`ACCELEROMETER_QUERY`"
msgstr "對於只有一個加速度感測器的情況，在Octoprint，輸入`ACCELEROMETER_QUERY`（遍歷已連線的加速度感測器）"

msgid ""
"For \"bed-slingers\" (e.g. more than one accelerometer), enter "
"`ACCELEROMETER_QUERY CHIP=<chip>` where `<chip>` is the name of the chip as-"
"entered, e.g. `CHIP=bed` (see: [bed-slinger](#bed-slinger-printers)) for all"
" installed accelerometer chips."
msgstr ""
"對於「滑動床」（即有多個加速度感測器），輸入`ACCELEROMETER_QUERY "
"CHIP=<chip>`，其中`<chip>`是設定文件中的加速度感測器命名，例如 `CHIP=bed`(參見：[bed-slinger](#bed-"
"slinger-printers))。"

msgid ""
"You should see the current measurements from the accelerometer, including "
"the free-fall acceleration, e.g."
msgstr "畫面將輸出加速度感測器的讀值，板子自由落體加速度，例如："

msgid ""
"If you get an error like `Invalid adxl345 id (got xx vs e5)`, where `xx` is "
"some other ID, it is indicative of the connection problem with ADXL345, or "
"the faulty sensor. Double-check the power, the wiring (that it matches the "
"schematics, no wire is broken or loose, etc.), and soldering quality."
msgstr ""
"如果輸出類似 `Invalid adxl345 id (got xx vs "
"e5)`，其中'xx'為e5以外ID，這表示出現連線問題（如，連線錯誤、線纜電阻過大、干擾等），或感測器錯誤（如，殘次感測器 或 "
"錯誤的感測器）。請在此檢查電源，接線（再三確定接線正確，沒有破損、鬆動的電線）或焊接問題。"

msgid ""
"Next, try running `MEASURE_AXES_NOISE` in Octoprint, you should get some "
"baseline numbers for the noise of accelerometer on the axes (should be "
"somewhere in the range of ~1-100). Too high axes noise (e.g. 1000 and more) "
"can be indicative of the sensor issues, problems with its power, or too "
"noisy imbalanced fans on a 3D printer."
msgstr ""
"下一步，在Octoprint中輸入 "
"`MEASURE_AXES_NOISE`，之後將會顯示各個軸的基準測量噪聲（其值應在1-100之間）。如果軸的噪聲極高（例如 1000 "
"或更高）可能意味著3D印表機上存在感測器問題、電源問題或不平衡的風扇。"

msgid "Now you can run some real-life tests. Run the following command:"
msgstr "現在可以執行進行實測。執行以下命令:"

msgid ""
"Note that it will create vibrations on X axis. It will also disable input "
"shaping if it was enabled previously, as it is not valid to run the "
"resonance testing with the input shaper enabled."
msgstr "注意，這將在X軸上產生振動。如果之前啟用了輸入整形，它也將禁用輸入整形，因為在啟用輸入整形的情況下執行共振測試是無效的。"

msgid ""
"**Attention!** Be sure to observe the printer for the first time, to make "
"sure the vibrations do not become too violent (`M112` command can be used to"
" abort the test in case of emergency; hopefully it will not come to this "
"though). If the vibrations do get too strong, you can attempt to specify a "
"lower than the default value for `accel_per_hz` parameter in "
"`[resonance_tester]` section, e.g."
msgstr ""
"**注意！**請確保第一次執行時時刻觀察印表機，以確保振動不會太劇烈（`M112`命令可以在緊急情況下中止測試；但願不會到這一步）。如果振動確實太強烈，你可以嘗試在`[Resonance_tester]`分段中為`accel_per_hz`參數指定一個低於預設值的值，例如:"

msgid "If it works for X axis, run for Y axis as well:"
msgstr "如果它適用於 X 軸，則也可以為 Y 軸執行："

msgid ""
"This script will generate the charts `/tmp/shaper_calibrate_x.png` and "
"`/tmp/shaper_calibrate_y.png` with frequency responses. You will also get "
"the suggested frequencies for each input shaper, as well as which input "
"shaper is recommended for your setup. For example:"
msgstr ""
"該腳本將生成帶有頻率響應的圖表`/tmp/shaper_calibrate_x.png`和`/tmp/shaper_calibrate_y.png`。您還將獲得每個輸入整形器的建議頻率，以及為您的設置推薦的輸入整形器。例如："

msgid "![Resonances](img/calibrate-y.png)"
msgstr "![Resonances](img/calibrate-y.png)"

msgid ""
"The suggested configuration can be added to `[input_shaper]` section of "
"`printer.cfg`, e.g.:"
msgstr "建議的配置可以添加到 `printer.cfg` 的 `[input_shaper]` 部分，例如："

msgid ""
"or you can choose some other configuration yourself based on the generated "
"charts: peaks in the power spectral density on the charts correspond to the "
"resonance frequencies of the printer."
msgstr "或者您可以根據生成的圖表自行選擇其他配置：圖表上功率譜密度的峰值對應於打印機的共振頻率。"

msgid ""
"Note that alternatively you can run the input shaper autocalibration from "
"Klipper [directly](#input-shaper-auto-calibration), which can be convenient,"
" for example, for the input shaper [re-calibration](#input-shaper-re-"
"calibration)."
msgstr ""
"請注意，您也可以從 Klipper [直接](#input-shaper-auto-calibration) "
"運行輸入整形器自動校準，例如，對於輸入整形器 [re-calibration](#input-shaper-re -校準）。"

msgid "Bed-slinger printers"
msgstr "Bed-slinger打印機"

msgid ""
"If your printer is a bed slinger printer, you will need to change the "
"location of the accelerometer between the measurements for X and Y axes: "
"measure the resonances of X axis with the accelerometer attached to the "
"toolhead and the resonances of Y axis - to the bed (the usual bed slinger "
"setup)."
msgstr ""
"如果您的打印機是拋床打印機，您將需要在 X 軸和 Y 軸測量值之間更改加速度計的位置：用連接到工具頭的加速度計測量 X 軸的共振和 Y 軸的共振 - "
"到床（通常的床吊具設置）。"

msgid ""
"However, you can also connect two accelerometers simultaneously, though they"
" must be connected to different boards (say, to an RPi and printer MCU "
"board), or to two different physical SPI interfaces on the same board "
"(rarely available). Then they can be configured in the following manner:"
msgstr ""
"但是，您也可以同時連接兩個加速度計，儘管它們必須連接到不同的板（例如，連接到 RPi 和打印機 MCU 板），或者連接到同一板上的兩個不同的物理 SPI"
" 接口（很少可用）。然後可以通過以下方式配置它們："

msgid ""
"Then the commands `TEST_RESONANCES AXIS=X` and `TEST_RESONANCES AXIS=Y` will"
" use the correct accelerometer for each axis."
msgstr ""
"然後命令 `TEST_RESONANCES AXIS=X` 和 `TEST_RESONANCES AXIS=Y` 將為每個軸使用正確的加速度計。"

msgid "Max smoothing"
msgstr "最大平滑度"

msgid ""
"Keep in mind that the input shaper can create some smoothing in parts. "
"Automatic tuning of the input shaper performed by `calibrate_shaper.py` "
"script or `SHAPER_CALIBRATE` command tries not to exacerbate the smoothing, "
"but at the same time they try to minimize the resulting vibrations. "
"Sometimes they can make a sub-optimal choice of the shaper frequency, or "
"maybe you simply prefer to have less smoothing in parts at the expense of a "
"larger remaining vibrations. In these cases, you can request to limit the "
"maximum smoothing from the input shaper."
msgstr ""
"請記住，輸入整形器可以在部分中創建一些平滑。由 `calibrate_shaper.py` 腳本或 `SHAPER_CALIBRATE` "
"命令執行的輸入整形器的自動調整試圖不加劇平滑，但同時它們試圖最小化產生的振動。有時他們可以對整形器頻率做出次優選擇，或者您可能只是希望以較大的剩余振動為代價來減少零件的平滑度。在這些情況下，您可以請求限制輸入整形器的最大平滑。"

msgid "Let's consider the following results from the automatic tuning:"
msgstr "讓我們考慮以下自動調整的結果："

msgid "![Resonances](img/calibrate-x.png)"
msgstr "![Resonances](img/calibrate-x.png)"

msgid ""
"Note that the reported `smoothing` values are some abstract projected "
"values. These values can be used to compare different configurations: the "
"higher the value, the more smoothing a shaper will create. However, these "
"smoothing scores do not represent any real measure of smoothing, because the"
" actual smoothing depends on [`max_accel`](#selecting-max-accel) and "
"`square_corner_velocity` parameters. Therefore, you should print some test "
"prints to see how much smoothing exactly a chosen configuration creates."
msgstr ""
"請注意，報告的“平滑”值是一些抽象的投影值。這些值可用於比較不同的配置：值越高，整形器將創建的平滑度越高。然而，這些平滑分數並不代表任何真正的平滑度量，因為實際的平滑取決於"
" [`max_accel`](#selecting-max-accel) 和 `square_corner_velocity` "
"參數。因此，您應該打印一些測試打印，以查看所選配置創建的平滑程度。"

msgid ""
"In the example above the suggested shaper parameters are not bad, but what "
"if you want to get less smoothing on the X axis? You can try to limit the "
"maximum shaper smoothing using the following command:"
msgstr ""
"在上面的示例中，建議的 shaper 參數還不錯，但是如果您想在 X 軸上獲得更少的平滑度怎麼辦？您可以嘗試使用以下命令限制最大整形器平滑："

msgid ""
"which limits the smoothing to 0.2 score. Now you can get the following "
"result:"
msgstr "這將平滑限制為 0.2 分。現在您可以得到以下結果："

msgid "![Resonances](img/calibrate-x-max-smoothing.png)"
msgstr "![Resonances](img/calibrate-x-max-smoothing.png)"

msgid ""
"If you compare to the previously suggested parameters, the vibrations are a "
"bit larger, but the smoothing is significantly smaller than previously, "
"allowing larger maximum acceleration."
msgstr "如果與之前建議的參數進行比較，振動會更大一些，但平滑度比之前要小得多，從而允許更大的最大加速度。"

msgid ""
"When deciding which `max_smoothing` parameter to choose, you can use a "
"trial-and-error approach. Try a few different values and see which results "
"you get. Note that the actual smoothing produced by the input shaper "
"depends, primarily, on the lowest resonance frequency of the printer: the "
"higher the frequency of the lowest resonance - the smaller the smoothing. "
"Therefore, if you request the script to find a configuration of the input "
"shaper with the unrealistically small smoothing, it will be at the expense "
"of increased ringing at the lowest resonance frequencies (which are, "
"typically, also more prominently visible in prints). So, always double-check"
" the projected remaining vibrations reported by the script and make sure "
"they are not too high."
msgstr ""
"在決定選擇哪個 `max_smoothing` "
"參數時，您可以使用試錯法。嘗試幾個不同的值，看看你會得到什麼結果。請注意，輸入整形器產生的實際平滑主要取決於打印機的最低諧振頻率：最低諧振頻率越高 - "
"平滑越小。因此，如果您要求腳本找到具有不切實際的小平滑的輸入整形器的配置，則將以增加最低共振頻率處的振鈴為代價（通常在印刷品中也更明顯可見）。因此，請務必仔細檢查腳本報告的預計剩余振動，並確保它們不會太高。"

msgid ""
"Note that if you chose a good `max_smoothing` value for both of your axes, "
"you can store it in the `printer.cfg` as"
msgstr "請注意，如果您為兩個軸都選擇了一個好的 `max_smoothing` 值，則可以將其存儲在 `printer.cfg` 中"

msgid ""
"Then, if you [rerun](#input-shaper-re-calibration) the input shaper auto-"
"tuning using `SHAPER_CALIBRATE` Klipper command in the future, it will use "
"the stored `max_smoothing` value as a reference."
msgstr ""
"然後，如果您將來使用 `SHAPER_CALIBRATE` Klipper 命令 [重新運行](#input-shaper-re-"
"calibration) 輸入整形器自動調整，它將使用存儲的 `max_smoothing` 值作為參考。"

msgid "Selecting max_accel"
msgstr "選擇 max_accel"

msgid ""
"Since the input shaper can create some smoothing in parts, especially at "
"high accelerations, you will still need to choose the `max_accel` value that"
" does not create too much smoothing in the printed parts. A calibration "
"script provides an estimate for `max_accel` parameter that should not create"
" too much smoothing. Note that the `max_accel` as displayed by the "
"calibration script is only a theoretical maximum at which the respective "
"shaper is still able to work without producing too much smoothing. It is by "
"no means a recommendation to set this acceleration for printing. The maximum"
" acceleration your printer is able to sustain depends on its mechanical "
"properties and the maximum torque of the used stepper motors. Therefore, it "
"is suggested to set `max_accel` in `[printer]` section that does not exceed "
"the estimated values for X and Y axes, likely with some conservative safety "
"margin."
msgstr ""
"由於輸入整形器可以在零件中創建一些平滑，尤其是在高加速度時，您仍然需要選擇不會在打印零件中創建太多平滑的“max_accel”值。校準腳本提供了“max_accel”參數的估計值，該參數不應產生過多的平滑。請注意，校準腳本顯示的“max_accel”只是理論上的最大值，在該最大值時，各個整形器仍然能夠工作而不會產生過多的平滑。絕對不建議為打印設置此加速。您的打印機能夠承受的最大加速度取決於其機械性能和所用步進電機的最大扭矩。因此，建議在"
" `[printer]` 部分設置不超過 X 和 Y 軸的估計值的 `max_accel`，可能有一些保守的安全餘量。"

msgid ""
"Alternatively, follow [this](Resonance_Compensation.md#selecting-max_accel) "
"part of the input shaper tuning guide and print the test model to choose "
"`max_accel` parameter experimentally."
msgstr ""
"或者，按照輸入整形器調整指南的 [this](Resonance_Compensation.md#selecting-max_accel) "
"部分並打印測試模型以實驗性地選擇“max_accel”參數。"

msgid ""
"The same notice applies to the input shaper [auto-calibration](#input-"
"shaper-auto-calibration) with `SHAPER_CALIBRATE` command: it is still "
"necessary to choose the right `max_accel` value after the auto-calibration, "
"and the suggested acceleration limits will not be applied automatically."
msgstr ""
"相同的注意事項適用於使用 `SHAPER_CALIBRATE` 命令的輸入整形器 [auto-calibration](#input-shaper-"
"auto-calibration)：自動校准後仍然需要選擇正確的 `max_accel` 值，建議加速度限制不會自動應用。"

msgid ""
"If you are doing a shaper re-calibration and the reported smoothing for the "
"suggested shaper configuration is almost the same as what you got during the"
" previous calibration, this step can be skipped."
msgstr "如果您正在重新校準整形器，並且建議的整形器配置報告的平滑度與您在之前校準期間得到的幾乎相同，則可以跳過此步驟。"

msgid "Input Shaper auto-calibration"
msgstr "輸入整形器自動校準"

msgid ""
"Besides manually choosing the appropriate parameters for the input shaper "
"feature, it is also possible to run the auto-tuning for the input shaper "
"directly from Klipper. Run the following command via Octoprint terminal:"
msgstr ""
"除了為輸入整形器功能手動選擇適當的參數外，還可以直接從 Klipper 運行輸入整形器的自動調整。通過 Octoprint 終端運行以下命令："

msgid ""
"This will run the full test for both axes and generate the csv output "
"(`/tmp/calibration_data_*.csv` by default) for the frequency response and "
"the suggested input shapers. You will also get the suggested frequencies for"
" each input shaper, as well as which input shaper is recommended for your "
"setup, on Octoprint console. For example:"
msgstr ""
"這將為兩個軸運行完整測試，並為頻率響應和建議的輸入整形器生成 csv 輸出（默認為`/tmp/calibration_data_*.csv`）。您還將在"
" Octoprint 控制台上獲得每個輸入整形器的建議頻率，以及為您的設置推薦的輸入整形器。例如："

msgid ""
"If you agree with the suggested parameters, you can execute `SAVE_CONFIG` "
"now to save them and restart the Klipper. Note that this will not update "
"`max_accel` value in `[printer]` section. You should update it manually "
"following the considerations in [Selecting max_accel](#selecting-max_accel) "
"section."
msgstr ""
"如果您同意建議的參數，您現在可以執行 `SAVE_CONFIG` 來保存它們並重新啟動 Klipper。請注意，這不會更新 `[printer]` "
"部分中的 `max_accel` 值。您應該按照 [Selecting max_accel](#selecting-max_accel) "
"部分中的注意事項手動更新它。"

msgid ""
"If your printer is a bed slinger printer, you can specify which axis to "
"test, so that you can change the accelerometer mounting point between the "
"tests (by default the test is performed for both axes):"
msgstr "如果您的打印機是拋床打印機，您可以指定要測試的軸，以便您可以在測試之間更改加速度計安裝點（默認情況下，兩個軸都執行測試）："

msgid "You can execute `SAVE_CONFIG` twice - after calibrating each axis."
msgstr "您可以在校準每個軸之後執行兩次“SAVE_CONFIG”。"

msgid ""
"However, if you connected two accelerometers simultaneously, you simply run "
"`SHAPER_CALIBRATE` without specifying an axis to calibrate the input shaper "
"for both axes in one go."
msgstr "但是，如果您同時連接兩個加速度計，您只需運行“SHAPER_CALIBRATE”，而無需指定一個軸來一次性校準兩個軸的輸入整形器。"

msgid "Input Shaper re-calibration"
msgstr "輸入整形器重新校準"

msgid ""
"`SHAPER_CALIBRATE` command can be also used to re-calibrate the input shaper"
" in the future, especially if some changes to the printer that can affect "
"its kinematics are made. One can either re-run the full calibration using "
"`SHAPER_CALIBRATE` command, or restrict the auto-calibration to a single "
"axis by supplying `AXIS=` parameter, like"
msgstr ""
"`SHAPER_CALIBRATE` "
"命令也可用於將來重新校準輸入整形器，尤其是在對打印機進行一些可能影響其運動學的更改時。可以使用“SHAPER_CALIBRATE”命令重新運行完整校準，或者通過提供“AXIS=”參數將自動校準限制在單個軸上，例如"

msgid ""
"**Warning!** It is not advisable to run the shaper autocalibration very "
"frequently (e.g. before every print, or every day). In order to determine "
"resonance frequencies, autocalibration creates intensive vibrations on each "
"of the axes. Generally, 3D printers are not designed to withstand a "
"prolonged exposure to vibrations near the resonance frequencies. Doing so "
"may increase wear of the printer components and reduce their lifespan. There"
" is also an increased risk of some parts unscrewing or becoming loose. "
"Always check that all parts of the printer (including the ones that may "
"normally not move) are securely fixed in place after each auto-tuning."
msgstr ""
"**警告！**不建議非常頻繁地運行成型機自動校準（例如，在每次打印之前或每天）。為了確定共振頻率，自動校準會在每個軸上產生強烈的振動。通常，3D "
"打印機的設計不能承受長時間暴露於共振頻率附近的振動。這樣做可能會增加打印機組件的磨損並縮短其使用壽命。某些零件擰鬆或鬆動的風險也會增加。每次自動調整後，請務必檢查打印機的所有部件（包括通常不會移動的部件）是否牢固地固定到位。"

msgid ""
"Also, due to some noise in measurements, it is possible that the tuning "
"results will be slightly different from one calibration run to another one. "
"Still, it is not expected that the noise will affect the print quality too "
"much. However, it is still advised to double-check the suggested parameters,"
" and print some test prints before using them to confirm they are good."
msgstr ""
"此外，由於測量中的一些噪聲，調諧結果可能會從一次校準運行到另一次校準運行略有不同。不過，預計噪音不會對打印質量產生太大影響。但是，仍然建議仔細檢查建議的參數，並在使用前打印一些測試打印以確認它們是好的。"

msgid "Offline processing of the accelerometer data"
msgstr "加速度計數據的離線處理"

msgid ""
"It is possible to generate the raw accelerometer data and process it offline"
" (e.g. on a host machine), for example to find resonances. In order to do "
"so, run the following commands via Octoprint terminal:"
msgstr "可以生成原始加速度計數據並離線處理（例如在主機上），例如尋找共振。為此，請通過 Octoprint 終端運行以下命令："

msgid ""
"ignoring any errors for `SET_INPUT_SHAPER` command. For `TEST_RESONANCES` "
"command, specify the desired test axis. The raw data will be written into "
"`/tmp` directory on the RPi."
msgstr ""
"忽略 `SET_INPUT_SHAPER` 命令的任何錯誤。對於 `TEST_RESONANCES` 命令，指定所需的測試軸。原始數據將被寫入 RPi "
"上的 `/tmp` 目錄。"

msgid ""
"The data can be processed later by the following scripts: "
"`scripts/graph_accelerometer.py` and `scripts/calibrate_shaper.py`. Both of "
"them accept one or several raw csv files as the input depending on the mode."
" The graph_accelerometer.py script supports several modes of operation:"
msgstr ""
"稍後可以通過以下腳本處理數據：`scripts/graph_accelerometer.py` 和 "
"`scripts/calibrate_shaper.py`。根據模式，它們都接受一個或多個原始 csv 文件作為輸入。 "
"graph_accelerometer.py 腳本支持多種操作模式："

msgid ""
"plotting raw accelerometer data (use `-r` parameter), only 1 input is "
"supported;"
msgstr "繪製原始加速度計數據（使用 `-r` 參數），僅支持 1 個輸入;"

msgid ""
"plotting a frequency response (no extra parameters required), if multiple "
"inputs are specified, the average frequency response is computed;"
msgstr "繪製頻率響應（不需要額外的參數），如果指定了多個輸入，則計算平均頻率響應；"

msgid ""
"comparison of the frequency response between several inputs (use `-c` "
"parameter); you can additionally specify which accelerometer axis to "
"consider via `-a x`, `-a y` or `-a z` parameter (if none specified, the sum "
"of vibrations for all axes is used);"
msgstr ""
"比較幾個輸入之間的頻率響應（使用“-c”參數）；您還可以通過“-a x”、“-a y”或“-a "
"z”參數指定要考慮的加速度計軸（如果未指定，則使用所有軸的振動總和）；"

msgid ""
"plotting the spectrogram (use `-s` parameter), only 1 input is supported; "
"you can additionally specify which accelerometer axis to consider via `-a "
"x`, `-a y` or `-a z` parameter (if none specified, the sum of vibrations for"
" all axes is used)."
msgstr ""
"繪製頻譜圖（使用 `-s` 參數），僅支持 1 個輸入；您還可以通過“-a x”、“-a y”或“-a "
"z”參數指定要考慮的加速度計軸（如果未指定，則使用所有軸的振動總和）。"

msgid ""
"Note that graph_accelerometer.py script supports only the raw_data\\*.csv "
"files and not resonances\\*.csv or calibration_data\\*.csv files."
msgstr ""
"請注意，graph_accelerometer.py 腳本僅支持 raw_data\\*.csv 文件，而不支持 resions\\*.csv "
"或calibration_data\\*.csv 文件。"

msgid "For example,"
msgstr "例如:"

msgid ""
"will plot the comparison of several `/tmp/raw_data_x_*.csv` files for Z axis"
" to `/tmp/resonances_x.png` file."
msgstr "將繪製 Z 軸的幾個 `/tmp/raw_data_x_*.csv` 文件與 `/tmp/resonances_x.png` 文件的比較。"

msgid ""
"The shaper_calibrate.py script accepts 1 or several inputs and can run "
"automatic tuning of the input shaper and suggest the best parameters that "
"work well for all provided inputs. It prints the suggested parameters to the"
" console, and can additionally generate the chart if `-o output.png` "
"parameter is provided, or the CSV file if `-c output.csv` parameter is "
"specified."
msgstr ""
"shaper_calibrate.py 腳本接受 1 "
"個或多個輸入，並且可以運行輸入整形器的自動調整，並建議適用於所有提供的輸入的最佳參數。它將建議的參數打印到控制台，如果提供了 `-o "
"output.png` 參數，它還可以生成圖表，如果指定了 `-c output.csv` 參數，則可以生成 CSV 文件。"

msgid ""
"Providing several inputs to shaper_calibrate.py script can be useful if "
"running some advanced tuning of the input shapers, for example:"
msgstr "如果運行輸入整形器的一些高級調整，為 shaper_calibrate.py 腳本提供幾個輸入可能很有用，例如："

msgid ""
"Running `TEST_RESONANCES AXIS=X OUTPUT=raw_data` (and `Y` axis) for a single"
" axis twice on a bed slinger printer with the accelerometer attached to the "
"toolhead the first time, and the accelerometer attached to the bed the "
"second time in order to detect axes cross-resonances and attempt to cancel "
"them with input shapers."
msgstr ""
"在第一次將加速度計連接到工具頭上，第二次將加速度計按順序連接到床身的情況下，在床吊具打印機上為單個軸運行兩次“TEST_RESONANCES "
"AXIS=X OUTPUT=raw_data”（和“Y”軸）檢測軸交叉共振並嘗試使用輸入整形器消除它們。"

msgid ""
"Running `TEST_RESONANCES AXIS=Y OUTPUT=raw_data` twice on a bed slinger with"
" a glass bed and a magnetic surfaces (which is lighter) to find the input "
"shaper parameters that work well for any print surface configuration."
msgstr ""
"在帶有玻璃床和磁性表面（更輕）的床吊具上運行兩次“TEST_RESONANCES AXIS=Y "
"OUTPUT=raw_data”，以找到適用於任何打印表面配置的輸入整形器參數。"

msgid "Combining the resonance data from multiple test points."
msgstr "結合來自多個測試點的共振數據。"

msgid ""
"Combining the resonance data from 2 axis (e.g. on a bed slinger printer to "
"configure X-axis input_shaper from both X and Y axes resonances to cancel "
"vibrations of the *bed* in case the nozzle 'catches' a print when moving in "
"X axis direction)."
msgstr ""
"結合來自 2 軸的共振數據（例如，在床拋投打印機上配置 X 軸 input_shaper 從 X 軸和 Y 軸共振以消除*床*的振動，以防噴嘴在 X "
"軸方向移動時“捕捉”打印）。"

msgid "~/klippy-env/bin/pip install -v numpy\n"
msgstr "~/klippy-env/bin/pip install -v numpy\n"

msgid "Recv: // adxl345 values (x, y, z): 470.719200, 941.438400, 9728.196800\n"
msgstr ""
"Recv: // adxl345 values (x, y, z): 470.719200, 941.438400, 9728.196800\n"

msgid "TEST_RESONANCES AXIS=X\n"
msgstr "TEST_RESONANCES AXIS=X\n"

msgid ""
"[resonance_tester]\n"
"accel_chip: adxl345\n"
"accel_per_hz: 50  # default is 75\n"
"probe_points: ...\n"
msgstr ""
"[resonance_tester]\n"
"accel_chip: adxl345\n"
"accel_per_hz: 50  # default is 75\n"
"probe_points: ...\n"

msgid "TEST_RESONANCES AXIS=Y\n"
msgstr "TEST_RESONANCES AXIS=Y\n"

msgid ""
"~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png\n"
"~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png\n"
msgstr ""
"~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png\n"
"~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png\n"

msgid ""
"Fitted shaper 'zv' frequency = 34.4 Hz (vibrations = 4.0%, smoothing ~= 0.132)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 4500 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 34.6 Hz (vibrations = 0.0%, smoothing ~= 0.170)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 3500 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 41.4 Hz (vibrations = 0.0%, smoothing ~= 0.188)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 3200 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 51.8 Hz (vibrations = 0.0%, smoothing ~= 0.201)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 3000 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 61.8 Hz (vibrations = 0.0%, smoothing ~= 0.215)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 2800 mm/sec^2\n"
"Recommended shaper is mzv @ 34.6 Hz\n"
msgstr ""
"Fitted shaper 'zv' frequency = 34.4 Hz (vibrations = 4.0%, smoothing ~= 0.132)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 4500 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 34.6 Hz (vibrations = 0.0%, smoothing ~= 0.170)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 3500 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 41.4 Hz (vibrations = 0.0%, smoothing ~= 0.188)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 3200 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 51.8 Hz (vibrations = 0.0%, smoothing ~= 0.201)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 3000 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 61.8 Hz (vibrations = 0.0%, smoothing ~= 0.215)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 2800 mm/sec^2\n"
"Recommended shaper is mzv @ 34.6 Hz\n"

msgid ""
"[input_shaper]\n"
"shaper_freq_x: ...\n"
"shaper_type_x: ...\n"
"shaper_freq_y: 34.6\n"
"shaper_type_y: mzv\n"
"\n"
"[printer]\n"
"max_accel: 3000  # should not exceed the estimated max_accel for X and Y axes\n"
msgstr ""
"[input_shaper]\n"
"shaper_freq_x: ...\n"
"shaper_type_x: ...\n"
"shaper_freq_y: 34.6\n"
"shaper_type_y: mzv\n"
"\n"
"[printer]\n"
"max_accel: 3000  # should not exceed the estimated max_accel for X and Y axes\n"

msgid ""
"[adxl345 hotend]\n"
"# Assuming `hotend` chip is connected to an RPi\n"
"cs_pin: rpi:None\n"
"\n"
"[adxl345 bed]\n"
"# Assuming `bed` chip is connected to a printer MCU board\n"
"cs_pin: ...  # Printer board SPI chip select (CS) pin\n"
"\n"
"[resonance_tester]\n"
"# Assuming the typical setup of the bed slinger printer\n"
"accel_chip_x: adxl345 hotend\n"
"accel_chip_y: adxl345 bed\n"
"probe_points: ...\n"
msgstr ""
"[adxl345 hotend]\n"
"# Assuming `hotend` chip is connected to an RPi\n"
"cs_pin: rpi:None\n"
"\n"
"[adxl345 bed]\n"
"# Assuming `bed` chip is connected to a printer MCU board\n"
"cs_pin: ...  # Printer board SPI chip select (CS) pin\n"
"\n"
"[resonance_tester]\n"
"# Assuming the typical setup of the bed slinger printer\n"
"accel_chip_x: adxl345 hotend\n"
"accel_chip_y: adxl345 bed\n"
"probe_points: ...\n"

msgid ""
"Fitted shaper 'zv' frequency = 57.8 Hz (vibrations = 20.3%, smoothing ~= 0.053)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 13000 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 34.8 Hz (vibrations = 3.6%, smoothing ~= 0.168)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 3600 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 48.8 Hz (vibrations = 4.9%, smoothing ~= 0.135)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 4400 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 45.2 Hz (vibrations = 0.1%, smoothing ~= 0.264)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 2200 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 48.0 Hz (vibrations = 0.0%, smoothing ~= 0.356)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 1500 mm/sec^2\n"
"Recommended shaper is 2hump_ei @ 45.2 Hz\n"
msgstr ""
"Fitted shaper 'zv' frequency = 57.8 Hz (vibrations = 20.3%, smoothing ~= 0.053)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 13000 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 34.8 Hz (vibrations = 3.6%, smoothing ~= 0.168)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 3600 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 48.8 Hz (vibrations = 4.9%, smoothing ~= 0.135)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 4400 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 45.2 Hz (vibrations = 0.1%, smoothing ~= 0.264)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 2200 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 48.0 Hz (vibrations = 0.0%, smoothing ~= 0.356)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 1500 mm/sec^2\n"
"Recommended shaper is 2hump_ei @ 45.2 Hz\n"

msgid ""
"~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o "
"/tmp/shaper_calibrate_x.png --max_smoothing=0.2\n"
msgstr ""
"~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o "
"/tmp/shaper_calibrate_x.png --max_smoothing=0.2\n"

msgid ""
"Fitted shaper 'zv' frequency = 55.4 Hz (vibrations = 19.7%, smoothing ~= 0.057)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 12000 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 34.6 Hz (vibrations = 3.6%, smoothing ~= 0.170)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 3500 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 48.2 Hz (vibrations = 4.8%, smoothing ~= 0.139)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 4300 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 52.0 Hz (vibrations = 2.7%, smoothing ~= 0.200)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 3000 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 72.6 Hz (vibrations = 1.4%, smoothing ~= 0.155)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 3900 mm/sec^2\n"
"Recommended shaper is 3hump_ei @ 72.6 Hz\n"
msgstr ""
"Fitted shaper 'zv' frequency = 55.4 Hz (vibrations = 19.7%, smoothing ~= 0.057)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 12000 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 34.6 Hz (vibrations = 3.6%, smoothing ~= 0.170)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 3500 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 48.2 Hz (vibrations = 4.8%, smoothing ~= 0.139)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 4300 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 52.0 Hz (vibrations = 2.7%, smoothing ~= 0.200)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 3000 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 72.6 Hz (vibrations = 1.4%, smoothing ~= 0.155)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 3900 mm/sec^2\n"
"Recommended shaper is 3hump_ei @ 72.6 Hz\n"

msgid ""
"[resonance_tester]\n"
"accel_chip: ...\n"
"probe_points: ...\n"
"max_smoothing: 0.25  # an example\n"
msgstr ""
"[resonance_tester]\n"
"accel_chip: ...\n"
"probe_points: ...\n"
"max_smoothing: 0.25  # an example\n"

msgid "SHAPER_CALIBRATE\n"
msgstr "SHAPER_CALIBRATE\n"

msgid ""
"Calculating the best input shaper parameters for y axis\n"
"Fitted shaper 'zv' frequency = 39.0 Hz (vibrations = 13.2%, smoothing ~= 0.105)\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 5900 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 36.8 Hz (vibrations = 1.7%, smoothing ~= 0.150)\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 4000 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 36.6 Hz (vibrations = 2.2%, smoothing ~= 0.240)\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 2500 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 48.0 Hz (vibrations = 0.0%, smoothing ~= 0.234)\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 2500 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 59.0 Hz (vibrations = 0.0%, smoothing ~= 0.235)\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 2500 mm/sec^2\n"
"Recommended shaper_type_y = mzv, shaper_freq_y = 36.8 Hz\n"
msgstr ""
"Calculating the best input shaper parameters for y axis # 正在計算y軸的最佳輸入整形參數\n"
"Fitted shaper 'zv' frequency = 39.0 Hz (vibrations = 13.2%, smoothing ~= 0.105) # 擬合整形「zv」\n"
"To avoid too much smoothing with 'zv', suggested max_accel <= 5900 mm/sec^2 # 為避免使用「zv」方法產生過度平滑，建議最大加速度<=5900 mm/sec^2\n"
"Fitted shaper 'mzv' frequency = 36.8 Hz (vibrations = 1.7%, smoothing ~= 0.150) # 擬合整形「mzv」\n"
"To avoid too much smoothing with 'mzv', suggested max_accel <= 4000 mm/sec^2 # 為避免使用「mzv」方法產生過度平滑，建議最大加速度<=4000 mm/sec^2\n"
"Fitted shaper 'ei' frequency = 36.6 Hz (vibrations = 2.2%, smoothing ~= 0.240) # 擬合整形「ei」\n"
"To avoid too much smoothing with 'ei', suggested max_accel <= 2500 mm/sec^2 # 為避免使用「ei」方法產生過度平滑，建議最大加速度<=2500 mm/sec^2\n"
"Fitted shaper '2hump_ei' frequency = 48.0 Hz (vibrations = 0.0%, smoothing ~= 0.234) # 擬合整形「2hump_ei」\n"
"To avoid too much smoothing with '2hump_ei', suggested max_accel <= 2500 mm/sec^2 # 為避免使用「2hump_ei」方法產生過度平滑，建議最大加速度<=2500 mm/sec^2\n"
"Fitted shaper '3hump_ei' frequency = 59.0 Hz (vibrations = 0.0%, smoothing ~= 0.235) # 擬合整形「3hump_ei」\n"
"To avoid too much smoothing with '3hump_ei', suggested max_accel <= 2500 mm/sec^2 # 為避免使用「3hump_ei」方法產生過度平滑，建議最大加速度<=2500 mm/sec^2\n"
"Recommended shaper_type_y = mzv, shaper_freq_y = 36.8 Hz # 建議shaper_type_y = mzv, shaper_freq_y = 36.8 Hz\n"

msgid "SHAPER_CALIBRATE AXIS=Y\n"
msgstr "SHAPER_CALIBRATE AXIS=Y\n"

msgid "SHAPER_CALIBRATE AXIS=X\n"
msgstr "SHAPER_CALIBRATE AXIS=X\n"

msgid ""
"SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0\n"
"TEST_RESONANCES AXIS=X OUTPUT=raw_data\n"
msgstr ""
"SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0\n"
"TEST_RESONANCES AXIS=X OUTPUT=raw_data\n"

msgid ""
"~/klipper/scripts/graph_accelerometer.py /tmp/raw_data_x_*.csv -o "
"/tmp/resonances_x.png -c -a z\n"
msgstr ""
"~/klipper/scripts/graph_accelerometer.py /tmp/raw_data_x_*.csv -o "
"/tmp/resonances_x.png -c -a z\n"

#: docs/Measuring_Resonances.md:block 80 (header)
msgid "Testing custom axes"
msgstr "測試自定義軸"

#: docs/Measuring_Resonances.md:block 81 (paragraph)
msgid ""
"`TEST_RESONANCES` command supports custom axes. While this is not really "
"useful for input shaper calibration, it can be used to study printer "
"resonances in-depth and to check, for example, belt tension."
msgstr "`TEST_RESONANCES` 命令支持自定義軸。雖然這對於輸入整形器校準並不是很有用，但它可用於深入研究打印機共振並檢查皮帶張力等。"

#: docs/Measuring_Resonances.md:block 82 (paragraph)
msgid "To check the belt tension on CoreXY printers, execute"
msgstr "要檢查 CoreXY 打印機上的皮帶張力，請執行"

#: docs/Measuring_Resonances.md:block 83 (code)
msgid ""
"TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data\n"
"TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data\n"
msgstr ""
"TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data\n"
"TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data\n"

#: docs/Measuring_Resonances.md:block 84 (paragraph)
msgid "and use `graph_accelerometer.py` to process the generated files, e.g."
msgstr "並使用 `graph_accelerometer.py` 處理生成的文件，例如"

#: docs/Measuring_Resonances.md:block 85 (code)
msgid ""
"~/klipper/scripts/graph_accelerometer.py -c /tmp/raw_data_axis*.csv -o "
"/tmp/resonances.png\n"
msgstr ""
"~/klipper/scripts/graph_accelerometer.py -c /tmp/raw_data_axis*.csv -o "
"/tmp/resonances.png\n"

#: docs/Measuring_Resonances.md:block 86 (paragraph)
msgid "which will generate `/tmp/resonances.png` comparing the resonances."
msgstr "以產生`/tmp/resonances.png`，對比共振的數據。"

#: docs/Measuring_Resonances.md:block 87 (paragraph)
msgid ""
"For Delta printers with the default tower placement (tower A ~= 210 degrees,"
" B ~= 330 degrees, and C ~= 90 degrees), execute"
msgstr "對標準構型的三角洲印表機（A塔~210°，B塔~330°，C塔~90°），執行"

#: docs/Measuring_Resonances.md:block 88 (code)
msgid ""
"TEST_RESONANCES AXIS=0,1 OUTPUT=raw_data\n"
"TEST_RESONANCES AXIS=-0.866025404,-0.5 OUTPUT=raw_data\n"
"TEST_RESONANCES AXIS=0.866025404,-0.5 OUTPUT=raw_data\n"
msgstr ""
"TEST_RESONANCES AXIS=0,1 OUTPUT=raw_data\n"
"TEST_RESONANCES AXIS=-0.866025404,-0.5 OUTPUT=raw_data\n"
"TEST_RESONANCES AXIS=0.866025404,-0.5 OUTPUT=raw_data\n"

#: docs/Measuring_Resonances.md:block 89 (paragraph)
msgid "and then use the same command"
msgstr "然後使用同樣的命令"

#: docs/Measuring_Resonances.md:block 91 (paragraph)
msgid "to generate `/tmp/resonances.png` comparing the resonances."
msgstr "以產生`/tmp/resonances.png`，對比共振的數據。"

#: docs/Measuring_Resonances.md:block 3 (paragraph)
msgid ""
"When sourcing ADXL345, be aware that there is a variety of different PCB "
"board designs and different clones of them. Make sure that the board "
"supports SPI mode (small number of boards appear to be hard-configured for "
"I2C by pulling SDO to GND), and, if it is going to be connected to a 5V "
"printer MCU, that it has a voltage regulator and a level shifter."
msgstr ""
"採購 ADXL345 時，請注意有各種不同的 PCB 板設計和它們的不同克隆。確保電路板支持 SPI 模式（通過將 SDO 拉至 GND 來為 I2C "
"硬配置少數電路板），如果要連接到 5V 打印機 MCU，它有一個穩壓器和電平轉換器。"

#: docs/Measuring_Resonances.md:block 26 (code)
msgid ""
"[mcu rpi]\n"
"serial: /tmp/klipper_host_mcu\n"
"\n"
"[adxl345]\n"
"cs_pin: rpi:None\n"
"\n"
"[resonance_tester]\n"
"accel_chip: adxl345\n"
"probe_points:\n"
"    100, 100, 20  # an example\n"
msgstr ""
"[mcu rpi]\n"
"serial: /tmp/klipper_host_mcu\n"
"\n"
"[adxl345]\n"
"cs_pin: rpi:None\n"
"\n"
"[resonance_tester]\n"
"accel_chip: adxl345\n"
"probe_points:\n"
"    100, 100, 20  # an example\n"

#: docs/Measuring_Resonances.md:block 45 (paragraph)
msgid ""
"This will generate 2 CSV files (`/tmp/resonances_x_*.csv` and "
"`/tmp/resonances_y_*.csv`). These files can be processed with the stand-"
"alone script on a Raspberry Pi. To do that, run the following commands:"
msgstr ""
"這將生成 2 個 CSV 文件（`/tmp/resonances_x_*.csv` 和 `/tmp/resonances_y_*.csv`）。可以使用 "
"Raspberry Pi 上的獨立腳本處理這些文件。為此，請運行以下命令："

#: docs/Measuring_Resonances.md:block 111 (paragraph)
msgid ""
"The raw data can also be obtained by running the command "
"`ACCELEROMETER_MEASURE` command twice during some normal printer activity - "
"first to start the measurements, and then to stop them and write the output "
"file. Refer to [G-Codes](G-Codes.md#adxl345) for more details."
msgstr ""
"原始數據也可以通過在一些正常的打印機活動期間運行命令“ACCELEROMETER_MEASURE”命令兩次來獲得 - "
"首先開始測量，然後停止測量並寫入輸出文件。詳情請參閱 [G-Codes](G-Codes.md#adxl345)"

#: docs/Measuring_Resonances.md:block 8 (paragraph)
msgid ""
"An alternative to the ADXL345 is the MPU-9250 (or MPU-6050). This "
"accelerometer has been tested to work over I2C on the RPi at 400kbaud. "
"Recommended connection scheme for I2C:"
msgstr ""

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "MPU-9250 pin"
msgstr ""

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "09"
msgstr ""

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "03"
msgstr ""

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "GPIO02 (SDA1)"
msgstr ""

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "05"
msgstr ""

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "GPIO03 (SCL1)"
msgstr ""

#: docs/Measuring_Resonances.md:block 20 (paragraph)
msgid ""
"Note that resonance measurements and shaper auto-calibration require "
"additional software dependencies not installed by default. First, run on "
"your Raspberry Pi the following commands:"
msgstr ""

#: docs/Measuring_Resonances.md:block 21 (code)
msgid ""
"sudo apt update\n"
"sudo apt install python3-numpy python3-matplotlib libatlas-base-dev\n"
msgstr ""

#: docs/Measuring_Resonances.md:block 22 (paragraph)
msgid ""
"Next, in order to install NumPy in the Klipper environment, run the command:"
msgstr ""

#: docs/Measuring_Resonances.md:block 24 (paragraph)
msgid ""
"Note that, depending on the performance of the CPU, it may take *a lot* of "
"time, up to 10-20 minutes. Be patient and wait for the completion of the "
"installation. On some occasions, if the board has too little RAM the "
"installation may fail and you will need to enable swap."
msgstr ""

#: docs/Measuring_Resonances.md:block 27 (paragraph)
msgid "For the ADXL345, add the following to the printer.cfg file:"
msgstr ""

#: docs/Measuring_Resonances.md:block 30 (paragraph)
msgid ""
"For the MPU-9250, make sure the Linux I2C driver is enabled and the baud "
"rate is set to 400000 (see [Enabling I2C](RPi_microcontroller.md#optional-"
"enabling-i2c) section for more details). Then, add the following to the "
"printer.cfg:"
msgstr ""

#: docs/Measuring_Resonances.md:block 31 (code)
msgid ""
"[mcu rpi]\n"
"serial: /tmp/klipper_host_mcu\n"
"\n"
"[mpu9250]\n"
"i2c_mcu: rpi\n"
"i2c_bus: i2c.1\n"
"\n"
"[resonance_tester]\n"
"accel_chip: mpu9250\n"
"probe_points:\n"
"    100, 100, 20  # an example\n"
msgstr ""

#~ msgid ""
#~ "Note that resonance measurements and shaper auto-calibration require "
#~ "additional software dependencies not installed by default. First, you will "
#~ "have to run on your Raspberry Pi the following command:"
#~ msgstr "共振測量和自動整形校正需要額外的依賴項，這些依賴在Klipper安裝時未作部署，因此，需要在樹莓派上執行下面的命令："

#~ msgid ""
#~ "to install `numpy` package. Note that, depending on the performance of the "
#~ "CPU, it may take *a lot* of time, up to 10-20 minutes. Be patient and wait "
#~ "for the completion of the installation. On some occasions, if the board has "
#~ "too little RAM, the installation may fail and you will need to enable swap."
#~ msgstr ""
#~ "安裝`numpy`包。numpy需要在安裝時進行編譯。編譯時間據主機的CPU算力而異，需要*耗費大量時間*，最大可至半小時（PiZero），請耐心等待編譯安裝完成。少部分情況下，主機的RAM不足會導致安裝失敗，需要開啟swap功能以實現安裝。"

#~ msgid "Add the following to the printer.cfg file:"
#~ msgstr "在printer.cfg附上下面的內容："

#~ msgid ""
#~ "Next, run the following commands to install the additional dependencies:"
#~ msgstr "接下來，運行以下命令來安裝其他依賴項："

#~ msgid ""
#~ "sudo apt update\n"
#~ "sudo apt install python3-numpy python3-matplotlib\n"
#~ msgstr ""
#~ "sudo apt update\n"
#~ "sudo apt install python3-numpy python3-matplotlib\n"

#~ msgid ""
#~ "This will generate 2 CSV files (`/tmp/resonances_x_*.csv` and "
#~ "`/tmp/resonances_y_*.csv`). These files can be processed with the stand-"
#~ "alone script on a Raspberry Pi. To do that, run running the following "
#~ "commands:"
#~ msgstr ""

#~ msgid ""
#~ "The raw data can also be obtained by running the command "
#~ "`ACCELEROMETER_MEASURE` command twice during some normal printer activity - "
#~ "first to start the measurements, and then to stop them and write the output "
#~ "file. Refer to [G-Codes](G-Codes.md#adxl345-accelerometer-commands) for more"
#~ " details."
#~ msgstr ""

#~ msgid ""
#~ "[mcu rpi]\n"
#~ "serial: /tmp/klipper_host_mcu\n"
#~ "\n"
#~ "[adxl345]\n"
#~ "cs_pin: rpi:None\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "accel_chip: adxl345\n"
#~ "probe_points:\n"
#~ "    100,100,20  # an example\n"
#~ msgstr ""

#~ msgid ""
#~ "sudo apt update\n"
#~ "sudo apt install python-numpy python-matplotlib\n"
#~ msgstr ""

#~ msgid ""
#~ "When sourcing ADLX345, be aware that there is a variety of different PCB "
#~ "board designs and different clones of them. Make sure that the board "
#~ "supports SPI mode (small number of boards appear to be hard-configured for "
#~ "I2C by pulling SDO to GND), and, if it is going to be connected to a 5V "
#~ "printer MCU, that it has a voltage regulator and a level shifter."
#~ msgstr ""

#~ msgid ""
#~ "Next, run the following command to install the additional dependencies:"
#~ msgstr ""

#~ msgid "sudo apt install python-numpy python-matplotlib\n"
#~ msgstr ""
