# Fred Chan <fred2088@gmail.com>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-02-23 12:56+0000\n"
"Last-Translator: Fred Chan <fred2088@gmail.com>\n"
"Language-Team: Chinese (Traditional) <https://hosted.weblate.org/projects/klipper/tmc_drivers/zh_Hant/>\n"
"Language: zh_Hant\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.11-dev\n"

msgid ""
"This document provides information on using Trinamic stepper motor drivers "
"in SPI/UART mode on Klipper."
msgstr "這個文件提供了在Klipper上以SPI/UART模式使用Trinamic步進電機驅動器的資訊。"

msgid ""
"Klipper can also use Trinamic drivers in their \"standalone mode\". However,"
" when the drivers are in this mode, no special Klipper configuration is "
"needed and the advanced Klipper features discussed in this document are not "
"available."
msgstr ""
"Klipper也可以在其 \"standalone "
"mode\"下使用Trinamic驅動。然而，當驅動處於這種模式時，不需要特殊的Klipper配置，本檔案中討論的高級Klipper功能也無法使用。"

msgid ""
"In addition to this document, be sure to review the [TMC driver config "
"reference](Config_Reference.md#tmc-stepper-driver-configuration)."
msgstr ""
"除了這份文件，請務必檢視[TMC驅動配置參考](Config_Reference.md#tmc-stepper-driver-"
"configuration)."

msgid "Sensorless Homing"
msgstr "無限位歸零"

msgid ""
"Sensorless homing allows to home an axis without the need for a physical "
"limit switch. Instead, the carriage on the axis is moved into the mechanical"
" limit making the stepper motor lose steps. The stepper driver senses the "
"lost steps and indicates this to the controlling MCU (Klipper) by toggling a"
" pin. This information can be used by Klipper as end stop for the axis."
msgstr ""
"無感測器歸位允許在不需要物理限位開關的情況下將一個軸歸位。相反，軸上的滑車接觸機械限位后，使步進電機失去步長。步進驅動器感應到失去的步數，並通過切換一個引腳向控制的微控制器（Klipper）告知這一點。該資訊可被"
" Klipper 用作軸的限位。"

msgid ""
"This guide covers the setup of sensorless homing for the X axis of your "
"(cartesian) printer. However, it works the same with all other axes (that "
"require an end stop). You should configure and tune it for one axis at a "
"time."
msgstr "本指南介紹瞭如何設定（笛卡爾）印表機的X軸無感測器歸位。這個方法也適合其他軸（需要一個限位）。每次應該只對一個軸進行配置和調整。"

msgid "Limitations"
msgstr "限制"

msgid ""
"Be sure that your mechanical components are able to handle the load of the "
"carriage bumping into the limit of the axis repeatedly. Especially "
"leadscrews might generate a lot of force. Homing a Z axis by bumping the "
"nozzle into the printing surface might not be a good idea. For best results,"
" verify that the axis carriage will make a firm contact with the axis limit."
msgstr ""
"要確保你的機械部件能夠承受滑車反覆撞向軸的限位的負載。特別是絲槓可能會產生很大的力。通過將噴嘴撞向列印表面來確定Z軸的位置可能不是一個好主意。爲了獲得最佳效果，請確認軸滑車將與軸的限位緊密接觸。"

msgid ""
"Further, sensorless homing might not be accurate enough for your printer. "
"While homing X and Y axes on a cartesian machine can work well, homing the Z"
" axis is generally not accurate enough and may result in an inconsistent "
"first layer height. Homing a delta printer sensorless is not advisable due "
"to missing accuracy."
msgstr ""
"此外，無感測器歸位對你的印表機來說可能不夠精確。雖然笛卡爾機器上的X和Y軸歸位可以很好地工作，但Z軸的歸位通常不夠準確，可能會導致第一層高度不一致。由於精度低，不建議在delta"
" 印表機上使用無感測器的歸位。"

msgid ""
"Further, the stall detection of the stepper driver is dependent on the "
"mechanical load on the motor, the motor current and the motor temperature "
"(coil resistance)."
msgstr "此外，步進驅動器的失速檢測取決於電機的機械負載、電機電流和電機溫度（線圈電阻）。"

msgid ""
"Sensorless homing works best at medium motor speeds. For very slow speeds "
"(less than 10 RPM) the motor does not generate significant back EMF and the "
"TMC cannot reliably detect motor stalls. Further, at very high speeds, the "
"back EMF of the motor approaches the supply voltage of the motor, so the TMC"
" cannot detect stalls anymore. It is advised to have a look in the datasheet"
" of your specific TMCs. There you can also find more details on limitations "
"of this setup."
msgstr ""
"無感測器歸位在電機中速時效果最好。對於非常慢的速度（小於10RPM），電機不會產生明顯的反電磁場，TMC晶片不能可靠地檢測到電機停頓。此外，在非常高的速度下，電機的反向電動勢接近電機的電源電壓，所以TMC晶片也檢測不到停頓。建議你看看一下對應的TMC晶片數據手冊。在手冊中還可以找到更多關於這種設定的限制的細節。"

msgid "Prerequisites"
msgstr "前提條件"

msgid "A few prerequisites are needed to use sensorless homing:"
msgstr "使用無感測器歸位，需要一些前提條件："

msgid ""
"SPI / UART interface of the TMC driver wired to micro-controller (stand-"
"alone mode does not work)."
msgstr "需要TMC驅動器的SPI / UART介面與微控制器連線（stand-alone 模式不行）。"

msgid ""
"The appropriate \"DIAG\" or \"SG_TST\" pin of TMC driver connected to the "
"micro-controller."
msgstr "需要把TMC驅動器的 \"DIAG \"或 \"SG_TST \"引腳連線到微控制器。"

msgid ""
"The steps in the [config checks](Config_checks.md) document must be run to "
"confirm the stepper motors are configured and working properly."
msgstr "必須按照[配置檢查](Config_checks.md)檔案中的步驟來確認步進電機的配置和運轉正常。"

msgid "Tuning"
msgstr "調整"

msgid "The procedure described here has six major steps:"
msgstr "調整過程有六個主要步驟："

msgid "Choose a homing speed."
msgstr "選擇一個歸位速度。"

msgid "Configure the `printer.cfg` file to enable sensorless homing."
msgstr "配置`printer.cfg`檔案以啟用無感測器歸位。"

msgid ""
"Find the stallguard setting with highest sensitivity that successfully "
"homes."
msgstr "找到有最高靈敏度的stallguard設定，確保其成功找到零點位置。"

msgid ""
"Find the stallguard setting with lowest sensitivity that successfully homes "
"with a single touch."
msgstr "找到有最低靈敏度的stallguard 設定，確保只需輕輕一碰就能成功歸零。"

msgid "Update the `printer.cfg` with the desired stallguard setting."
msgstr "更新`printer.cfg`，加入所需的stallguard設定。"

msgid "Create or update `printer.cfg` macros to home consistently."
msgstr "建立或更新 `printer.cfg `宏確保穩定歸位（home）。"

msgid "Choose homing speed"
msgstr "選擇歸位速度"

msgid ""
"The homing speed is an important choice when performing sensorless homing. "
"It's desirable to use a slow homing speed so that the carriage does not "
"exert excessive force on the frame when making contact with the end of the "
"rail. However, the TMC drivers can't reliably detect a stall at very slow "
"speeds."
msgstr ""
"執行無感測器歸位時，歸位速度是一個重要參數。最好使用較慢的歸位速度，以便滑車在與軌道限位接觸時不會對框架施加過多的力。然而，TMC驅動器在非常慢的速度下並不能可靠地檢測到失速。"

msgid ""
"A good starting point for the homing speed is for the stepper motor to make "
"a full rotation every two seconds. For many axes this will be the "
"`rotation_distance` divided by two. For example:"
msgstr "歸位速度的最佳調整起點是步進電機每兩秒轉一圈。對於許多軸，這就是將是 `rotation_distance` 除以2。例如："

msgid "Configure printer.cfg for sensorless homing"
msgstr "為無感測器歸位配置printer.cfg"

msgid ""
"The `homing_retract_dist` setting must be set to zero in the `stepper_x` "
"config section to disable the second homing move. The second homing attempt "
"does not add value when using sensorless homing, it will not work reliably, "
"and it will confuse the tuning process."
msgstr ""
"在`stepper_x` 配置部分， `homing_retract_dist` "
"設定必須被設為零，以禁用第二次歸位動作。在使用無感測器歸位時，第二次歸位嘗試不會提高精度，也不會可靠地工作，而且會擾亂調整過程。"

msgid ""
"Be sure that a `hold_current` setting is not specified in the TMC driver "
"section of the config. (If a hold_current is set then after contact is made,"
" the motor stops while the carriage is pressed against the end of the rail, "
"and reducing the current while in that position may cause the carriage to "
"move - that results in poor performance and will confuse the tuning "
"process.)"
msgstr ""
"確保在配置的TMC驅動部分沒有指定 "
"`hold_current`的設定。（如果設定了hold_current，那麼在接觸后，當滑車撞到軌道末端時，電機就會停止，在這個位置上減少電流可能會導致滑車移動"
"--這將導致歸位效能不佳，並會擾亂調整過程。）"

msgid ""
"It is necessary to configure the sensorless homing pins and to configure "
"initial \"stallguard\" settings. A tmc2209 example configuration for an X "
"axis might look like:"
msgstr "需要配置無感測器歸位引腳，並配置初始 \"stallguard \"設定。一個用於X軸的tmc2209示例配置如下："

msgid "An example tmc2130 or tmc5160 config might look like:"
msgstr "用於tmc2130或tmc5160配置的例子如下："

msgid "An example tmc2660 config might look like:"
msgstr "用於tmc2660配置的例子如下："

msgid ""
"The examples above only show settings specific to sensorless homing. See the"
" [config reference](Config_Reference.md#tmc-stepper-driver-configuration) "
"for all the available options."
msgstr ""
"上面的例子只顯示了針對無感測器歸位的設定。所有可用選項請參見[配置參考](Config_Reference.md#tmc-stepper-driver-"
"configuration)。"

msgid "Find highest sensitivity that successfully homes"
msgstr "找到能成功歸位的最高的敏感度設定"

msgid ""
"Place the carriage near the center of the rail. Use the SET_TMC_FIELD "
"command to set the highest sensitivity. For tmc2209:"
msgstr "將滑車放在靠近軌道中心的位置。使用SET_TMC_FIELD命令來設定最高靈敏度。對於tmc2209："

msgid "For tmc2130, tmc5160, and tmc2660:"
msgstr "對於tmc2130, tmc5160, and tmc2660:"

msgid ""
"Next, continually decrease the sensitivity of the `VALUE` setting and run "
"the `SET_TMC_FIELD` `G28 X0` commands again to find the highest sensitivity "
"that results in the carriage successfully moving all the way to the endstop "
"and halting. (For tmc2209 drivers this will be decreasing SGTHRS, for other "
"drivers it will be increasing sgt.) Be sure to start each attempt with the "
"carriage near the center of the rail (if needed issue `M84` and then "
"manually move the carriage to the center). It should be possible to find the"
" highest sensitivity that homes reliably (settings with higher sensitivity "
"result in small or no movement). Note the found value as "
"*maximum_sensitivity*. (If the minimum possible sensitivity (SGTHRS=0 or "
"sgt=63) is obtained without any carriage movement then something is not "
"correct with the diag/sg_tst pin wiring or configuration and it must be "
"corrected before continuing.)"
msgstr ""
"接下來，不斷降低 `VALUE` 設定的靈敏度，並再次執行 `SET_TMC_FIELD`和`G28 X0` "
"命令，找到能使使滑車成功地一直移動到端點並停止的最高的靈敏度。(對於TMC2209驅動，調整是減少 SGTHRS，對於其他驅動，調整是增加 "
"sgt)。確保每次嘗試都在軌道中心附近開始（如果需要，發出`M84`，然後手動將滑車移到中心）。該方法應該可以找到可靠歸位的最高靈敏度（更高的靈敏度設定會導致滑車只動一小段或完全不動）。注意找到的值為*maximum_sensitivity*。(如果在最低靈敏度（SGTHRS=0或sgt=63）下滑車也不動，那麼diag/sg_tst"
" 引腳的接線或配置可能有問題，必須在繼續後面操作前予以修正。）"

msgid ""
"When searching for maximum_sensitivity, it may be convenient to jump to "
"different VALUE settings (so as to bisect the VALUE parameter). If doing "
"this then be prepared to issue an `M112` command to halt the printer, as a "
"setting with a very low sensitivity may cause the axis to repeatedly "
"\"bang\" into the end of the rail."
msgstr ""
"在尋找最大靈敏度時，更方便的是跳到不同的VALUE設定（比如將VALUE參數的一半）。如果這樣做，請準備好發出 "
"`M112`命令以停止印表機，因為靈敏度很低的設定可能會導致軸反覆 \"撞 \"到導軌的末端。"

msgid ""
"Be sure to wait a couple of seconds between each homing attempt. After the "
"TMC driver detects a stall it may take a little time for it to clear its "
"internal indicator and be capable of detecting another stall."
msgstr "請確保在每次歸位嘗試之間等待幾秒鐘。在TMC驅動程式檢測到失速后，它可能需要一點時間來清除其內部指示器，才能夠檢測到下一次失速。"

msgid ""
"During these tuning tests, if a `G28 X0` command does not move all the way "
"to the axis limit, then be careful with issuing any regular movement "
"commands (eg, `G1`). Klipper will not have a correct understanding of the "
"carriage position and a move command may cause undesirable and confusing "
"results."
msgstr ""
"在調整測試中，如果`G28 "
"X0`命令不能完全移動到軸的極限位置，那麼在發出任何常規移動命令（例如，`G1`）時要小心。Klipper將不能正確定位滑塊的位置，移動命令可能會導致非預期和混亂的結果。"

msgid "Find lowest sensitivity that homes with one touch"
msgstr "找到最低的靈敏度，只需一次接觸就能歸位"

msgid ""
"When homing with the found *maximum_sensitivity* value, the axis should move"
" to the end of the rail and stop with a \"single touch\" - that is, there "
"should not be a \"clicking\" or \"banging\" sound. (If there is a banging or"
" clicking sound at maximum_sensitivity then the homing_speed may be too low,"
" the driver current may be too low, or sensorless homing may not be a good "
"choice for the axis.)"
msgstr ""
"當用找到的*最大靈敏度*值歸位時，軸應該移動到軌道的末端並 \"single touch（一觸即停）\"--也就是說，不應該有 \"咔嚓 \"或 \"砰"
" \"的聲音。(如果在最大靈敏度下有撞擊或點選聲，那麼歸位速度可能太低，驅動電流可能太低，或者該軸可能不適合用無感測器歸位。）"

msgid ""
"The next step is to again continually move the carriage to a position near "
"the center of the rail, decrease the sensitivity, and run the "
"`SET_TMC_FIELD` `G28 X0` commands - the goal is now to find the lowest "
"sensitivity that still results in the carriage successfully homing with a "
"\"single touch\". That is, it does not \"bang\" or \"click\" when contacting"
" the end of the rail. Note the found value as *minimum_sensitivity*."
msgstr ""
"下一步是再次持續移動滑塊到靠近軌道中心的位置，降低靈敏度，並執行`SET_TMC_FIELD`和`G28 X0`命令 - "
"這次的目標是找到最低的靈敏度，仍能使滑塊成功地 \"一觸即停\"歸位。也就是說，當接觸到軌道的末端時，它不會發出\"砰 \"或 "
"\"咔\"的聲音。注意找到的值是*minimum_sensitivity*。"

msgid "Update printer.cfg with sensitivity value"
msgstr "更新printer.cfg中的靈敏度值"

msgid ""
"After finding *maximum_sensitivity* and *minimum_sensitivity*, use a "
"calculator to obtain the recommend sensitivity as *minimum_sensitivity + "
"(maximum_sensitivity - minimum_sensitivity)/3*. The recommended sensitivity "
"should be in the range between the minimum and maximum, but slightly closer "
"to the minimum. Round the final value to the nearest integer value."
msgstr ""
"在找到*maximum_sensitivity*和*minimum_sensitivity*后，計算得到推薦的靈敏度為 "
"*minimum_sensitivity +(maximum_sensitivity-"
"minimum_sensitivity)/3*。推薦的靈敏度應該在最小值和最大值之間，但略微接近最小值。將最終值四捨五入到最近的整數值。"

msgid ""
"For tmc2209 set this in the config as `driver_SGTHRS`, for other TMC drivers"
" set this in the config as `driver_SGT`."
msgstr "對於TMC2209，在配置中設定`driver_SGTHRS`，對於其他TMC驅動，在配置中設定`driver_SGT`。"

msgid ""
"If the range between *maximum_sensitivity* and *minimum_sensitivity* is "
"small (eg, less than 5) then it may result in unstable homing. A faster "
"homing speed may increase the range and make the operation more stable."
msgstr ""
"如果*maximum_sensitivity*和*minimum_sensitivity*之間的範圍很小（例如，小於5），那麼可能導致不穩定的歸位。更快的歸位速度可以擴大範圍，使操作更加穩定。"

msgid ""
"Note that if any change is made to driver current, homing speed, or a "
"notable change is made to the printer hardware, then it will be necessary to"
" run the tuning process again."
msgstr "請注意，如果對驅動電流、歸位速度做了任何改變，或者對印表機硬體做了明顯的改變，那麼就需要再次執行這個調整過程。"

msgid "Using Macros when Homing"
msgstr "歸位時使用宏"

msgid ""
"After sensorless homing completes the carriage will be pressed against the "
"end of the rail and the stepper will exert a force on the frame until the "
"carriage is moved away. It is a good idea to create a macro to home the axis"
" and immediately move the carriage away from the end of the rail."
msgstr ""
"在無感測器歸位完成後，滑車將頂到導軌的末端，步進器將持續對框架施加力，直到滑車移開。最好建立一個宏來使軸歸位，並立即將小車從軌道的末端移開。"

msgid ""
"It is a good idea for the macro to pause at least 2 seconds prior to "
"starting sensorless homing (or otherwise ensure that there has been no "
"movement on the stepper for 2 seconds). Without a delay it is possible for "
"the driver's internal stall flag to still be set from a previous move."
msgstr "在開始無感測器歸位之前，宏最好暫停至少2秒（或確保步進在2秒內沒有移動）。如果沒有延遲，驅動器的內部失速標誌有可能在之前的移動中被設定了。"

msgid "An example macro might look something like:"
msgstr "一個宏的例子如下："

msgid ""
"The resulting macro can be called from a [homing_override config "
"section](Config_Reference.md#homing_override) or from a [START_PRINT "
"macro](Slicers.md#klipper-gcode_macro)."
msgstr ""
"產生的宏可以從[homing_override配置部分](Config_Reference.md#homing_override)或[START_PRINT宏](Slicers.md#klipper-"
"gcode_macro)中呼叫。"

msgid ""
"Note that if the driver current during homing is changed, then the tuning "
"process should be run again."
msgstr "請注意，如果歸位期間的驅動電流發生變化，則應重新執行調整過程。"

msgid "Tips for sensorless homing on CoreXY"
msgstr "在CoreXY上進行無感測器歸位的技巧"

msgid ""
"It is possible to use sensorless homing on the X and Y carriages of a CoreXY"
" printer. Klipper uses the `[stepper_x]` stepper to detect stalls when "
"homing the X carriage and uses the `[stepper_y]` stepper to detect stalls "
"when homing the Y carriage."
msgstr ""
"可以在CoreXY印表機的X和Y行車上使用無感測器歸位。Klipper使用`[stepper_x]`步進器來檢測X滑車歸位時的失速，使用`[stepper_y]`步進器來檢測Y滑車歸位時的失速。"

msgid ""
"Use the tuning guide described above to find the appropriate \"stall "
"sensitivity\" for each carriage, but be aware of the following restrictions:"
msgstr "使用上述的調諧指南，為每個滑車找到合適的 \"失速靈敏度\"，但要注意以下限制："

msgid ""
"While tuning, make sure both the X and Y carriages are near the center of "
"their rails before each home attempt."
msgstr "在調整時，確保X和Y車架在每次歸位嘗試前都接近其軌道的中心。"

msgid ""
"After tuning is complete, when homing both X and Y, use macros to ensure "
"that one axis is homed first, then move that carriage away from the axis "
"limit, pause for at least 2 seconds, and then start the homing of the other "
"carriage. The move away from the axis avoids homing one axis while the other"
" is pressed against the axis limit (which may skew the stall detection). The"
" pause is necessary to ensure the driver's stall flag is cleared prior to "
"homing again."
msgstr ""
"調整完成後，當X和Y軸歸位時，使用宏來確保一個軸首先被歸位，然後將該滑車遠離軸的極限，停頓至少2秒，然後開始另一個滑車的歸位。遠離軸端點的移動可以避免一個軸被歸位，而另一個軸頂在軸的極限上（這可能使失速檢測發生偏差）。暫停是必要的，以確保驅動器的失速標誌在再次歸位之前被清除。"

msgid "Querying and diagnosing driver settings"
msgstr "查詢和診斷驅動程式設定"

msgid ""
"All of the reported fields are defined in the Trinamic datasheet for each "
"driver. These datasheets can be found on the [Trinamic "
"website](https://www.trinamic.com/). Obtain and review the Trinamic "
"datasheet for the driver to interpret the results of DUMP_TMC."
msgstr ""
"所有報告的欄位都定義在驅動器的Trinamic數據手冊中。這些數據表可以在[Trinamic網站](https://www.trinamic.com/)上找到。請獲取並檢視驅動器的Trinamic數據手冊來解釋DUMP_TMC的結果。"

msgid "Configuring driver_XXX settings"
msgstr "配置driver_XXX設定"

msgid ""
"Klipper supports configuring many low-level driver fields using `driver_XXX`"
" settings. The [TMC driver config reference](Config_Reference.md#tmc-"
"stepper-driver-configuration) has the full list of fields available for each"
" type of driver."
msgstr ""
"Klipper支援使用`driver_XXX`設定來配置許多底層驅動程式欄位。[TMC驅動配置參考](Config_Reference.md#tmc-"
"stepper-driver-configuration)有每種型別的驅動可用欄位的完整列表。"

msgid ""
"Each of these fields is defined in the Trinamic datasheet for each driver. "
"These datasheets can be found on the [Trinamic "
"website](https://www.trinamic.com/)."
msgstr ""
"每一個欄位都在驅動器的Trinamic數據手冊中有定義。這些數據表可以在[Trinamic網站](https://www.trinamic.com/)上找到。"

msgid ""
"Note that the Trinamic datasheets sometime use wording that can confuse a "
"high-level setting (such as \"hysteresis end\") with a low-level field value"
" (eg, \"HEND\"). In Klipper, `driver_XXX` and SET_TMC_FIELD always set the "
"low-level field value that is actually written to the driver. So, for "
"example, if the Trinamic datasheet states that a value of 3 must be written "
"to the HEND field to obtain a \"hysteresis end\" of 0, then set "
"`driver_HEND=3` to obtain the high-level value of 0."
msgstr ""
"請注意，Trinamic的數據表中，有時一些詞可能導致在高層設定（如 \"hysteresis end\"）和底層欄位值（如 "
"\"HEND\"）的混亂。在Klipper中，`driver_XXX`和SET_TMC_FIELD總是設定實際寫入驅動器的底層次欄位值。例如，如果Trinamic的數據表指出，需要將3的值寫入HEND欄位，以使得"
" \"hysteresis end\"等於0，那麼設定`driver_HEND=3`使得高層獲得0的值。"

msgid "Common Questions"
msgstr "常見問題"

msgid ""
"I keep getting \"Unable to read tmc uart 'stepper_x' register IFCNT\" "
"errors?"
msgstr "我一直得到 \"Unable to read tmc uart 'stepper_x' register IFCNT \"的錯誤？"

msgid ""
"This occurs when Klipper is unable to communicate with a tmc2208 or tmc2209 "
"driver."
msgstr "這種情況發生在Klipper無法與tmc2208或tmc2209驅動通訊時。"

msgid ""
"Make sure that the motor power is enabled, as the stepper motor driver "
"generally needs motor power before it can communicate with the micro-"
"controller."
msgstr "確保電機電源啟用，因為步進電機驅動器在與微控制器通訊之前一般需要確保電機先上電。"

msgid ""
"If this error occurs after flashing Klipper for the first time, then the "
"stepper driver may have been previously programmed in a state that is not "
"compatible with Klipper. To reset the state, remove all power from the "
"printer for several seconds (physically unplug both USB and power plugs)."
msgstr ""
"如果這個錯誤是在第一次刷寫Klipper后發生的，那麼步進驅動器可能處在一個狀態，此狀態與剛剛寫入的Klipper不相容。要重置該狀態，請將印表機的所有電源拔掉幾秒鐘（物理上拔掉USB插頭和電源插頭）。"

msgid ""
"Otherwise, this error is typically the result of incorrect UART pin wiring "
"or an incorrect Klipper configuration of the UART pin settings."
msgstr "否則，這種錯誤通常是由於UART引腳接線不正確或Klipper配置的UART引腳設定不正確造成的。"

msgid ""
"I keep getting \"Unable to write tmc spi 'stepper_x' register ...\" errors?"
msgstr "我一直得到 \"Unable to write tmc spi 'stepper_x' register ...\"的錯誤？"

msgid ""
"This occurs when Klipper is unable to communicate with a tmc2130 or tmc5160 "
"driver."
msgstr "當Klipper無法與tmc2130或tmc5160驅動通訊時就會出現這種情況。"

msgid ""
"Otherwise, this error is typically the result of incorrect SPI wiring, an "
"incorrect Klipper configuration of the SPI settings, or an incomplete "
"configuration of devices on an SPI bus."
msgstr "否則，這種錯誤通常是由於SPI接線不正確、Klipper對SPI設定的配置不正確或SPI匯流排上的裝置配置不完整造成的。"

msgid ""
"Note that if the driver is on a shared SPI bus with multiple devices then be"
" sure to fully configure every device on that shared SPI bus in Klipper. If "
"a device on a shared SPI bus is not configured, then it may incorrectly "
"respond to commands not intended for it and corrupt the communication to the"
" intended device. If there is a device on a shared SPI bus that can not be "
"configured in Klipper, then use a [static_digital_output config "
"section](Config_Reference.md#static_digital_output) to set the CS pin of the"
" unused device high (so that it will not attempt to use the SPI bus). The "
"board's schematic is often a useful reference for finding which devices are "
"on an SPI bus and their associated pins."
msgstr ""
"請注意，如果驅動器是在掛多個裝置共享的SPI匯流排上，那麼一定要在Klipper中完全配置該共享SPI匯流排上的每個裝置。如果共享SPI匯流排上的一個裝置沒有被配置，那麼它可能會錯誤地響應不是為它準備的命令，並破壞與目標裝置的通訊。如果在共享的SPI匯流排上有不能在Klipper中配置的裝置，那麼使用[static_digital_output"
" config "
"section](Config_Reference.md#static_digital_output)將未使用的裝置的CS引腳設定為高電平（這樣它就不會試圖使用SPI匯流排）。電路板的原理圖通常是一個有用的參考，原理圖上可以找到哪些裝置掛在SPI匯流排上以及它們的相關引腳。"

msgid "Why did I get a \"TMC reports error: ...\" error?"
msgstr "為什麼我得到一個 \"TMC reports error: ...\"錯誤？"

msgid ""
"This type of error indicates the TMC driver detected a problem and has "
"disabled itself. That is, the driver stopped holding its position and "
"ignored movement commands. If Klipper detects that an active driver has "
"disabled itself, it will transition the printer into a \"shutdown\" state."
msgstr ""
"這型別的錯誤表明TMC驅動器檢測到了一個問題，並且已經自我禁用。也就是說，驅動器已經停止了保持位置，並忽略了移動命令。如果Klipper檢測到一個啟用的驅動器已經自我禁用，它就會把印表機切換到"
" \"關閉 \"狀態。"

msgid "Some common errors and tips for diagnosing them:"
msgstr "一些常見的錯誤和診斷的技巧："

msgid ""
"It's also possible that a **TMC reports error** shutdown occurs due to SPI "
"errors that prevent communication with the driver (on tmc2130, tmc5160, or "
"tmc2660). If this occurs, it's common for the reported driver status to show"
" `00000000` or `ffffffff` - for example: `TMC reports error: DRV_STATUS: "
"ffffffff ...` OR `TMC reports error: READRSP@RDSEL2: 00000000 ...`. Such a "
"failure may be due to an SPI wiring problem or may be due to a self-reset or"
" failure of the TMC driver."
msgstr ""
"也有可能由於SPI錯誤導致無法與驅動器通訊而發生**TMC reports "
"error**導致的關機（在tmc2130、tmc5160或tmc2660上）。如果發生這種情況，報告的驅動器狀態通常會顯示 \"00000000 "
"\"或 \"ffffff\"--例如：`TMC reports error: DRV_STATUS: ffffffff ...`或者`TMC "
"reports error: READRSP@RDSEL2: 00000000 "
"...`。這樣的故障可能是由於SPI的接線問題，也可能是由於TMC驅動器的自復位或故障導致的。"

msgid ""
"The [Trinamic website](https://www.trinamic.com/) has guides on configuring "
"the drivers. These guides are often technical, low-level, and may require "
"specialized hardware. Regardless, they are the best source of information."
msgstr ""
"[Trinamic網站](https://www.trinamic.com/)有關於配置驅動程式的指南。這些指南通常是專業、底層且可能需要專用的硬體。不管怎麼說，它們是最好的資訊來源。"

msgid ""
"[stepper_x]\n"
"rotation_distance: 40\n"
"homing_speed: 20\n"
"...\n"
msgstr ""
"[stepper_x]\n"
"rotation_distance: 40\n"
"homing_speed: 20\n"
"...\n"

msgid ""
"[tmc2209 stepper_x]\n"
"diag_pin: ^PA1      # Set to MCU pin connected to TMC DIAG pin\n"
"driver_SGTHRS: 255  # 255 is most sensitive value, 0 is least sensitive\n"
"...\n"
"\n"
"[stepper_x]\n"
"endstop_pin: tmc2209_stepper_x:virtual_endstop\n"
"homing_retract_dist: 0\n"
"...\n"
msgstr ""
"[tmc2209 stepper_x]\n"
"diag_pin: ^PA1      # 設定MCU引腳連線到TMC的DIAG引腳\n"
"driver_SGTHRS: 255  # 255是最敏感的值，0是最不敏感的值\n"
"...\n"
"\n"
"[stepper_x]\n"
"endstop_pin: tmc2209_stepper_x:virtual_endstop\n"
"homing_retract_dist: 0\n"
"...\n"

msgid ""
"[tmc2130 stepper_x]\n"
"diag1_pin: ^!PA1 # Pin connected to TMC DIAG1 pin (or use diag0_pin / DIAG0 pin)\n"
"driver_SGT: -64  # -64 is most sensitive value, 63 is least sensitive\n"
"...\n"
"\n"
"[stepper_x]\n"
"endstop_pin: tmc2130_stepper_x:virtual_endstop\n"
"homing_retract_dist: 0\n"
"...\n"
msgstr ""
"[tmc2130 stepper_x]\n"
"diag1_pin: ^!PA1 #  連線到TMC的DIAG1引腳(或使用diag0_pin / DIAG0引腳)\n"
"driver_SGT: -64  # -64是最敏感的值，63是最不敏感的值\n"
"...\n"
"\n"
"[stepper_x]\n"
"endstop_pin: tmc2130_stepper_x:virtual_endstop\n"
"homing_retract_dist: 0\n"
"...\n"

msgid ""
"[tmc2660 stepper_x]\n"
"driver_SGT: -64     # -64 is most sensitive value, 63 is least sensitive\n"
"...\n"
"\n"
"[stepper_x]\n"
"endstop_pin: ^PA1   # Pin connected to TMC SG_TST pin\n"
"homing_retract_dist: 0\n"
"...\n"
msgstr ""
"[tmc2660 stepper_x]\n"
"driver_SGT: -64     # -64是最敏感的值，63是最不敏感的值\n"
"...\n"
"\n"
"[stepper_x]\n"
"endstop_pin: ^PA1   # 與TMC SG_TST引腳相連的引腳\n"
"homing_retract_dist: 0\n"
"...\n"

msgid "SET_TMC_FIELD STEPPER=stepper_x FIELD=SGTHRS VALUE=255\n"
msgstr "SET_TMC_FIELD STEPPER=stepper_x FIELD=SGTHRS VALUE=255\n"

msgid "SET_TMC_FIELD STEPPER=stepper_x FIELD=sgt VALUE=-64\n"
msgstr "SET_TMC_FIELD STEPPER=stepper_x FIELD=sgt VALUE=-64\n"

#: docs/TMC_Drivers.md:block 1 (header)
msgid "TMC drivers"
msgstr "TMC 驅動器"

#: docs/TMC_Drivers.md:block 6 (paragraph)
msgid ""
"By default, Klipper places the TMC drivers in \"spreadCycle\" mode. If the "
"driver supports \"stealthChop\" then it can be enabled by adding "
"`stealthchop_threshold: 999999` to the TMC config section."
msgstr ""
"預設情況下，Klipper將TMC驅動置於 \"spreadCycle \"模式。如果驅動程式支援 "
"\"stealthChop\"，那麼可以通過新增`stealthchop_threshold: 999999`到TMC的配置部分。"

#: docs/TMC_Drivers.md:block 7 (paragraph)
msgid ""
"It is recommended to always use \"spreadCycle\" mode (by not specifying "
"`stealthchop_threshold`) or to always use \"stealthChop\" mode (by setting "
"`stealthchop_threshold` to 999999). Unfortunately, the drivers often produce"
" poor and confusing results if the mode changes while the motor is at a non-"
"zero velocity."
msgstr ""
"建議總是使用 \"spreadCycle \"模式（通過不指定`stealthchop_threshold`）或總是使用 \"stealthChop "
"\"模式（通過設定`stealthchop_threshold`為99999）。不幸的是，如果在電機處於非零速度時改變模式，驅動器往往會產生糟糕和混亂的結果。"

#: docs/TMC_Drivers.md:block 18 (ordered list)
msgid ""
"A stallGuard capable TMC stepper driver (tmc2130, tmc2209, tmc2660, or "
"tmc5160)."
msgstr "一個具有stallGuard功能的TMC步進驅動器（TMC2130、TMC2209、TMC2660或TMC5160）。"

#: docs/TMC_Drivers.md:block 75 (header)
msgid "Can I use stealthChop mode on an extruder with pressure advance?"
msgstr "我可以在有壓力推進（pressure advance）的擠出機上使用stealthChop 模式嗎？"

#: docs/TMC_Drivers.md:block 76 (paragraph)
msgid ""
"Many people successfully use \"stealthChop\" mode with Klipper's pressure "
"advance. Klipper implements [smooth pressure "
"advance](Kinematics.md#pressure-advance) which does not introduce any "
"instantaneous velocity changes."
msgstr ""
"許多人成功地在 \"stealthChop "
"\"模式下使用了Klipper的壓力推進。Klipper實現了[平滑壓力推進](Kinematics.md#pressure-"
"advance)，它不會引入任何瞬時速度變化。"

#: docs/TMC_Drivers.md:block 77 (paragraph)
msgid ""
"However, \"stealthChop\" mode may produce lower motor torque and/or produce "
"higher motor heat. It may or may not be an adequate mode for your particular"
" printer."
msgstr ""
"然而，\"stealthChop \"模式可能導致較低的電機扭矩和/或產生較高的電機熱量。對於你的特定印表機來說，它可能是也可能不是一個合適的模式。"

#: docs/TMC_Drivers.md:block 92 (header)
msgid "TMC reports error: `... ot=1(OvertempError!)`"
msgstr "TMC 報告錯誤： `... ot=1(OvertempError!)`"

#: docs/TMC_Drivers.md:block 93 (paragraph)
msgid ""
"This indicates the motor driver disabled itself because it became too hot. "
"Typical solutions are to decrease the stepper motor current, increase "
"cooling on the stepper motor driver, and/or increase cooling on the stepper "
"motor."
msgstr "這表明電機驅動器因溫度過高而自我禁用。典型的解決方案是降低步進電機的電流，增加步進電機驅動器的冷卻，和/或增加步進電機的冷卻。"

#: docs/TMC_Drivers.md:block 94 (header)
msgid "TMC reports error: `... ShortToGND` OR `LowSideShort`"
msgstr "TMC 報告錯誤: `... ShortToGND` 或著 `LowSideShort`"

#: docs/TMC_Drivers.md:block 95 (paragraph)
msgid ""
"This indicates the driver has disabled itself because it detected very high "
"current passing through the driver. This may indicate a loose or shorted "
"wire to the stepper motor or within the stepper motor itself."
msgstr "這表明驅動器已自行禁用，因為它檢測到通過驅動器的電流非常高。這可能表明連線到步進電機或者部件電機內部的電線鬆動或短路了。"

#: docs/TMC_Drivers.md:block 96 (paragraph)
msgid ""
"This error may also occur if using stealthChop mode and the TMC driver is "
"not able to accurately predict the mechanical load of the motor. (If the "
"driver makes a poor prediction then it may send too much current through the"
" motor and trigger its own over-current detection.) To test this, disable "
"stealthChop mode and check if the errors continue to occur."
msgstr ""
"如果使用stealthChop模式，並且TMC驅動器不能準確地預測電機的機械負載，也可能發生這種錯誤。(如果驅動器預測不準確，那麼它可能輸出過高電流到電機，並觸發自己的過電流檢測)。要測試這個，請禁用stealthChop模式，再檢查錯誤是否繼續發生。"

#: docs/TMC_Drivers.md:block 97 (header)
msgid ""
"TMC reports error: `... reset=1(Reset)` OR `CS_ACTUAL=0(Reset?)` OR "
"`SE=0(Reset?)`"
msgstr "TMC報告錯誤：`... reset=1(Reset)` 或`CS_ACTUAL=0(Reset?)` 或`SE=0(Reset?)`"

#: docs/TMC_Drivers.md:block 98 (paragraph)
msgid ""
"This indicates that the driver has reset itself mid-print. This may be due "
"to voltage or wiring issues."
msgstr "這表明驅動器在列印過程中自我復位。這可能是由於電壓或接線問題導致的。"

#: docs/TMC_Drivers.md:block 99 (header)
msgid "TMC reports error: `... uv_cp=1(Undervoltage!)`"
msgstr "TMC 報告錯誤： `... uv_cp=1(Undervoltage!)`"

#: docs/TMC_Drivers.md:block 100 (paragraph)
msgid ""
"This indicates the driver has detected a low-voltage event and has disabled "
"itself. This may be due to wiring or power supply issues."
msgstr "這表明驅動器檢測到了一個電壓低事件，並已自行禁用。這可能是由於接線或電源問題導致的。"

#: docs/TMC_Drivers.md:block 101 (header)
msgid "How do I tune spreadCycle/coolStep/etc. mode on my drivers?"
msgstr "我如何在我的驅動器上調整 spreadCycle/coolStep等模式？"

#: docs/TMC_Drivers.md:block 5 (header)
msgid "Tuning motor current"
msgstr "調整電機電流"

#: docs/TMC_Drivers.md:block 6 (paragraph)
msgid ""
"A higher driver current increases positional accuracy and torque. However, a"
" higher current also increases the heat produced by the stepper motor and "
"the stepper motor driver. If the stepper motor driver gets too hot it will "
"disable itself and Klipper will report an error. If the stepper motor gets "
"too hot, it loses torque and positional accuracy. (If it gets very hot it "
"may also melt plastic parts attached to it or near it.)"
msgstr ""
"較高的驅動電流可以提高定位精度和扭矩。然而，較高的電流也會增加步進電機和步進電機驅動器產生的熱量。如果步進電機驅動器太熱，它就會自行失效，Klipper會報告錯誤。如果步進電機太熱，它將失去扭矩和位置精度。(如果它變得非常熱，還可能融化連線在它身上或附近的塑料部件。）"

#: docs/TMC_Drivers.md:block 7 (paragraph)
msgid ""
"As a general tuning tip, prefer higher current values as long as the stepper"
" motor does not get too hot and the stepper motor driver does not report "
"warnings or errors. In general, it is okay for the stepper motor to feel "
"warm, but it should not become so hot that it is painful to touch."
msgstr ""
"作為一般的調整建議，只要步進電機不會太熱，並且步進電機驅動器不會報告警告或錯誤，就可以選擇更高的電流值。一般來說，步進電機感到溫熱是可以接受的，但不應該熱到觸控起來很燙手。"

#: docs/TMC_Drivers.md:block 8 (header)
msgid "Prefer to not specify a hold_current"
msgstr "傾向於不指定保持電流（hold_current）"

#: docs/TMC_Drivers.md:block 9 (paragraph)
msgid ""
"If one configures a `hold_current` then the TMC driver can reduce current to"
" the stepper motor when it detects that the stepper is not moving. However, "
"changing motor current may itself introduce motor movement. This may occur "
"due to \"detent forces\" within the stepper motor (the permanent magnet in "
"the rotor pulls towards the iron teeth in the stator) or due to external "
"forces on the axis carriage."
msgstr ""
"如果配置了 `hold_current` "
"，那麼TMC驅動器可以在檢測到步進電機沒有移動時會減少步進電機的電流。然而，改變電機電流本身可能會引起電機轉動。這可能是由於步進電機內部的 "
"\"阻滯力\"（轉子中的永久磁鐵拉向定子中的鐵齒）或軸滑車上的外力造成的。"

#: docs/TMC_Drivers.md:block 10 (paragraph)
msgid ""
"Most stepper motors will not obtain a significant benefit to reducing "
"current during normal prints, because few printing moves will leave a "
"stepper motor idle for sufficiently long to activate the `hold_current` "
"feature. And, it is unlikely that one would want to introduce subtle print "
"artifacts to the few printing moves that do leave a stepper idle "
"sufficiently long."
msgstr ""
"對於大多數步進電機，在正常的列印過程中減少電流不會帶來顯著的好處，因為很少有列印動作會讓步進電機空閑足夠長的時間來啟用 "
"`hold_current`（保持電流）功能。而且，你也不會希望在少數使步進電機空閑足夠長的時間的列印動作中引入小的列印瑕疵。"

#: docs/TMC_Drivers.md:block 12 (paragraph)
msgid ""
"Some printers with dedicated Z motors that are idle during normal printing "
"moves (no bed_mesh, no bed_tilt, no Z skew_correction, no \"vase mode\" "
"prints, etc.) may find that Z motors do run cooler with a `hold_current`. If"
" implementing this then be sure to take into account this type of "
"uncommanded Z axis movement during bed leveling, bed probing, probe "
"calibration, and similar. The `driver_TPOWERDOWN` and `driver_IHOLDDELAY` "
"should also be calibrated accordingly. If unsure, prefer to not specify a "
"`hold_current`."
msgstr ""
"一些印表機的專用Z軸電機在正常的列印動作中是空閑的（沒有床網（bed_mesh），沒有床面傾斜（bed_tilt），沒有Z軸傾斜校正（skew_correction），沒有"
" \"花瓶模式 （vase mode）\"列印，等等），可能會發現Z軸電機在 "
"`hold_current`的情況下確實執行得比較冷。如果實現了這一點，那麼一定要考慮到在床面調平、床面探測、探針校準等過程中這種非指令性的Z軸運動。 "
"`driver_TPOWERDOWN`和 `driver_IHOLDDELAY`也應該進行相應的校準。如果不確定，最好不要指定 "
"`hold_current`。"

#: docs/TMC_Drivers.md:block 13 (header)
msgid "Setting \"spreadCycle\" vs \"stealthChop\" Mode"
msgstr "設定 \"spreadCycle \"與 \"stealthChop \"模式"

#: docs/TMC_Drivers.md:block 15 (paragraph)
msgid ""
"In general, spreadCycle mode provides greater torque and greater positional "
"accuracy than stealthChop mode. However, stealthChop mode may produce "
"significantly lower audible noise on some printers."
msgstr ""
"一般來說，spreadCycle模式比stealthChop模式提供更大的扭矩和更高的定位精度。然而，在某些印表機上，stealthChop "
"模式顯著降低可聽到的噪音。"

#: docs/TMC_Drivers.md:block 16 (paragraph)
msgid ""
"Tests comparing modes have shown an increased \"positional lag\" of around "
"75% of a full-step during constant velocity moves when using stealthChop "
"mode (for example, on a printer with 40mm rotation_distance and 200 "
"steps_per_rotation, position deviation of constant speed moves increased by "
"~0.150mm). However, this \"delay in obtaining the requested position\" may "
"not manifest as a significant print defect and one may prefer the quieter "
"behavior of stealthChop mode."
msgstr ""
"比較模式的測試表明，在使用stealthChop模式時，在恒速移動過程中，\"位置滯後 "
"\"增加了約為整步的75%（例如，在一臺旋轉距離（rotation_distance "
"）為40mm、每圈200步（steps_per_rotation）的印表機上，恒速移動的位置偏差增加了約0.150mm）。然而，這種 "
"\"獲得所需位置的延遲 \"可能不會表現爲明顯的列印缺陷，人們可能更喜歡stealthChop模式帶來的更安靜的列印。"

#: docs/TMC_Drivers.md:block 18 (header)
msgid "TMC interpolate setting introduces small position deviation"
msgstr "TMC插值設定引入了微小的位置偏差"

#: docs/TMC_Drivers.md:block 19 (paragraph)
msgid ""
"The TMC driver `interpolate` setting may reduce the audible noise of printer"
" movement at the cost of introducing a small systemic positional error. This"
" systemic positional error results from the driver's delay in executing "
"\"steps\" that Klipper sends it. During constant velocity moves, this delay "
"results in a positional error of nearly half a configured microstep (more "
"precisely, the error is half a microstep distance minus a 512th of a full "
"step distance). For example, on an axis with a 40mm rotation_distance, 200 "
"steps_per_rotation, and 16 microsteps, the systemic error introduced during "
"constant velocity moves is ~0.006mm."
msgstr ""
"TMC驅動程式的 `interpolate` "
"設定可以減少印表機運動的噪音，但代價是引入一個小的系統位置誤差。這個系統性的位置誤差是由驅動器在執行Klipper發送的 \"步驟 "
"\"時的延遲造成的。在恒速移動過程中，這種延遲導致了將近一半的配置微步的位置誤差（更準確地說，誤差是一半的微步距離減去512分之一的整步距離）。例如，在一個旋轉距離（rotation_distance）為40毫米、每圈200步（steps_per_rotation）、16微步的軸上，在恒速移動過程中引入的系統誤差是~0.006毫米。"

#: docs/TMC_Drivers.md:block 20 (paragraph)
msgid ""
"For best positional accuracy consider using spreadCycle mode and disable "
"interpolation (set `interpolate: False` in the TMC driver config). When "
"configured this way, one may increase the `microstep` setting to reduce "
"audible noise during stepper movement. Typically, a microstep setting of "
"`64` or `128` will have similar audible noise as interpolation, and do so "
"without introducing a systemic positional error."
msgstr ""
"爲了獲得最佳的定位精度，可以考慮使用spreadCycle模式，並禁用插值（在TMC驅動配置中設定`interpolate: False` "
"）。當以這種方式配置時，可以增加`microstep`設定，以減少步進運動中的噪音。通常情況下，微步設定為`64`或`128`會有類似於插值的噪音水平，而且不會引入系統性的位置誤差。"

#: docs/TMC_Drivers.md:block 21 (paragraph)
msgid ""
"If using stealthChop mode then the positional inaccuracy from interpolation "
"is small relative to the positional inaccuracy introduced from stealthChop "
"mode. Therefore tuning interpolation is not considered useful when in "
"stealthChop mode, and one can leave interpolation in its default state."
msgstr ""
"如果使用stealthChop模式，那麼相對於從stealthChop模式引入的位置不精確性，插值的位置不精確性很小。因此，在stealthChop "
"模式下，調整插值是沒有用的，可以將插值設定再其預設狀態。"

#: docs/TMC_Drivers.md:block 71 (paragraph)
msgid ""
"It can also be useful to have that macro set the driver current before "
"homing and set a new current after the carriage has moved away."
msgstr "使用宏在歸位前設定驅動電流，並在滑車移開後設置新的電流，也會很有用。"

#: docs/TMC_Drivers.md:block 73 (code)
msgid ""
"[gcode_macro SENSORLESS_HOME_X]\n"
"gcode:\n"
"    {% set HOME_CUR = 0.700 %}\n"
"    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}\n"
"    {% set RUN_CUR = driver_config.run_current %}\n"
"    # Set current for sensorless homing\n"
"    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}\n"
"    # Pause to ensure driver stall flag is clear\n"
"    G4 P2000\n"
"    # Home\n"
"    G28 X0\n"
"    # Move away\n"
"    G90\n"
"    G1 X5 F1200\n"
"    # Set current during print\n"
"    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}\n"
msgstr ""
"[gcode_macro SENSORLESS_HOME_X]\n"
"gcode:\n"
"    {% set HOME_CUR = 0.700 %}\n"
"    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}\n"
"    {% set RUN_CUR = driver_config.run_current %}\n"
"    # 為無感測器歸位設定電流\n"
"    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}\n"
"    # 暫停，以確保驅動器失速標誌被清除\n"
"    G4 P2000\n"
"    # 歸位\n"
"    G28 X0\n"
"    # 移開\n"
"    G90\n"
"    G1 X5 F1200\n"
"    # 列印過程中設定電流\n"
"    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}\n"

#: docs/TMC_Drivers.md:block 79 (ordered list)
msgid ""
"When using sensorless homing on CoreXY, make sure there is no `hold_current`"
" configured for either stepper."
msgstr "當在CoreXY上使用無感測器歸位時，確保沒有為任何一個步進電機配置`hold_current`。"

#: docs/TMC_Drivers.md:block 11 (paragraph)
msgid ""
"If one wishes to reduce current to motors during print start routines, then "
"consider issuing [SET_TMC_CURRENT](G-Codes.md#set_tmc_current) commands in a"
" [START_PRINT macro](Slicers.md#klipper-gcode_macro) to adjust the current "
"before and after normal printing moves."
msgstr ""
"如果希望在列印預熱時減少電機的電流，那麼可以考慮在[START_PRINT宏](Slicers.md#klipper-"
"gcode_macro)中寫入[SET_TMC_CURRENT](G-Code.md#set_tmc_current)命令，在正常列印開始前後調整電流。"

#: docs/TMC_Drivers.md:block 81 (paragraph)
msgid ""
"The `[DUMP_TMC command](G-Codes.md#dump_tmc) is a useful tool when "
"configuring and diagnosing the drivers. It will report all fields configured"
" by Klipper as well as all fields that can be queried from the driver."
msgstr ""
"`[DUMP_TMC "
"命令](G-Code.md#dump_tmc)是配置和診斷驅動程式的有效工具。它將報告所有由Klipper配置的欄位，以及所有可以從驅動中查詢到的欄位。"

#: docs/TMC_Drivers.md:block 85 (paragraph)
msgid ""
"In addition, almost all fields can be modified at run-time using the "
"[SET_TMC_FIELD command](G-Codes.md#set_tmc_field)."
msgstr "此外，幾乎所有的欄位都可以在執行時使用[SET_TMC_FIELD命令](G-Codes.md#set_tmc_field)進行修改。"

#: docs/TMC_Drivers.md:block 55 (paragraph)
msgid ""
"Then issue a `G28 X0` command and verify the axis does not move at all or "
"quickly stops moving. If the axis does not stop, then issue an `M112` to "
"halt the printer - something is not correct with the diag/sg_tst pin wiring "
"or configuration and it must be corrected before continuing."
msgstr ""

#: docs/TMC_Drivers.md:block 80 (paragraph)
msgid "An example CoreXY homing macro might look like:"
msgstr ""

#: docs/TMC_Drivers.md:block 81 (code)
msgid ""
"[gcode_macro HOME]\n"
"gcode:\n"
"    G90\n"
"    # Home Z\n"
"    G28 Z0\n"
"    G1 Z10 F1200\n"
"    # Home Y\n"
"    G28 Y0\n"
"    G1 Y5 F1200\n"
"    # Home X\n"
"    G4 P2000\n"
"    G28 X0\n"
"    G1 X5 F1200\n"
msgstr ""

#~ msgid ""
#~ "Then issue a `G28 X0` command and verify the axis does not move at all. If "
#~ "the axis does move, then issue an `M112` to halt the printer - something is "
#~ "not correct with the diag/sg_tst pin wiring or configuration and it must be "
#~ "corrected before continuing."
#~ msgstr ""
#~ "然後發一個 `G28 X0`命令，確保軸完全不動。如果軸移動了，立即一個`M112`命令停止印表機-"
#~ "可能是diag/sg_tst引腳的接線或配置有問題，必須在繼續之前修正。"

#~ msgid ""
#~ "The `[DUMP_TMC command](G-Codes.md#tmc-stepper-drivers) is a useful tool "
#~ "when configuring and diagnosing the drivers. It will report all fields "
#~ "configured by Klipper as well as all fields that can be queried from the "
#~ "driver."
#~ msgstr ""

#~ msgid ""
#~ "In addition, almost all fields can be modified at run-time using the "
#~ "[SET_TMC_FIELD command](G-Codes.md#tmc-stepper-drivers)."
#~ msgstr ""

#~ msgid ""
#~ "If one wishes to reduce current to motors during print start routines, then "
#~ "consider issuing [SET_TMC_CURRENT](G-Codes.md#tmc-stepper-drivers) commands "
#~ "in a [START_PRINT macro](Slicers.md#klipper-gcode_macro) to adjust the "
#~ "current before and after normal printing moves."
#~ msgstr ""

#~ msgid ""
#~ "It can also be useful to have that macro set the driver current before "
#~ "homing and set a new current after the carriage has moved away. This also "
#~ "allows a hold_current to be set during prints (a hold_current is not "
#~ "recommended during sensorless homing)."
#~ msgstr ""

#~ msgid ""
#~ "When using sensorless homing on CoreXY, make sure there is no `hold_current`"
#~ " in effect for either stepper during homing."
#~ msgstr ""

#~ msgid ""
#~ "[gcode_macro SENSORLESS_HOME_X]\n"
#~ "gcode:\n"
#~ "    {% set HOME_CUR = 0.700 %}\n"
#~ "    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}\n"
#~ "    {% set RUN_CUR = driver_config.run_current %}\n"
#~ "    {% set HOLD_CUR = driver_config.hold_current %}\n"
#~ "    # Set current for sensorless homing\n"
#~ "    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}\n"
#~ "    # Pause to ensure driver stall flag is clear\n"
#~ "    G4 P2000\n"
#~ "    # Home\n"
#~ "    G28 X0\n"
#~ "    # Move away\n"
#~ "    G90\n"
#~ "    G1 X5 F1200\n"
#~ "    # Set current during print\n"
#~ "    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}\n"
#~ msgstr ""

#~ msgid "Enabling \"StealthChop\" Mode"
#~ msgstr ""

#~ msgid "Enabling \"Stealthchop\" mode"
#~ msgstr ""

#~ msgid ""
#~ "By default, Klipper places the TMC drivers in \"spreadcycle\" mode. If the "
#~ "driver supports \"stealthchop\" then it can be enabled by adding "
#~ "`stealthchop_threshold: 999999` to the TMC config section."
#~ msgstr ""

#~ msgid ""
#~ "It is recommended to always use \"spreadcycle\" mode (by not specifying "
#~ "`stealthchop_threshold`) or to always use \"stealthchop\" mode (by setting "
#~ "`stealthchop_threshold` to 999999). Unfortunately, the drivers often produce"
#~ " poor and confusing results if the mode changes while the motor is at a non-"
#~ "zero velocity."
#~ msgstr ""

#~ msgid ""
#~ "A StallGuard capable TMC stepper driver (tmc2130, tmc2209, tmc2660, or "
#~ "tmc5160)."
#~ msgstr ""

#~ msgid "Can I use stealthchop mode on an extruder with pressure advance?"
#~ msgstr ""

#~ msgid ""
#~ "Many people successfully use \"stealthchop\" mode with Klipper's pressure "
#~ "advance. Klipper implements [smooth pressure "
#~ "advance](Kinematics.md#pressure-advance) which does not introduce any "
#~ "instantaneous velocity changes."
#~ msgstr ""

#~ msgid ""
#~ "However, \"stealthchop\" mode may produce lower motor torque and/or produce "
#~ "higher motor heat. It may or may not be an adequate mode for your particular"
#~ " printer."
#~ msgstr ""

#~ msgid ""
#~ "**TMC reports error: ... ot=1(OvertempError!)\"**: This indicates the motor "
#~ "driver disabled itself because it became too hot. Typical solutions are to "
#~ "decrease the stepper motor current, increase cooling on the stepper motor "
#~ "driver, and/or increase cooling on the stepper motor."
#~ msgstr ""

#~ msgid ""
#~ "**TMC reports error: ... ShortToGND** OR **LowSideShort**: This indicates "
#~ "the driver has disabled itself because it detected very high current passing"
#~ " through the driver. This may indicate a loose or shorted wire to the "
#~ "stepper motor or within the stepper motor itself."
#~ msgstr ""

#~ msgid ""
#~ "This error may also occur if using stealthchop mode and the TMC driver is "
#~ "not able to accurately predict the mechanical load of the motor. (If the "
#~ "driver makes a poor prediction then it may send too much current through the"
#~ " motor and trigger its own over-current detection.) To test this, disable "
#~ "stealthchop mode and check if the errors continue to occur."
#~ msgstr ""

#~ msgid ""
#~ "**TMC reports error: ... reset=1(Reset)** OR **CS_ACTUAL=0(Reset?)** OR "
#~ "**SE=0(Reset?)**: This indicates that the driver has reset itself mid-print."
#~ " This may be due to voltage or wiring issues."
#~ msgstr ""

#~ msgid ""
#~ "**TMC reports error: ... uv_cp=1(Undervoltage!)**: This indicates the driver"
#~ " has detected a low-voltage event and has disabled itself. This may be due "
#~ "to wiring or power supply issues."
#~ msgstr ""

#~ msgid "How do I tune spreadcycle/coolstep/etc. mode on my drivers?"
#~ msgstr ""
