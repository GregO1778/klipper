# Fred Chan <fred2088@gmail.com>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-02-24 08:58+0000\n"
"Last-Translator: Fred Chan <fred2088@gmail.com>\n"
"Language-Team: Chinese (Traditional) <https://hosted.weblate.org/projects/klipper/sdcard_updates/zh_Hant/>\n"
"Language: zh_Hant\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.11-dev\n"

msgid ""
"Many of today's popular controller boards ship with a bootloader capable of "
"updating firmware via SD Card. While this is convenient in many "
"circumstances, these bootloaders typically provide no other way to update "
"firmware. This can be a nuisance if your board is mounted in a location that"
" is difficult to access or if you need to update firmware often. After "
"Klipper has been initially flashed to a controller it is possible to "
"transfer new firmware to the SD Card and initiate the flashing procedure via"
" ssh."
msgstr ""
"當今許多流行的控制器板都帶有能夠通過 SD 卡更新韌體的引導載入程式。 雖然這在很多情況下都很方便，但這些引導載入程式通常不提供其他方式來更新韌體。 "
"如果您的電路板安裝在很難插入SD卡的位置或者您需要經常更新韌體，這可能會很麻煩。 在 Klipper 最初刷入控制器后，可以將新韌體通過網路傳輸到 SD"
" 卡並通過 ssh 啟動刷寫過程。"

msgid "Typical Upgrade Procedure"
msgstr "典型的升級程式"

msgid ""
"The procedure for updating MCU firmware using the SD Card is similar to that"
" of other methods. Instead of using `make flash` it is necessary to run a "
"helper script, `flash-sdcard.sh`. Updating a BigTreeTech SKR 1.3 might look "
"like the following:"
msgstr ""
"使用 SD 卡更新 MCU 韌體的過程與其他方法類似。 不需要使用`make flash`，而是需要執行一個輔助指令碼`flash-"
"sdcard.sh`。 更新 BigTreeTech SKR 1.3 可能如下所示："

msgid ""
"It is up to the user to determine the device location and board name. If a "
"user needs to flash multiple boards, `flash-sdcard.sh` (or `make flash` if "
"appropriate) should be run for each board prior to restarting the Klipper "
"service."
msgstr ""
"由使用者決定裝置位置和電路板名稱。 如果使用者需要重新整理多個板，在重新啟動 Klipper 服務之前，應該為每個板執行 `flash-"
"sdcard.sh`（或`make flash`，如果合適）。"

msgid "Supported boards can be listed with the following command:"
msgstr "可以使用以下命令列出支援的微控制器板："

msgid ""
"If you do not see your board listed it may be necessary to add a new board "
"definition as [described below](#board-definitions)."
msgstr "如果您沒有看到您的電路板列出，則可能需要新增一個新的電路板定義[如下所述](#board-definitions)。"

msgid "Advanced Usage"
msgstr "高級用法"

msgid ""
"The above commands assume that your MCU connects at the default baud rate of"
" 250000 and the firmware is located at `~/klipper/out/klipper.bin`. The "
"`flash-sdcard.sh` script provides options for changing these defaults. All "
"options can be viewed by the help screen:"
msgstr ""
"上述命令假設您的 MCU 以預設波特率 250000 連線並且韌體位於`~/klipper/out/klipper.bin`。 `flash-"
"sdcard.sh` 指令碼提供了更改這些預設值的選項。 所有選項都可以通過幫助畫面檢視："

msgid ""
"If your board is flashed with firmware that connects at a custom baud rate "
"it is possible to upgrade by specifying the `-b` option:"
msgstr "如果您的電路板使用以自定義波特率連線的韌體重新整理，則可以通過指定 `-b` 選項進行升級："

msgid ""
"If you wish to flash a build of Klipper located somewhere other than the "
"default location it can be done by specifying the `-f` option:"
msgstr "如果您希望快閃記憶體位於預設位置以外的其他位置的 Klipper 構建，可以通過指定 `-f` 選項來完成："

msgid ""
"Note that when upgrading a MKS Robin E3 it is not necessary to manually run "
"`update_mks_robin.py` and supply the resulting binary to `flash-sdcard.sh`. "
"This procedure is automated during the upload process."
msgstr ""
"請注意，升級 MKS Robin E3 時，無需手動執行 `update_mks_robin.py` 並將產生的二進制檔案提供給 `flash-"
"sdcard.sh`。 此過程在上傳過程中自動執行。"

msgid "Caveats"
msgstr "注意事項"

msgid ""
"As mentioned in the introduction, this method only works for upgrading "
"firmware. The initial flashing procedure must be done manually per the "
"instructions that apply to your controller board."
msgstr "如介紹中所述，此方法僅適用於升級韌體。 初始刷鞋程式必須按照適用於您的控制器板的說明手動完成。"

msgid ""
"While it is possible to flash a build that changes the Serial Baud or "
"connection interface (ie: from USB to UART), verification will always fail "
"as the script will be unable to reconnect to the MCU to verify the current "
"version."
msgstr ""
"雖然可以重新整理更改序列波特率或連線介面（即：從 USB 到 UART）的構建，但驗證終將失敗，因為指令碼將無法重新連線到 MCU 以驗證目前版本。"

msgid "Board Definitions"
msgstr "電路板定義"

msgid ""
"Most common boards should be available, however it is possible to add a new "
"board definition if necessary. Board definitions are located in "
"`~/klipper/scripts/spi_flash/board_defs.py`. The definitions are stored in "
"dictionary, for example:"
msgstr ""
"大多數常見的電路板都應該可用，但如有必要，可以新增新的電路板定義。 "
"板定義位於`~/klipper/scripts/spi_flash/board_defs.py`。 定義儲存在字典中，例如："

msgid "The following fields may be specified:"
msgstr "可以指定以下欄位："

msgid ""
"`mcu`: The mcu type. This can be retrevied after configuring the build via "
"`make menuconfig` by running `cat .config | grep CONFIG_MCU`. This field is "
"required."
msgstr ""
"`mcu`：微控制器型別。這可以在使用`make menuconfig`配置構建配置后通過執行`cat .config | grep "
"CONFIG_MCU`獲取。 此欄位是必需的。"

msgid ""
"`spi_bus`: The SPI bus connected to the SD Card. This should be retreived "
"from the board's schematic. This field is required."
msgstr "`spi_bus`：連線到 SD 卡的 SPI 匯流排。 這應該從電路板的原理圖中檢索。 此欄位是必需的。"

msgid ""
"`cs_pin`: The Chip Select Pin connected to the SD Card. This should be "
"retreived from the board schematic. This field is required."
msgstr "`cs_pin`：連線到 SD 卡的晶片選擇引腳。 這應該從電路板原理圖中檢索。 此欄位是必需的。"

msgid ""
"`firmware_path`: The path on the SD Card where firmware should be "
"transferred. The default is `firmware.bin`."
msgstr "`firmware_path`：SD 卡上韌體應傳輸的路徑。 預設是`firmware.bin`。"

msgid ""
"`spi_pins`: This should be 3 comma separated pins that are connected to the "
"SD Card in the format of `miso,mosi,sclk`."
msgstr "`spi_pins`：這應該是 3 個逗號分隔的引腳，以 `miso,mosi,sclk` 的格式連線到 SD 卡。"

msgid ""
"Prior to creating a new board definition one should check to see if an "
"existing board definition meets the criteria necessary for the new board. If"
" this is the case, a `BOARD_ALIAS` may be specified. For example, the "
"following alias may be added to specify `my-new-board` as an alias for "
"`generic-lpc1768`:"
msgstr ""
"在建立新板定義之前，應檢查現有板定義是否滿足新板所需的標準。 如果是這種情況，可以指定`BOARD_ALIAS`。 例如，可以新增以下別名來指定「my-"
"new-board」作為「generic-lpc1768」的別名："

msgid ""
"If you need a new board definition and you are uncomfortable with the "
"procedure outlined above it is recommended that you request one in the "
"[Klipper Community Discord](Contact.md#discord)."
msgstr ""
"如果您需要一個新的電路板定義並且您對上述過程感到不舒服，建議您在 [Klipper Community "
"Discord](Contact.md#discord) 中請求一個。"

msgid ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-skr-v1.3\n"
"sudo service klipper start\n"
msgstr ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-skr-v1.3\n"
"sudo service klipper start\n"

msgid "./scripts/flash-sdcard.sh -l\n"
msgstr "./scripts/flash-sdcard.sh -l\n"

msgid "./scripts/flash-sdcard.sh -b 115200 /dev/ttyAMA0 btt-skr-v1.3\n"
msgstr "./scripts/flash-sdcard.sh -b 115200 /dev/ttyAMA0 btt-skr-v1.3\n"

msgid ""
"./scripts/flash-sdcard.sh -f ~/downloads/klipper.bin /dev/ttyAMA0 btt-"
"skr-v1.3\n"
msgstr ""
"./scripts/flash-sdcard.sh -f ~/downloads/klipper.bin /dev/ttyAMA0 btt-"
"skr-v1.3\n"

msgid ""
"BOARD_DEFS = {\n"
"    'generic-lpc1768': {\n"
"        'mcu': \"lpc1768\",\n"
"        'spi_bus': \"ssp1\",\n"
"        \"cs_pin\": \"P0.6\"\n"
"    },\n"
"    ...<further definitions>\n"
"}\n"
msgstr ""
"BOARD_DEFS = {\n"
"    'generic-lpc1768': {\n"
"        'mcu': \"lpc1768\",\n"
"        'spi_bus': \"ssp1\",\n"
"        \"cs_pin\": \"P0.6\"\n"
"    },\n"
"    ...<更多定義>\n"
"}\n"

msgid ""
"BOARD_ALIASES = {\n"
"    ...<previous aliases>,\n"
"    'my-new-board': BOARD_DEFS['generic-lpc1768'],\n"
"}\n"
msgstr ""
"BOARD_ALIASES = {\n"
"    ...<原先的別名>,\n"
"    'my-new-board': BOARD_DEFS['generic-lpc1768'],\n"
"}\n"

#: docs/SDCard_Updates.md:block 1 (header)
msgid "SDCard updates"
msgstr "通過SD卡更新"

#: docs/SDCard_Updates.md:block 12 (code)
msgid ""
"./scripts/flash-sdcard.sh -h\n"
"SD Card upload utility for Klipper\n"
"\n"
"usage: flash_sdcard.sh [-h] [-l] [-c] [-b <baud>] [-f <firmware>]\n"
"                       <device> <board>\n"
"\n"
"positional arguments:\n"
"  <device>        device serial port\n"
"  <board>         board type\n"
"\n"
"optional arguments:\n"
"  -h              show this message\n"
"  -l              list available boards\n"
"  -c              run flash check/verify only (skip upload)\n"
"  -b <baud>       serial baud rate (default is 250000)\n"
"  -f <firmware>   path to klipper.bin\n"
msgstr ""

#: docs/SDCard_Updates.md:block 18 (paragraph)
msgid ""
"The `-c` option is used to perform a check or verify-only operation to test "
"if the board is running the specified firmware correctly. This option is "
"primarily intended for cases where a manual power-cycle is necessary to "
"complete the flashing procedure, such as with bootloaders that use SDIO mode"
" instead of SPI to access their SD Cards. (See Caveats below) But, it can "
"also be used anytime to verify if the code flashed into the board matches "
"the version in your build folder on any supported board."
msgstr ""

#: docs/SDCard_Updates.md:block 20 (unordered list)
msgid ""
"Only boards that use SPI for SD Card communication are supported. Boards "
"that use SDIO, such as the Flymaker Flyboard and MKS Robin Nano V1/V2, will "
"not work in SDIO mode. However, it's usually possible to flash such boards "
"using Software SPI mode instead. But if the board's bootloader only uses "
"SDIO mode to access the SD Card, a power-cycle of the board and SD Card will"
" be necessary so that the mode can switch from SPI back to SDIO to complete "
"reflashing. Such boards should be defined with `skip_verify` enabled to skip"
" the verify step immediately after flashing. Then after the manual power-"
"cycle, you can rerun the exact same `./scripts/flash-sdcard.sh` command, but"
" add the `-c` option to complete the check/verify operation. See [Flashing "
"Boards that use SDIO](#flashing-boards-that-use-sdio) for examples."
msgstr ""

#: docs/SDCard_Updates.md:block 25 (unordered list)
msgid ""
"`current_firmware_path`: The path on the SD Card where the renamed firmware "
"file is located after a successful flash. The default is `firmware.cur`."
msgstr ""

#: docs/SDCard_Updates.md:block 25 (unordered list)
msgid ""
"`skip_verify`: This defines a boolean value which tells the scripts to skip "
"the firmware verification step during the flashing process. The default is "
"`False`. It can be set to `True` for boards that require a manual power-"
"cycle to complete flashing. To verify the firmware afterward, run the script"
" again with the `-c` option to perform the verification step. [See caveats "
"with SDIO cards](#caveats)"
msgstr ""

#: docs/SDCard_Updates.md:block 26 (paragraph)
msgid ""
"If software SPI is required, the `spi_bus` field should be set to `swspi` "
"and the following additional field should be specified:"
msgstr ""

#: docs/SDCard_Updates.md:block 28 (paragraph)
msgid ""
"It should be exceedingly rare that Software SPI is necessary, typically only"
" boards with design errors or boards that normally only support SDIO mode "
"for their SD Card will require it. The `btt-skr-pro` board definition "
"provides an example of the former, and the `btt-octopus-f446-v1` board "
"definition provides an example of the latter."
msgstr ""

#: docs/SDCard_Updates.md:block 32 (header)
msgid "Flashing Boards that use SDIO"
msgstr ""

#: docs/SDCard_Updates.md:block 33 (paragraph)
msgid ""
"[As mentioned in the Caveats](#caveats), boards whose bootloader uses SDIO "
"mode to access their SD Card require a power-cycle of the board, and "
"specifically the SD Card itself, in order to switch from the SPI Mode used "
"while writing the file to the SD Card back to SDIO mode for the bootloader "
"to flash it into the board. These board definitions will use the "
"`skip_verify` flag, which tells the flashing tool to stop after writing the "
"firmware to the SD Card so that the board can be manually power-cycled and "
"the verification step deferred until that's complete."
msgstr ""

#: docs/SDCard_Updates.md:block 34 (paragraph)
msgid ""
"There are two scenarios -- one with the RPi Host running on a separate power"
" supply and the other when the RPi Host is running on the same power supply "
"as the main board being flashed. The difference is whether or not it's "
"necessary to also shutdown the RPi and then `ssh` again after the flashing "
"is complete in order to do the verification step, or if the verification can"
" be done immediately. Here's examples of the two scenarios:"
msgstr ""

#: docs/SDCard_Updates.md:block 35 (header)
msgid "SDIO Programming with RPi on Separate Power Supply"
msgstr ""

#: docs/SDCard_Updates.md:block 36 (paragraph)
msgid ""
"A typical session with the RPi on a Separate Power Supply looks like the "
"following. You will, of course, need to use your proper device path and "
"board name:"
msgstr ""

#: docs/SDCard_Updates.md:block 37 (code)
msgid ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-octopus-f446-v1\n"
"[[[manually power-cycle the printer board here when instructed]]]\n"
"./scripts/flash-sdcard.sh -c /dev/ttyACM0 btt-octopus-f446-v1\n"
"sudo service klipper start\n"
msgstr ""

#: docs/SDCard_Updates.md:block 38 (header)
msgid "SDIO Programming with RPi on the Same Power Supply"
msgstr ""

#: docs/SDCard_Updates.md:block 39 (paragraph)
msgid ""
"A typical session with the RPi on the Same Power Supply looks like the "
"following. You will, of course, need to use your proper device path and "
"board name:"
msgstr ""

#: docs/SDCard_Updates.md:block 40 (code)
msgid ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-octopus-f446-v1\n"
"sudo shutdown -h now\n"
"[[[wait for the RPi to shutdown, then power-cycle and ssh again to the RPi when it restarts]]]\n"
"sudo service klipper stop\n"
"cd ~/klipper\n"
"./scripts/flash-sdcard.sh -c /dev/ttyACM0 btt-octopus-f446-v1\n"
"sudo service klipper start\n"
msgstr ""

#: docs/SDCard_Updates.md:block 41 (paragraph)
msgid ""
"In this case, since the RPi Host is being restarted, which will restart the "
"`klipper` service, it's necessary to stop `klipper` again before doing the "
"verification step and restart it after verification is complete."
msgstr ""

#: docs/SDCard_Updates.md:block 42 (header)
msgid "SDIO to SPI Pin Mapping"
msgstr ""

#: docs/SDCard_Updates.md:block 43 (paragraph)
msgid ""
"If your board's schematic uses SDIO for its SD Card, you can map the pins as"
" described in the chart below to determine the compatible Software SPI pins "
"to assign in the `board_defs.py` file:"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "SD Card Pin"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "Micro SD Card Pin"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "SDIO Pin Name"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "SPI Pin Name"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "9"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "1"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "DATA2"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "None (PU)*"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "2"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "CD/DATA3"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "CS"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "3"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "CMD"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "MOSI"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "4"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "+3.3V (VDD)"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "5"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "CLK"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "SCLK"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "6"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "GND (VSS)"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "7"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "DATA0"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "MISO"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "8"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "DATA1"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "N/A"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "Card Detect (CD)"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "10"
msgstr ""

#: docs/SDCard_Updates.md:block 44 (table)
msgid "GND"
msgstr ""

#: docs/SDCard_Updates.md:block 45 (paragraph)
msgid "\\* None (PU) indicates an unused pin with a pull-up resistor"
msgstr ""

#~ msgid ""
#~ "Only boards that use SPI for SD Card communication are supported. Boards "
#~ "that use SDIO, such as the Flymaker Flyboard and MKS Robin Nano V1/V2, will "
#~ "not work."
#~ msgstr ""
#~ "僅支援使用 SPI 進行 SD 卡通訊的板。 使用 SDIO 的板，例如 Flymaker Flyboard 和 MKS Robin Nano "
#~ "V1/V2，將無法工作。"

#~ msgid ""
#~ "`current_firmware_path` The path on the SD Card where the renamed firmware "
#~ "file is located after a successful flash. The default is `firmware.cur`."
#~ msgstr ""
#~ "`current_firmware_path` 成功重新整理後重命名的韌體檔案所在的 SD 卡上的路徑。 預設是`firmware.cur`。"

#~ msgid ""
#~ "If software SPI is required the `spi_bus` field should be set to `swspi` and"
#~ " the following additional field should be specified:"
#~ msgstr "如果需要軟體 SPI，`spi_bus` 欄位應設定為 `swspi`，並應指定以下附加欄位："

#~ msgid ""
#~ "It should be exceedingly rare that Software SPI is necessary, typically only"
#~ " boards with design errors will require it. The `btt-skr-pro` board "
#~ "definition provides an example."
#~ msgstr "軟體 SPI 是必要的應該是非常罕見的，通常只有設計錯誤的板才會需要它。 `btt-skr-pro` 板定義提供了一個示例。"

#~ msgid ""
#~ "./scripts/flash-sdcard.sh -h\n"
#~ "SD Card upload utility for Klipper\n"
#~ "\n"
#~ "usage: flash_sdcard.sh [-h] [-l] [-b <baud>] [-f <firmware>]\n"
#~ "                       <device> <board>\n"
#~ "\n"
#~ "positional arguments:\n"
#~ "  <device>        device serial port\n"
#~ "  <board>         board type\n"
#~ "\n"
#~ "optional arguments:\n"
#~ "  -h              show this message\n"
#~ "  -l              list available boards\n"
#~ "  -b <baud>       serial baud rate (default is 250000)\n"
#~ "  -f <firmware>   path to klipper.bin\n"
#~ msgstr ""
#~ "./scripts/flash-sdcard.sh -h\n"
#~ "Klipper SD卡更新工具\n"
#~ "\n"
#~ "使用方法：flash_sdcard.sh [-h] [-l] [-b <baud>] [-f <firmware>]\n"
#~ "                       <device> <board>\n"
#~ "\n"
#~ "位置參數：\n"
#~ "  <device>        裝置串列埠\n"
#~ "  <board>         主板型別\n"
#~ "\n"
#~ "可選參數：\n"
#~ "  -h              顯示這條資訊\n"
#~ "  -l              列出可用主板\n"
#~ "  -b <baud>       串列埠波特率（預設為250000）\n"
#~ "  -f <firmware>   klipper.bin檔案路徑\n"
