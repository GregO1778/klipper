# Adolfo Jayme Barrientos <fitojb@ubuntu.com>, 2021.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-06 11:32+0200\n"
"PO-Revision-Date: 2021-05-08 09:32+0000\n"
"Last-Translator: Adolfo Jayme Barrientos <fitojb@ubuntu.com>\n"
"Language-Team: Spanish <https://hosted.weblate.org/projects/klipper/debugging/es/>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.7-dev\n"

msgid "This document describes some of the Klipper debugging tools."
msgstr ""
"Este documento describe algunas de las herramientas de depuración de "
"Klipper."

msgid "Translating gcode files to micro-controller commands"
msgstr "Convertir archivos gcode en órdenes de microcontrolador"

msgid ""
"The Klippy host code can run in a batch mode to produce the low-level micro-"
"controller commands associated with a gcode file. Inspecting these low-level"
" commands is useful when trying to understand the actions of the low-level "
"hardware. It can also be useful to compare the difference in micro-"
"controller commands after a code change."
msgstr ""
"El código anfitrión de Klippy puede ejecutarse en modo por lotes para "
"producir las órdenes de microcontrolador de bajo nivel asociadas con un "
"archivo gcode. Resulta útil inspeccionar estas órdenes de bajo nivel para "
"entender las acciones del hárdwer de bajo nivel. También puede ser "
"provechoso para comparar la diferencia en las órdenes de microcontrolador "
"tras efectuar una modificación en el código."

msgid ""
"To run Klippy in this batch mode, there is a one time step necessary to "
"generate the micro-controller \"data dictionary\". This is done by compiling"
" the micro-controller code to obtain the **out/klipper.dict** file:"
msgstr ""
"Para ejecutar Klippy en esta modalidad por lotes, existe un paso que debe "
"llevarse a cabo una vez para generar el «diccionario de datos» del "
"microcontrolador. Este consiste en compilar el código del microcontrolador "
"para obtener el archivo **out/klipper.dict**:"

msgid ""
"Once the above is done it is possible to run Klipper in batch mode (see "
"[installation](Installation.md) for the steps necessary to build the python "
"virtual environment and a printer.cfg file):"
msgstr ""
"Una vez se haya llevado a cabo lo anterior, será posible ejecutar Klipper en"
" modo por lotes (en [Instalación](Installation.md) encontrará los pasos "
"necesarios para compilar el entorno virtual de Python y un archivo "
"printer.cfg):"

msgid ""
"The above will produce a file **test.serial** with the binary serial output."
" This output can be translated to readable text with:"
msgstr ""
"Lo anterior producirá un archivo, **test.serial**, con la salida en serie "
"binaria. Esta salida puede transformarse en texto legible mediante:"

msgid ""
"The resulting file **test.txt** contains a human readable list of micro-"
"controller commands."
msgstr ""
"El archivo resultante, **test.txt**, contiene una lista legible por humanos "
"de órdenes del microcontrolador."

msgid ""
"The batch mode disables certain response / request commands in order to "
"function. As a result, there will be some differences between actual "
"commands and the above output. The generated data is useful for testing and "
"inspection; it is not useful for sending to a real micro-controller."
msgstr ""
"El modo por lotes desactiva determinadas órdenes de respuesta/petición para "
"poder funcionar. Por consiguiente, habrá algunas diferencias entre las "
"órdenes reales y la salida anterior. Los datos generados son útiles para "
"efectuar pruebas e inspecciones; no lo son para su envío a un "
"microcontrolador real."

msgid "Testing with simulavr"
msgstr "Puesta a prueba con simulavr"

msgid ""
"The [simulavr](http://www.nongnu.org/simulavr/) tool enables one to simulate"
" an Atmel ATmega micro-controller. This section describes how one can run "
"test gcode files through simulavr. It is recommended to run this on a "
"desktop class machine (not a Raspberry Pi) as it does require significant "
"cpu to run efficiently."
msgstr ""
"La herramienta [simulavr](http://www.nongnu.org/simulavr/) le permite "
"simular un microcontrolador ATmega de Atmel. Esta sección describe el "
"procedimiento para ejecutar archivos gcode de prueba a través de simulavr. "
"Es recomendable ejecutar esto en un PC de escritorio de categoría (no un "
"Raspberry Pi), puesto que necesitará cuantiosos recursos de CPU para "
"funcionar eficientemente."

msgid "To compile Klipper for use in simulavr, run:"
msgstr "Para compilar Klipper para su uso en simulavr, ejecute:"

msgid ""
"Then, with simulavr running in another window, one can run the following to "
"read gcode from a file (eg, \"test.gcode\"), process it with Klippy, and "
"send it to Klipper running in simulavr (see [installation](Installation.md) "
"for the steps necessary to build the python virtual environment):"
msgstr ""
"Acto seguido, teniendo simulavr en ejecución en otra ventana, es posible "
"ejecutar lo siguiente para leer gcode a partir de un archivo (p. ej., "
"«test.gcode»), procesarlo con Klippy y enviarlo al Klipper que se ejecuta "
"dentro de simulavr (vea [Instalación](Installation.md) para obtener los "
"pasos necesarios para generar el entorno virtual de Python):"

msgid "Using simulavr with gtkwave"
msgstr "Utilizar simulavr con gtkwave"

msgid ""
"One useful feature of simulavr is its ability to create signal wave "
"generation files with the exact timing of events. To do this, follow the "
"directions above, but run avrsim.py with a command-line like the following:"
msgstr ""
"Una prestación útil de simulavr es su capacidad de crear archivos de "
"generación de ondas de señal con la cadencia exacta de los sucesos. Para "
"hacerlo, siga las instrucciones anteriores, pero ejecute avrsim.py con una "
"línea de órdenes como esta:"

msgid ""
"The above would create a file **avrsim.vcd** with information on each change"
" to the GPIOs on PORTA and PORTB. This could then be viewed using gtkwave "
"with:"
msgstr ""

msgid "Manually sending commands to the micro-controller"
msgstr "Enviar órdenes al microcontrolador manualmente"

msgid ""
"Normally, the host klippy.py process would be used to translate gcode "
"commands to Klipper micro-controller commands. However, it's also possible "
"to manually send these MCU commands (functions marked with the "
"DECL_COMMAND() macro in the Klipper source code). To do so, run:"
msgstr ""

msgid ""
"See the \"HELP\" command within the tool for more information on its "
"functionality."
msgstr ""
"Vea la orden «HELP» de la herramienta para obtener información sobre sus "
"funcionalidades."

msgid ""
"Some command-line options are available. For more information run: "
"`~/klippy-env/bin/python ./klippy/console.py --help`"
msgstr ""
"Tiene a su disposición algunas opciones de línea de órdenes. Para obtener "
"más información al respecto, ejecute: `~/klippy-env/bin/python "
"./klippy/console.py --help`"

msgid "Generating load graphs"
msgstr "Generar gráficos de carga"

msgid ""
"The Klippy log file (/tmp/klippy.log) stores statistics on bandwidth, micro-"
"controller load, and host buffer load. It can be useful to graph these "
"statistics after a print."
msgstr ""
"El archivo de registro de Klippy (/tmp/klippy.log) almacena estadísticas "
"sobre anchura de banda, carga sobre el microcontrolador y carga sobre el "
"búfer del anfitrión. Puede resultar útil graficar estas estadísticas luego "
"de mostrarlas."

msgid ""
"To generate a graph, a one time step is necessary to install the "
"\"matplotlib\" package:"
msgstr ""
"Para generar un gráfico, hace falta efectuar una vez este paso para instalar"
" el paquete «matplotlib»:"

msgid "Then graphs can be produced with:"
msgstr "Ahora, será posible generar gráficos con:"

msgid "One can then view the resulting **loadgraph.png** file."
msgstr ""
"Tras lo anterior, será posible visualizar el archivo resultante, "
"**loadgraph.png**."

msgid ""
"Different graphs can be produced. For more information run: "
"`~/klipper/scripts/graphstats.py --help`"
msgstr ""
"Es posible producir diferentes gráficos. Para más información, ejecute: "
"`~/klipper/scripts/graphstats.py --help`"

msgid "Extracting information from the klippy.log file"
msgstr "Extraer información desde el archivo klippy.log"

msgid ""
"The Klippy log file (/tmp/klippy.log) also contains debugging information. "
"There is a logextract.py script that may be useful when analyzing a micro-"
"controller shutdown or similar problem. It is typically run with something "
"like:"
msgstr ""
"El archivo de registro de Klippy (/tmp/klippy.log) contiene además "
"información para la depuración. Hay una secuencia de órdenes, logextract.py,"
" que puede resultar útil al momento de analizar problemas de apagado del "
"microcontrolador o similares. Normalmente se ejecuta con algo como:"

msgid ""
"The script will extract the printer config file and will extract MCU "
"shutdown information. The information dumps from an MCU shutdown (if "
"present) will be reordered by timestamp to assist in diagnosing cause and "
"effect scenarios."
msgstr ""
"La secuencia de órdenes extraerá el archivo de configuración de la impresora"
" y los datos de apagado de MCU. Los volcados de información de un apagado de"
" MCU (si existen) se reordenarán por fecha y hora para ayudar a diagnosticar"
" escenarios de causa y efecto."

msgid "Running the regression tests"
msgstr "Ejecutar las pruebas antirregresiones"

msgid ""
"The main Klipper GitHub repository uses \"github actions\" to run a series "
"of regression tests. It can be useful to run some of these tests locally."
msgstr ""
"El repositorio principal de Klipper en GitHub utiliza «acciones de GitHub» "
"para ejecutar una serie de pruebas antirregresiones. Puede ser provechoso "
"ejecutar algunas de estas pruebas de manera local."

msgid "The source code \"whitespace check\" can be run with:"
msgstr ""
"La «comprobación de espacios en blanco» del código fuente puede ejecutarse "
"de esta manera:"

msgid ""
"make menuconfig\n"
"make\n"
msgstr ""

msgid ""
"~/klippy-env/bin/python ./klippy/klippy.py ~/printer.cfg -i test.gcode -o "
"test.serial -v -d out/klipper.dict\n"
msgstr ""

msgid ""
"~/klippy-env/bin/python ./klippy/parsedump.py out/klipper.dict test.serial >"
" test.txt\n"
msgstr ""

msgid ""
"~/klippy-env/bin/python ./klippy/klippy.py config/generic-simulavr.cfg -i "
"test.gcode -v\n"
msgstr ""

msgid "gtkwave avrsim.vcd\n"
msgstr ""

msgid "~/klippy-env/bin/python ./klippy/console.py /tmp/pseudoserial\n"
msgstr ""

msgid ""
"sudo apt-get update\n"
"sudo apt-get install python-matplotlib\n"
msgstr ""

msgid "~/klipper/scripts/graphstats.py /tmp/klippy.log -o loadgraph.png\n"
msgstr ""

msgid ""
"mkdir work_directory\n"
"cd work_directory\n"
"cp /tmp/klippy.log .\n"
"~/klipper/scripts/logextract.py ./klippy.log\n"
msgstr ""

msgid "./scripts/check_whitespace.sh\n"
msgstr ""

msgid ""
"tar xfz klipper-dict-20??????.tar.gz\n"
"~/klippy-env/bin/python ~/klipper/scripts/test_klippy.py -d dict/ ~/klipper/test/klippy/*.test\n"
msgstr ""

#: docs/Debugging.md:block 1 (header)
msgid "Debugging"
msgstr ""

#: docs/Debugging.md:block 24 (header)
msgid "Motion analysis and data logging"
msgstr ""

#: docs/Debugging.md:block 25 (paragraph)
msgid ""
"Klipper supports logging its internal motion history, which can be later "
"analyzed. To use this feature, Klipper must be started with the [API "
"Server](API_Server.md) enabled."
msgstr ""

#: docs/Debugging.md:block 26 (paragraph)
msgid "Data logging is enabled with the `data_logger.py` tool. For example:"
msgstr ""

#: docs/Debugging.md:block 27 (code)
msgid "~/klipper/scripts/motan/data_logger.py /tmp/klippy_uds mylog\n"
msgstr ""

#: docs/Debugging.md:block 28 (paragraph)
msgid ""
"This command will connect to the Klipper API Server, subscribe to status and"
" motion information, and log the results. Two files are generated - a "
"compressed data file and an index file (eg, `mylog.json.gz` and "
"`mylog.index.gz`). After starting the logging, it is possible to complete "
"prints and other actions - the logging will continue in the background. When"
" done logging, hit `ctrl-c` to exit from the `data_logger.py` tool."
msgstr ""

#: docs/Debugging.md:block 29 (paragraph)
msgid ""
"The resulting files can be read and graphed using the `motan_graph.py` tool."
" To generate graphs on a Raspberry Pi, a one time step is necessary to "
"install the \"matplotlib\" package:"
msgstr ""

#: docs/Debugging.md:block 31 (paragraph)
msgid ""
"However, it may be more convenient to copy the data files to a desktop class"
" machine along with the Python code in the `scripts/motan/` directory. The "
"motion analysis scripts should run on any machine with a recent version of "
"[Python](https://python.org) and [Matplotlib](https://matplotlib.org/) "
"installed."
msgstr ""

#: docs/Debugging.md:block 32 (paragraph)
msgid "Graphs can be generated with a command like the following:"
msgstr ""

#: docs/Debugging.md:block 33 (code)
msgid "~/klipper/scripts/motan/motan_graph.py mylog -o mygraph.png\n"
msgstr ""

#: docs/Debugging.md:block 34 (paragraph)
msgid ""
"One can use the `-g` option to specify the datasets to graph (it takes a "
"Python literal containing a list of lists). For example:"
msgstr ""

#: docs/Debugging.md:block 35 (code)
msgid ""
"~/klipper/scripts/motan/motan_graph.py mylog -g "
"'[[\"trapq(toolhead,velocity)\"], [\"trapq(toolhead,accel)\"]]'\n"
msgstr ""

#: docs/Debugging.md:block 36 (paragraph)
msgid ""
"The list of available datasets can be found using the `-l` option - for "
"example:"
msgstr ""

#: docs/Debugging.md:block 37 (code)
msgid "~/klipper/scripts/motan/motan_graph.py -l\n"
msgstr ""

#: docs/Debugging.md:block 38 (paragraph)
msgid ""
"It is also possible to specify matplotlib plot options for each dataset:"
msgstr ""

#: docs/Debugging.md:block 39 (code)
msgid ""
"~/klipper/scripts/motan/motan_graph.py mylog -g "
"'[[\"trapq(toolhead,velocity)?color=red&alpha=0.4\"]]'\n"
msgstr ""

#: docs/Debugging.md:block 40 (paragraph)
msgid ""
"Many matplotlib options are available; some examples are \"color\", "
"\"label\", \"alpha\", and \"linestyle\"."
msgstr ""

#: docs/Debugging.md:block 41 (paragraph)
msgid ""
"The `motan_graph.py` tool supports several other command-line options - use "
"the `--help` option to see a list. It may also be convenient to view/modify "
"the [motan_graph.py](../scripts/motan/motan_graph.py) script itself."
msgstr ""

#: docs/Debugging.md:block 60 (code)
msgid ""
"cd /path/to/klipper\n"
"make menuconfig\n"
msgstr ""

#: docs/Debugging.md:block 61 (paragraph)
msgid ""
"and compile the micro-controller software for an AVR atmega644p and select "
"SIMULAVR software emulation support. Then one can compile Klipper (run "
"`make`) and then start the simulation with:"
msgstr ""

#: docs/Debugging.md:block 67 (code)
msgid ""
"PYTHONPATH=/path/to/simulavr/src/python/ ./scripts/avrsim.py out/klipper.elf"
" -t PORTA.PORT,PORTC.PORT\n"
msgstr ""

#: docs/Debugging.md:block 7 (paragraph)
msgid ""
"The Klippy regression test suite requires \"data dictionaries\" from many "
"platforms. The easiest way to obtain them is to [download them from "
"github](https://github.com/Klipper3d/klipper/issues/1438). Once the data "
"dictionaries are downloaded, use the following to run the regression suite:"
msgstr ""

#: docs/Debugging.md:block 42 (paragraph)
msgid ""
"The raw data logs produced by the `data_logger.py` tool follow the format "
"described in the [API Server](API_Server.md). It may be useful to inspect "
"the data with a Unix command like the following: `gunzip < mylog.json.gz | "
"tr '\\03' '\\n' | less`"
msgstr ""

#: docs/Debugging.md:block 57 (paragraph)
msgid ""
"To use simulavr, download the simulavr package and compile with python "
"support. Note that the build system may need to have some packages (such as "
"swig) installed in order to build the python module."
msgstr ""

#: docs/Debugging.md:block 58 (code)
msgid ""
"git clone git://git.savannah.nongnu.org/simulavr.git\n"
"cd simulavr\n"
"make python\n"
"make build\n"
msgstr ""

#: docs/Debugging.md:block 59 (paragraph)
msgid ""
"Make sure a file like **./build/pysimulavr/_pysimulavr.*.so** is present "
"after the above compilation:"
msgstr ""

#: docs/Debugging.md:block 60 (code)
msgid "ls ./build/pysimulavr/_pysimulavr.*.so\n"
msgstr ""

#: docs/Debugging.md:block 61 (paragraph)
msgid ""
"This commmand should report a specific file (e.g. "
"**./build/pysimulavr/_pysimulavr.cpython-39-x86_64-linux-gnu.so**) and not "
"an error."
msgstr ""

#: docs/Debugging.md:block 62 (paragraph)
msgid ""
"If you are on a Debian-based system (Debian, Ubuntu, etc.) you can install "
"the following packages and generate *.deb files for system-wide installation"
" of simulavr:"
msgstr ""

#: docs/Debugging.md:block 63 (code)
msgid ""
"sudo apt update\n"
"sudo apt install g++ make cmake swig rst2pdf help2man texinfo\n"
"make cfgclean python debian\n"
"sudo dpkg -i build/debian/python3-simulavr*.deb\n"
msgstr ""

#: docs/Debugging.md:block 67 (code)
msgid ""
"PYTHONPATH=/path/to/simulavr/build/pysimulavr/ ./scripts/avrsim.py "
"out/klipper.elf\n"
msgstr ""

#: docs/Debugging.md:block 68 (paragraph)
msgid ""
"Note that if you have installed python3-simulavr system-wide, you do not "
"need to set `PYTHONPATH`, and can simply run the simulator as"
msgstr ""

#: docs/Debugging.md:block 69 (code)
msgid "./scripts/avrsim.py out/klipper.elf\n"
msgstr ""

#~ msgid ""
#~ "To use simulavr, download the simulavr package and compile with python "
#~ "support:"
#~ msgstr ""
#~ "Para utilizar simulavr, descargue el paquete de simulavr y compílelo con "
#~ "compatibilidad con Python:"

#~ msgid ""
#~ "Note that the build system may need to have some packages (such as swig) "
#~ "installed in order to build the python module. Make sure the file "
#~ "**src/python/_pysimulavr.so** is present after the above compilation."
#~ msgstr ""
#~ "Observe que el sistema de generación podría necesitar que algunos paquetes "
#~ "(como swig) estén instalados para generar el módulo de Python. Asegúrese de "
#~ "que el archivo **src/python/_pysimulavr.so** exista luego de efectuar la "
#~ "compilación anterior."

#~ msgid ""
#~ "git clone git://git.savannah.nongnu.org/simulavr.git\n"
#~ "cd simulavr\n"
#~ "./bootstrap\n"
#~ "./configure --enable-python\n"
#~ "make\n"
#~ msgstr ""

#~ msgid ""
#~ "PYTHONPATH=/path/to/simulavr/src/python/ ./scripts/avrsim.py "
#~ "out/klipper.elf\n"
#~ msgstr ""

#~ msgid ""
#~ "The Klippy regression test suite requires \"data dictionaries\" from many "
#~ "platforms. The easiest way to obtain them is to [download them from "
#~ "github](https://github.com/KevinOConnor/klipper/issues/1438). Once the data "
#~ "dictionaries are downloaded, use the following to run the regression suite:"
#~ msgstr ""
#~ "El conjunto de pruebas antirregresiones de Klippy requiere «diccionarios de "
#~ "datos» provenientes de muchas plataformas. La manera más sencilla de "
#~ "obtenerlos consiste en [descargarlos de "
#~ "GitHub](https://github.com/KevinOConnor/klipper/issues/1438). Luego de "
#~ "descargar los diccionarios de datos, siga este procedimiento para ejecutar "
#~ "el conjunto de pruebas:"

#~ msgid ""
#~ "and compile the micro-controller software for an AVR atmega644p, set the MCU"
#~ " frequency to 20Mhz, and select SIMULAVR software emulation support. Then "
#~ "one can compile Klipper (run `make`) and then start the simulation with:"
#~ msgstr ""
#~ "y compile el programa del microcontrolador para un atmega644p de AVR, defina"
#~ " la frecuencia de MCU a 20 Mhz y seleccione la compatibilidad de emulación "
#~ "del programa SIMULAVR. Ahora es posible compilar Klipper (ejecute `make`) e "
#~ "iniciar la simulación con:"

#~ msgid ""
#~ "cd /patch/to/klipper\n"
#~ "make menuconfig\n"
#~ msgstr ""

#~ msgid ""
#~ "PYTHONPATH=/path/to/simulavr/src/python/ ./scripts/avrsim.py -m atmega644 -s"
#~ " 20000000 -b 250000 out/klipper.elf\n"
#~ msgstr ""

#~ msgid ""
#~ "PYTHONPATH=/path/to/simulavr/src/python/ ./scripts/avrsim.py -m atmega644 -s"
#~ " 20000000 -b 250000 out/klipper.elf -t PORTA.PORT,PORTC.PORT\n"
#~ msgstr ""
