# This file contains pin mappings for the Creality CR-10 Smart
# with a CRC-2405V1.2 board (STM32F103RET6).
#
# To use this config, during "make menuconfig" select the STM32F103
# with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication. Enable PA0 GPIO pin on startup.
#
# Flash this firmware on the MCU by copying "out/klipper.bin" to an SD
# card and turning the printer on with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.
#
# The machine itself includes a small router that can run a Klipper
# frontend. You don't need to buy a single-board computer.
#
# See docs/Config_Reference.md for a description of parameters.

[mcu]
#serial: /dev/ttyPrinter
#serial: /dev/ttyUSB0
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
baud: 115200
restart_method: command

# Conservative default values that mimic the behaviour of the
# stock firmware for easy results. It can go faster.
[printer]
kinematics: cartesian
max_velocity: 500
#max_accel: 2000
max_accel: 5000
#max_accel: 7000
max_accel_to_decel: 3000
#max_accel_to_decel: 5000
#max_accel_to_decel: 7000
square_corner_velocity: 5.0
#max_z_velocity: 5
max_z_velocity: 10
max_z_accel: 100

[stepper_x]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: PC4
position_min: -5
position_endstop: -5
position_max: 305
#position_min: -1.0
#position_max: 300
#position_max: 316                       # approximately 3mm margin to physical X-movement range of 320mm
homing_speed: 50
#homing_retract_speed: 25                # reduced to prevent frame shock
#homing_retract_dist: 5
#second_homing_speed: 10                 # reduced to get better accuracy (not critical)

[stepper_y]
step_pin: PB6
dir_pin: PB5
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: PC5
position_min: -2
position_endstop: -2
position_max: 302
#position_min: -7.0
#position_max: 310
#position_max: 306                       # approximately 2mm margin to physical Y-movement limit of 315mm (requires correct Y-stop mechanical position adjustment)
homing_speed: 50
#homing_retract_speed: 25                # reduced to prevent frame shock
#homing_retract_dist: 5
#second_homing_speed: 10                 # reduced to get better accuracy (not critical)

[stepper_z]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PC3
rotation_distance: 8
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
position_min: -1.5
position_max: 400
homing_speed: 4
second_homing_speed: 1
homing_retract_dist: 2.0
second_homing_speed: 0.2                # very slow approach speeds are a MUST, even with a high quality capacitive probe; more so with OEM probe

[safe_z_home]
home_xy_position: 150,150 # Change coordinates to the center of your print bed
speed: 50
#z_hop: 3                 # Move up 2mm
z_hop: 10
z_hop_speed: 5

#[force_move]
#enable_force_move: True

[extruder]
max_extrude_only_distance: 1000.0								 
step_pin: PC2
dir_pin: !PB9
enable_pin: !PC3
# Creality Spirit Extruder
#rotation_distance: 7.640
# Creality CR-10 Smart Stock Extruder
#rotation_distance: 30.4768
# Bondtech LGX Lite Extruder upgrade
#stepper motor is a 1.8 degrees motor hence 200 as full steps per rotation;
#microsteps are set to 16;
#e-steps value recommended for the LGXÂ® Lite is 562.
#rotation_distance = 200 * 16 / 562
rotation_distance = 5.7
microsteps: 16
#full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 70.0
max_extrude_only_accel: 1000.0
heater_pin: PB14
sensor_type: EPCOS 100K B57560G104F    #default thermistor
#sensor_type: Honeywell 100K 135-104LAG-J01
sensor_pin: PB1
control: pid
# Octoprint Tune Heater Name "extruder"
# Creality SPirit Hotend
#pid_Kp: 22.865
#pid_Ki: 1.292
#pid_Kd: 101.178
# CR-10 Smart Stock Hotend
# tuned for stock hardware with 150 degree Celsius target
#pid_Kp: 14.32
#pid_Ki: 0.81
#pid_Kd: 63.12
#min_temp: 0
#max_temp: 310
#pressure_advance: 0.78
# CR-10 Smart Microswiss Hotend
# tuned for Microswiss hardware with 200 degree Celsius target
pid_Kp: 14.32
pid_Ki: 0.81
pid_Kd: 63.12
min_temp: 0
max_temp: 320
pressure_advance: 0.78

[filament_switch_sensor runout_sensor]
#pause_on_runout: false
pause_on_runout: true
switch_pin: ^!PA7
runout_gcode: PAUSE
insert_gcode: RESUME

[heater_bed]
heater_pin: PB13
#heater: bed
sensor_type: EPCOS 100K B57560G104F    #default thermistor
sensor_pin: PB0
control: pid
# Octoprint Tune Heater Name "heater_bed"
# CR-10 Smart Stock Bed
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 72.49
#pid_Ki: 0.844
#pid_Kd: 1542.189
# CR-10 Smart Stock Bed
# tuned for stock hardware with 100 degree Celsius target												
pid_Kp: 72.49
pid_Ki: 0.844
pid_Kd: 1542.189
min_temp: 0
max_temp: 150

[heater_fan hotend_fan]
pin: PC13
heater: extruder
heater_temp: 50.0

[temperature_sensor Board_MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[fan]
pin: PB15
kick_start_time: 0.5

# Before printing the PROBE_CALIBRATE command needs to be issued
# to run the probe calibration procedure, described at
# docs/Probe_Calibrate.md, to find the correct z_offset.
[probe]
pin: PA4
x_offset: 0.0
y_offset: 0.0
#z_offset: -0.35
z_offset: -0.25
speed: 2.0
#speed: 0.50
lift_speed: 5
#samples: 3
samples: 5
samples_tolerance: 0.05
samples_tolerance_retries: 2
#samples_result: median
#activate_gcode: TARE_PROBE
#deactivate_gcode: M104 S150

#[output_pin probe_enable]
#pin: !PA1
#value: 1

[bed_mesh]
speed: 120
horizontal_move_z: 3
#mesh_min: 5,5
mesh_min: 10,10
mesh_max: 285, 285
#mesh_max: 290, 290
#mesh_max: 295,295
#probe_count: 5,5
probe_count: 6,6
fade_start: 1
fade_end: 10
#fade_target:
#mesh_pps: 2, 2
#algorithm: lagrange or bicubic
#bicubic_tension: .2

[bed_screws]
#[screws_tilt_adjust]
#screw1: 25,30                           # exact screw location based on the X&Y endstops defined above
screw1: 60, 80
screw1_name: front left screw
#screw1_fine_adjust:
#screw2: 275,30                          # exact screw location based on the X&Y endstops defined above
screw2: 300, 80
screw2_name: front right screw
#screw2_fine_adjust:
# The rear screws are actually mechanically not reachable for the
# probe, but that is ok, adjustments will still converge.
#screw3: 275,270                         # exact screw location based on the X&Y endstops defined above
screw3: 300, 300
screw3_name: rear right screw
#screw3_fine_adjust:
#screw4: 25,270                          # exact screw location based on the X&Y endstops defined above
screw4: 60, 300
screw4_name: rear left screw
#screw4_fine_adjust:
horizontal_move_z: 10.
#probe_height: 0
probe_height: 0.2                       # use the Creality supplied 0.2mm feeler gauge for manual adjustment to avoid bed damage
speed: 50
#speed: 80
#probe_speed: 5
probe_speed: 2                          # can approach faster than bed mesh probing for a coarse manual screw adjustment
#screw_thread: CW-M3

[input_shaper]
shaper_freq_x: 91.3
shaper_type_x: ei
#shaper_freq_y: 42.6
shaper_freq_y: 49.6
shaper_type_y: ei

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points: 117.5,117.5,20  # bed center

[output_pin lights] # Main light and add-on bar
pin: PA6
value: 1

# Do not use PB12. PB12 resets the Wifi board.
#[output_pin factory_reset]
#pin: PB12
#value: 0

[static_digital_output daughterboard_communication]
pins: !PA5

# Turns off the printer
[output_pin power]
pin: PA0
value: 1
shutdown_value: 1

###Fluidd config###
#[include client.cfg] 
#[include client_macros.cfg]
#[include macros/*.cfg]

#[save_variables]
#filename: ~/variables.cfg

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

#[t5uid1]
#firmware: dgus_reloaded
#update_interval: 1
#machine_name: CR-10S Pro
#volume: 40
#brightness: 50
#x_min_inset: 26.0                       # 25mm inset from X=0
#x_max_inset: 41.0                       # 25mm inset from X=300
#y_min_inset: 37.0                       # 30mm inset from Y=0
#y_max_inset: 36.0                       # 30mm inset from Y=300
#z_min: 0                                # avoid accidental bed collisions
#z_max: 350                              # additional margin for LCD commanded moves

####Macros####
[respond]
default_type: echo

[gcode_arcs]                            # allow use of ArcWelder
resolution: 0.5

[gcode_macro M81]
gcode:
	set_pin pin=ps_on value=0
	set_pin pin=fan1 value=0

#[gcode_macro TARE_PROBE]
#gcode:
	#SET_PIN PIN=probe_enable VALUE=0
	#G4 P250
	#SET_PIN PIN=probe_enable VALUE=1
	#G4 P250
	#{action_respond_info("Probe tared")}

[gcode_macro RUN_ABL]
gcode:
	M190 S60
	G28
	M104 S0		#switch off heater as it was switched on after homing
	BED_MESH_CALIBRATE
	SAVE_CONFIG
	M140 S0
	M104 S0

[gcode_macro START_PRINT]
gcode:
	{% set toolTemp = params.HOTEND_TEMP|int %}
	{% set bedTemp = params.BED_TEMP|int %}
	M140 S{bedTemp}					# set Bed temp to target
	M104 S150							# hotend temperature for homing
	M82 								#absolute extrusion mode
	
	#SET_GCODE_VARIABLE MACRO=<macro_name> VARIABLE=<name> VALUE=<value>
	M220 S100 							#Reset Feedrate
	M221 S100 							#Reset Flowrate

	{% if printer.homed_axes != 'XYZ' %}
		{% if bedTemp >= 50 %}
			TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=50	# wait for bed to be over 50
		{% endif %}
		TEMPERATURE_WAIT SENSOR=extruder MINIMUM=140
		M104 S0							# extruder heater off
		G28								# home all axes
	{% endif %}
	G90									# absolute positioning

	M104 S{toolTemp -70} 					#{ params.hotend_temp - 70 }
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bedTemp - 10}

	# Set temperature and move to edge of bed to avoid drooping onto it
	G0 Z20
	G0 X0 Y0
	M104 S{toolTemp}						# wait for Hotend Temp
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={toolTemp - 1}
	
	# And we can now draw our purge line
	SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=1000 ACCEL_TO_DECEL=500 SQUARE_CORNER_VELOCITY=5
	G92 E0 								#Reset Extruder
	G1 Z2.0 F3000 							#Move Z Axis up
	G1 X0 Y20 Z0.28						#Move to start position
	G1 X0 Y200.0 Z0.28 E15   				#Draw the first line
	G1 X0 Y200.0 Z0.28 						#Move to side a little
	G1 X0.5 Y20 Z0.28 E30 					#Draw the second line
	G92 E0 								#Reset Extruder
	G1 Z2.0 F3000 							#Move Z Axis up
	#SET_VELOCITY_LIMIT VELOCITY=200 ACCEL=5000 ACCEL_TO_DECEL=2500 SQUARE_CORNER_VELOCITY=75	#speedBenchy settings

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.179000, 0.125500, 0.034000, 0.000500, -0.837500
#*# 	  0.059500, 0.055500, 0.006500, -0.045000, -0.625000
#*# 	  0.008500, -0.003500, -0.011500, -0.049500, -0.619000
#*# 	  0.098500, 0.081500, 0.042000, 0.003000, -0.537000
#*# 	  0.172500, 0.079000, 0.038000, -0.000500, -0.546000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 290.0
#*# min_y = 10.0
#*# max_y = 290.0
#*#
#*# [bed_mesh CR-10 Smart]
#*# version = 1
#*# points =
#*# 	  0.179000, 0.125500, 0.034000, 0.000500, -0.837500
#*# 	  0.059500, 0.055500, 0.006500, -0.045000, -0.625000
#*# 	  0.008500, -0.003500, -0.011500, -0.049500, -0.619000
#*# 	  0.098500, 0.081500, 0.042000, 0.003000, -0.537000
#*# 	  0.172500, 0.079000, 0.038000, -0.000500, -0.546000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 290.0
#*# min_y = 10.0
#*# max_y = 290.0

#
#[delayed_gcode macros_initialize]
#initial_duration: 1
#
#[delayed_gcode macros_initialize]
#initial_duration: 1
