# Klipper configuration to suit Creality CR-10 Smart
#
# In order to gain access to the USB port on the CR-10 Smart, 
# you have to open up the printer and connect a Micro USB cable to the 
# little breakout board which sits in between the mainboard and WiFi board"
# This file is setup for a direct drive setup (Bondtech LGXLite).
# Rotation distance for the extruder will need adjusting for a stndard extruder (included in this file).
#
# Please ensure you PID autotune your heaters rather than just using these PID values!
# You will also need to substitute your own serial address after sending ls /dev/serial/by-id/* via SSH
#
# This file contains pin mappings for the Creality CR-10 Smart
# with a Creality (Creality3D) CRC-2405V1.2 board (STM32F103RET6).
#
# To use this config, during "make menuconfig" select the STM32F103
# with a "28KiB bootloader" and serial (on USART1 PA10/PA9 via CH3400 to USB)
# communication. Enable PA0 GPIO pin on startup.
#
# Flash this firmware on the MCU by copying "out/klipper.bin" to an SD
# card and turning the printer on with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.
#
# The machine itself includes a small router that can run a Klipper
# frontend. You don't need to buy a single-board computer.
#
# DO NOT COPY THIS FILE WITHOUT CAREFULLY READING AND UPDATING IT
# FIRST. Incorrectly configured parameters may cause damage.
#
# See docs/Config_Reference.md for a description of parameters.
#
# In the "make menuconfig" settings make sure you have the following:
#
# [*] Enable extra low-level configuration options
# Micro-controller Architecture (STMicroelectronics STM32) --->
# Processor model (STM32F103) --->
# [ ] Only 10KiB of RAM (for rare stm32f103x6 variant)
# [ ] Disable SWD at startup (for GigaDevice stm32f103 clones)
# Bootloader offset (28KiB bootloader) --->
# Clock Reference (8 MHz crystal) --->
# Communication interface (Serial (on USART1 PA10/PA9)) --->
# (115200) Baud rate for serial port
# (PA0) GPIO pins to set at micro-controller startup
#
# run "make" to build the firmware
#
# the following is requiered in "printer.cfg" if you are not using this config:
#
# [mcu]
# serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
# baud: 115200
# restart_method: command
#
# For FYSETC-PortableInputShaper (two are required for sling bed printers CR-10 series)
#
# In the "make menuconfig" settings make sure you have the following:
#
# [ ] Enable extra low-level configuration options
# Micro-controller Architecture (Raspberry Pi RP2040)  --->
# Communication interface (USB)  --->
#
# config
# Use PIS.cfg, and add it to your printer.cfg by
# [include PIS.cfg]
#
# how to flash FYSETC-PortableInputShaper
# Click and hold the button
# Connect to to your PC with USB-C cable
# Folder popup, copy the klipper.uf2 to the folder
#
# Attention
# Make sure you flash PIS the same Klipper version as your machine. I recommend you update Klipper to latest version.
#
# EEPROM IIC BL24CXX on I2C-0
# IIC_EEPROM_SDA                  PA11
# IIC_EEPROM_SCL                  PA12
# EEPROM SIZE              0x800  2K (24C16)
# BOARD_NO_NATIVE_USB
# PB4 (Z_STEP_PIN) from JTAG NRST role
# PB4 (Y_ENABLE_PIN) from JTAG NRST role
# SD_DETECT_PIN                       PC7
# SD_DETECT_PIN                       PC7
# SDCARD_CONNECTION                ONBOARD
# ON_BOARD_SPI_DEVICE                    1
# ONBOARD_SD_CS_PIN                   PC12  // SDSS
# SDIO_SUPPORT                              // Extra added by Creality
# NO_SD_HOST_DRIVE                          // This board's SD is only seen by the printer
# SDIO_CLOCK                       6000000  // In original source code overridden by Creality in sdio.h
# MOTOR_CIRCUIT_PIN                   PA1
# MOTOR_PROTECT_PIN                   PC0

############################
#      Include Configs
############################
### Mainsail config ### 
#[include mainsail.cfg]
### Fluidd config ###
#[include client.cfg] 
### Macros ###
#[include client_macros.cfg]
#[include macros/*.cfg]
### Accelerometer Confi ###
#[include PIS.cfg]
### Variables ###
#[save_variables]
#filename: ~/variables.cfg

############################
#            MCU
############################
# Please change the serial to the value of your installation
[mcu]
#serial: /dev/ttyPrinter
#serial: /dev/ttyUSB0
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
baud: 115200
restart_method: command

############################
#    Accelerometer MCU
############################
#[mcu PIS]
# Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
#serial: /dev/serial/by-id/xxxx

############################
#          Printer
############################
# Conservative default values that mimic the behaviour of the
# stock firmware for easy results. It can go faster.
[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 1200
#max_accel: 2000
#max_accel: 5000
#max_accel: 7000
max_accel_to_decel: 600
#max_accel_to_decel: 1000
#max_accel_to_decel: 2000
#max_accel_to_decel: 3000
#max_accel_to_decel: 5000
#max_accel_to_decel: 7000
square_corner_velocity: 5.0
max_z_velocity: 5
#max_z_velocity: 10
max_z_accel: 100

############################
#      idle timeout
############################
# set to 10 minutes so the Heat_Soak macro doesn't timeout
[idle_timeout]
timeout: 600

############################
#        x steppers
############################
[stepper_x]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: PC4
position_min: -5
position_endstop: -5
position_max: 305
#position_max: 300
homing_speed: 50
homing_retract_speed: 25                # reduced to prevent frame shock
homing_retract_dist: 5
second_homing_speed: 10                 # reduced to get better accuracy (not critical)

############################
#        y steppers
############################
[stepper_y]
step_pin: PB6
dir_pin: PB5
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: PC5
position_min: -2
position_endstop: -2
position_max: 302
#position_max: 300
homing_speed: 50
homing_retract_speed: 25                # reduced to prevent frame shock
homing_retract_dist: 5
second_homing_speed: 10                 # reduced to get better accuracy (not critical)

############################
#        z steppers
############################
[stepper_z]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PC3
rotation_distance: 8
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
position_min: -1.5
#position_min: -5.0
position_max: 400
homing_speed: 5
#homing_speed: 2.0
second_homing_speed: 1
#second_homing_speed: 0.5                # very slow approach speeds are a MUST, even with a high quality capacitive probe; more so with OEM probe
#second_homing_speed: 0.2
homing_retract_dist: 2.0
#homing_retract_dist: 3.0


############################
#        z home
############################
[safe_z_home]
home_xy_position: 150,150              # Change coordinates to the center of your print bed
speed: 50
z_hop: 10
z_hop_speed: 5

############################
#         extruder
############################
# Calibration.
# Measure 120mm, then extrude 100mm
# G1 E100 F100
# step_distance = old_e_steps * ((120 - distance_to_mark) / 100)
# Update step_distance below and FIRMWARE_RESTART
# pressure asdvance should be callibrated for your setup
[extruder]
#max_extrude_only_distance: 1000.0
#max_extrude_only_distance: 500.0
max_extrude_only_distance: 100.0
max_extrude_only_velocity: 70.0
max_extrude_only_accel: 1000.0							 
step_pin: PC2
dir_pin: !PB9
enable_pin: !PC3
# Creality CR-10 Smart Stock Extruder
#rotation_distance: 30.4768
# Creality Spirit Extruder
#rotation_distance: 7.640
# Bondtech LGX Extruder
#rotation_distance: 8
# Bondtech LGX Lite Extruder
#stepper motor is a 1.8 degrees motor hence 200 as full steps per rotation;
#microsteps are set to 16;
#e-steps value recommended for the LGXÂ® Lite is 562.
#rotation_distance = 200 * 16 / 562
rotation_distance = 5.7
microsteps: 16
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB14
sensor_type: EPCOS 100K B57560G104F    #default thermistor
sensor_pin: PB1
control: pid
# Octoprint Tune Heater Name "extruder"
# Creality Spirit Hotend
#pid_Kp: 22.865
#pid_Ki: 1.292
#pid_Kd: 101.178
# CR-10 Smart Stock Hotend
# Stock hardware tuned with 150 degree Celsius target
#pid_Kp: 14.32
#pid_Ki: 0.81
#pid_Kd: 63.12
# CR-10 Smart Microswiss Hotend
# Tuned for Microswiss hardware with 235 degree Celsius target
pid_kp = 25.645
pid_ki = 1.500
pid_kd = 109.634
min_temp: 0
max_temp: 320
#pressure_advance: 0.78
#pressure_advance: 0.12875
#pressure_advance = 0.10

############################
#  Filament Runout sensor
############################
[filament_switch_sensor runout_sensor]
#pause_on_runout: false
pause_on_runout: true
switch_pin: ^!PA7
runout_gcode: PAUSE
insert_gcode: RESUME

############################
#        Bed heaters
############################
[heater_bed]
heater_pin: PB13
sensor_type: EPCOS 100K B57560G104F    #default thermistor
sensor_pin: PB0
control: pid
# Octoprint Tune Heater Name "heater_bed"
# CR-10 Smart Stock Bed
# Stock hardware tunring with 50 degree Celsius target
#pid_Kp: 79.49
#pid_Ki: 1.17
#pid_Kd: 1349.52
# CR-10 Smart Stock Bed
# Tuned for stock hardware with 100 degree Celsius target												
pid_kp = 76.424
pid_ki = 1.150
pid_kd = 1269.596
min_temp: 0
max_temp: 150

############################
#       Heater fan
############################
[heater_fan hotend_fan]
pin: PC13
heater: extruder
heater_temp: 50.0

############################
#     Board Temp sensor
############################
[temperature_sensor Board_MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

############################
#       MCU fan
############################
[fan]
pin: PB15
kick_start_time: 0.5

############################
#         ABL Prob
############################
# Before printing the PROBE_CALIBRATE command needs to be issued
# to run the probe calibration procedure, described at
# docs/Probe_Calibrate.md, to find the correct z_offset.
[probe]
pin: PA4
x_offset: 0.0
y_offset: 0.0
#z_offset: -0.35
#z_offset: -0.30
#z_offset: -0.25
#z_offset: -0.20
#z_offset: -0.15
z_offset: -0.10
#z_offset: -0.05
#z_offset: -0.00
#speed: 2.0
speed: 1.0
#speed: 0.50
lift_speed: 5
#samples: 3
samples: 5
samples_tolerance: 0.05
samples_tolerance_retries: 2
#samples_result: median
#samples_result: average
activate_gcode: 
	TARE_PROBE
#deactivate_gcode: 
#	M104 S150

############################
#   bl touch / cr touch
############################
# Not used on CR-10 Smart
#[bltouch]
#sensor_pin: ^PC15 
#control_pin: PC14 
#x_offset: -29
#y_offset: -42
#z_offset: 2.80
#speed:10
#samples:1
#samples_result:average
#probe_with_touch_mode: true
#stow_on_each_sample: false

############################
#        Prob tare
############################
[output_pin probe_tare]
pin: !PA5
value: 1

############################
#        Prob enable
############################
[output_pin probe_enable]
pin: PB2            # Optoswitch to Enable Z Probe
#pin: !PA1
value: 1

############################
#        Bed mesh
############################
# A 5x5 bed mesh was choosen to have a point in the center of the bed
# that uses the middle mesh point, which is also the safe z home, for reference
# lagrange is the default algorithm
[bed_mesh]
speed: 100
#speed: 120
#speed: 150
horizontal_move_z: 5
#horizontal_move_z: 10
#mesh_min: 5,5
#mesh_min: 10,10
mesh_min: 15,15
#mesh_min: 20,20
#mesh_max: 280, 280
mesh_max: 285, 285
#mesh_max: 290, 290
#mesh_max: 295,295
#probe_count: 5,5
probe_count: 6,6
fade_start: 1
fade_end: 10
#fade_target:
mesh_pps: 2, 2
algorithm: bicubic
bicubic_tension: .2
move_check_distance: 5
split_delta_z: .025

############################
#        Bed screws
############################
# This is only valid if the "Bed Screw" mod has been performed
[bed_screws]
#[screws_tilt_adjust]
screw1: 25,30                           # exact screw location based on the X&Y endstops defined above
#screw1: 30, 30
#screw1: 60, 80
screw1_name: front left screw
#screw1_fine_adjust:
screw2: 275,30                          # exact screw location based on the X&Y endstops defined above
#screw2: 190, 30
#screw2: 300, 80
screw2_name: front right screw
#screw2_fine_adjust:
screw3: 275,270                         # exact screw location based on the X&Y endstops defined above
#screw3: 190, 190
#screw3: 300, 300
screw3_name: rear right screw
#screw3_fine_adjust:
screw4: 25,270                          # exact screw location based on the X&Y endstops defined above
#screw4: 30, 190
#screw4: 60, 300
screw4_name: rear left screw
#screw4_fine_adjust:
horizontal_move_z: 10.
#probe_height: 0
probe_height: 0.2                       # use the Creality supplied 0.2mm feeler gauge for manual adjustment to avoid bed damage
speed: 50
#speed: 80
#probe_speed: 5
probe_speed: 2                          # can approach faster than bed mesh probing for a coarse manual screw adjustment

############################
#        Screw tilt
############################
[screws_tilt_adjust]
screw1: 65, 80
screw1_name: front left screw
screw2: 305, 80
screw2_name: front right screw
# The rear screws are actually mechanically not reachable for the
# probe, but that is ok, adjustments will still converge.
screw3: 305, 312
screw3_name: rear right screw
screw4: 65, 312
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3

############################
#        Input shaper
############################
[input_shaper]
shaper_freq_x: 90.50
shaper_type_x: ei
shaper_freq_y: 45.25
shaper_type_y: ei

############################
#    Accelerometer chip
############################
#[adxl345]
#cs_pin: rpi:None
#cs_pin: PIS:gpio13
#spi_bus: spi1a
#spi_software_sclk_pin: PIS:gpio10
#spi_software_mosi_pin: PIS:gpio11
#spi_software_miso_pin: PIS:gpio12
#axes_map: x,-z,y

############################
#    Resonance tester
############################
#[resonance_tester]
#accel_chip: adxl345
#probe_points: 150,150,20                    # bed center
#probe_points:
    #100,100,20 # an example

############################
#        LED lights
############################
[output_pin LED_pin]                          # Main light and add-on bar
pin: PA6
#pin: PA7
#pin: Pc13
value: 0
#value: 1

############################
#       Factory Reset
############################
# Do not use PB12. PB12 resets the Wifi board.
# Halt and Catch Fire. 
# This is connected to the Wifi Boards Reset Pin. 
# If you enable that, the Wifi Board will go down and you cannot disable it. 
# This will lead to the pin being hold and do a factory reset on the wifi board. 
# If you are using the WiFi board for klipper,
# you will have to connect to the KlipperWrt Wifi and configure everything again.
#[output_pin factory_reset]
#pin: PB12
#value: 0

############################
#        Static pins
############################
#[static_digital_output daughterboard_communication]
#pins: !PA5

############################
#      Power control
############################
# Turns off the printer
[output_pin ps_on]
pin: PA0
value: 1
shutdown_value: 1

############################
#      Display
############################
[t5uid1]
#PA2: LCD Tx
#PA3: LCD Rx
#Settings used for the CR-10 Smart
firmware: dgus_reloaded
#update_interval: 1
machine_name: CR-10 Smart
#volume: 50
#brightness: 50
#boot_sound:
#notification_sound:
#x_min_inset: 26.0                       # 25mm inset from X=0
#x_max_inset: 41.0                       # 25mm inset from X=300
#y_min_inset: 37.0                       # 30mm inset from Y=0
#y_max_inset: 36.0                       # 30mm inset from Y=300
#x_min:
#x_max:
#y_min:
#y_max:
#z_min: 0                                # avoid accidental bed collisions
#z_max: 350                              # additional margin for LCD commanded moves

############################
#      Display status
############################
[display_status]

############################
#      pause / resume
############################
[pause_resume]

############################
#      File directory
############################
[virtual_sdcard]
path: ~/gcode_files

############################
#        Force Move
############################
# This allows for moving of the head or bed without disabeling steppers
[force_move]
enable_force_move: True

############################
#         MACROS
############################
[respond]
default_type: echo

[gcode_arcs]                            # allow use of ArcWelder
resolution: 0.5

[gcode_macro m205]
gcode:

[gcode_macro M81]
gcode:
	set_pin pin=ps_on value=0
	set_pin pin=fan1 value=0

[gcode_macro TARE_PROBE]
gcode:
    #M104 S0
	#SET_PIN PIN=probe_enable VALUE=0
	SET_PIN PIN=probe_tare VALUE=0
	G4 P250
	#SET_PIN PIN=probe_enable VALUE=1
	SET_PIN PIN=probe_tare VALUE=1
	G4 P250
	{action_respond_info("Probe tared")}

[gcode_macro RUN_ABL]
gcode:
	M190 S60
	G28
	M104 S0		#switch off heater as it was switched on after homing
	BED_MESH_CALIBRATE
	SAVE_CONFIG
	M140 S0
	M104 S0

[gcode_macro LED_OFF]
gcode: SET_PIN PIN=LED_pin VALUE=0

[gcode_macro LED_ON]
gcode: SET_PIN PIN=LED_pin VALUE=1

[gcode_macro START_PRINT]
gcode:
	BED_TEMP={material_bed_temperature_layer_0} 
	#EXTRUDER_TEMP={material_print_temperature_layer_0}
	HOTEND_TEMP={material_print_temperature_layer_0}
	#{% set BED_TEMP = params.BED_TEMP|default(60)|float %} 
	#{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
	{% set toolTemp = params.HOTEND_TEMP|int %}
	{% set bedTemp = params.BED_TEMP|int %}
	M140 S{bedTemp}					# set Bed temp to target
	M104 S150							# hotend temperature for homing
	M82 								#absolute extrusion mode
	
	#SET_GCODE_VARIABLE MACRO=<macro_name> VARIABLE=<name> VALUE=<value>
	M220 S100 							#Reset Feedrate
	M221 S100 							#Reset Flowrate

	{% if printer.homed_axes != 'XYZ' %}
		{% if bedTemp >= 50 %}
			TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=50	# wait for bed to be over 50
		{% endif %}
		TEMPERATURE_WAIT SENSOR=extruder MINIMUM=140
		M104 S0							# extruder heater off
		G28								# home all axes
	{% endif %}
	G90									# absolute positioning

	M104 S{toolTemp -70} 					#{ params.hotend_temp - 70 }
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bedTemp - 10}

	# Set temperature and move to edge of bed to avoid drooping onto it
	G0 Z20
	G0 X0 Y0
	M104 S{toolTemp}						# wait for Hotend Temp
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={toolTemp - 1}
	
	# And we can now draw our purge line
	SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=1000 ACCEL_TO_DECEL=500 SQUARE_CORNER_VELOCITY=5
	G92 E0 								#Reset Extruder
	G1 Z2.0 F3000 							#Move Z Axis up
	G1 X0 Y20 Z0.28						#Move to start position
	G1 X0 Y200.0 Z0.28 E15   				#Draw the first line
	G1 X0 Y200.0 Z0.28 						#Move to side a little
	G1 X0.5 Y20 Z0.28 E30 					#Draw the second line
	G92 E0 								#Reset Extruder
	G1 Z2.0 F3000 							#Move Z Axis up
	#SET_VELOCITY_LIMIT VELOCITY=200 ACCEL=5000 ACCEL_TO_DECEL=2500 SQUARE_CORNER_VELOCITY=75	#speedBenchy settings

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

#[delayed_gcode macros_initialize]
#initial_duration: 1

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh CR-10 Smart]
#*# version = 1
#*# points =
#*# 	0.014000, 0.003500, -0.053000, -0.027500, 0.009500, -0.010500
#*# 	0.015500, 0.039000, -0.014000, -0.005000, 0.018000, -0.047500
#*# 	-0.036500, 0.004000, -0.067000, -0.045000, -0.026500, -0.096500
#*# 	-0.057500, -0.004500, -0.048500, -0.042000, -0.011500, -0.075500
#*# 	-0.009000, 0.003000, -0.054000, -0.048000, -0.002000, -0.041500
#*# 	-0.056500, -0.082000, -0.146500, -0.140000, -0.062500, -0.091500
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 285.0
#*# min_y = 15.0
#*# max_y = 285.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.043500, 0.048500, -0.015500, 0.004000, 0.070000, 0.053000
#*# 	0.054500, 0.080000, 0.020500, 0.020000, 0.066500, 0.011500
#*# 	-0.004000, 0.046000, -0.008500, -0.007500, 0.028000, -0.029000
#*# 	-0.006000, 0.026000, -0.026500, -0.009000, 0.044000, 0.002000
#*# 	0.032500, 0.047000, -0.008000, 0.001500, 0.073500, 0.039000
#*# 	-0.003500, -0.057500, -0.107500, -0.106500, -0.014500, -0.010500
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 285.0
#*# min_y = 15.0
#*# max_y = 285.0

