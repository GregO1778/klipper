# This file contains pin mappings for the Creality CR-10 Smart
# with a CRC-2405V1.2 board (STM32F103RET6).
#
# To use this config, during "make menuconfig" select the STM32F103
# with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication. Enable PA0 GPIO pin on startup.
#
# Flash this firmware on the MCU by copying "out/klipper.bin" to an SD
# card and turning the printer on with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.
#
# The machine itself includes a small router that can run a Klipper
# frontend. You don't need to buy a single-board computer.
#
# See docs/Config_Reference.md for a description of parameters.


[stepper_x]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
endstop_pin: PC4
position_min: -5
position_endstop: -5
position_max: 305
homing_speed: 50

[stepper_y]
step_pin: PB6
dir_pin: PB5
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
endstop_pin: PC5
position_min: -2
position_endstop: -2
position_max: 302
homing_speed: 50

[stepper_z]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PC3
rotation_distance: 8
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_min: -1.5
position_max: 400
homing_speed: 4
second_homing_speed: 1
homing_retract_dist: 2.0

[extruder]
max_extrude_only_distance: 1000.0
step_pin: PC2
dir_pin: !PB9
enable_pin: !PC3
rotation_distance: 30.4768
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB14
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PB1
control: pid
pid_Kp: 14.32
pid_Ki: 0.81
pid_Kd: 63.12
min_temp: 0
max_temp: 275
pressure_advance: 0.78

[filament_switch_sensor runout_sensor]
pause_on_runout: false
runout_gcode: PAUSE
insert_gcode: RESUME
switch_pin: !PA15

[heater_bed]
heater_pin: PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PB0
control: pid
pid_Kp: 72.49
pid_Ki: 0.844
pid_Kd: 1542.189
min_temp: 0
max_temp: 120

[heater_fan hotend_fan]
pin: PC13
heater: extruder
heater_temp: 50.0

[fan]
pin: PB15
kick_start_time: 0.5

[mcu]
#serial: /dev/ttyPrinter
#serial: /dev/ttyUSB0
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[temperature_sensor Board_MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[probe]
pin: PA4
x_offset: 0.0
y_offset: 0.0
z_offset: -0.25
speed: 2.0
lift_speed: 5
samples: 3
samples_tolerance: 0.05
samples_tolerance_retries: 2
activate_gcode: TARE_PROBE
deactivate_gcode: M104 S150

[gcode_macro TARE_PROBE]
gcode:

  SET_PIN PIN=probe_enable VALUE=0
  G4 P250
  SET_PIN PIN=probe_enable VALUE=1
  G4 P250
  {action_respond_info("Probe tared")}

[output_pin probe_enable]
pin: !PA1
value: 1

[safe_z_home]
home_xy_position: 150,150
speed: 50
z_hop: 5
z_hop_speed: 5

[bed_mesh]
speed: 120
horizontal_move_z: 3
mesh_min: 10,10
mesh_max: 290, 290
probe_count: 6,6

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points: 150,150,10  # bed center

[output_pin lights]
pin: PA6
value: 1

# Do not use PB12. PB12 resets the Wifi board.
#[output_pin factory_reset]
#pin: PB12
#value: 0

[static_digital_output daughterboard_communication]
pins: !PA5

# Turns off the printer
[output_pin power]
pin: PA0
value: 1
shutdown_value: 1

# Conservative default values that mimic the behaviour of the
# stock firmware for easy results. It can go faster.
[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 2000
max_accel_to_decel: 1000
square_corner_velocity: 5.0
max_z_velocity: 5
max_z_accel: 100

####Macros####
