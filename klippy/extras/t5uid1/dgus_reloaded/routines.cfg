[t5uid1_routine message_timeout]
trigger: manual
delay: 30
script: {% do set_message("") %}

[t5uid1_routine print_start]
trigger: manual
delay: 0
script: {% do switch_page("print_status") %}

[t5uid1_routine print_end]
trigger: manual
delay: 0
script:
  {% set sound = printer.t5uid1.notification_sound %}
  {% if sound >= 0 %}
    {% do play_sound(sound) %}
  {% endif %}
  {% do switch_page("print_finished") %}

[t5uid1_routine trigger_full_update]
trigger: manual
delay: 0
script: {% do full_update() %}

[t5uid1_routine show_wait_screen]
trigger: manual
delay: 0
script: {% do switch_page("wait") %}

[t5uid1_routine show_probing_screen]
trigger: manual
delay: 0
script: {% do switch_page("leveling_probing") %}

[t5uid1_routine reset_bltouch]
trigger: manual
script:
  {% if printer.t5uid1.has_bltouch %}
    BLTOUCH_DEBUG COMMAND=reset
    BLTOUCH_DEBUG COMMAND=pin_up
  {% endif %}
run_as_gcode: true

[t5uid1_routine __wait_return]
trigger: enter
page: wait
interval: 1
script:
  {% if not is_busy() %}
    {% set sound = get_variable("wait_return_sound", -1) %}
    {% if sound >= 0 and sound <= 255 %}
      {% do set_variable("wait_return_sound", -1) %}
      {% do play_sound(sound) %}
    {% endif %}
    {% set page = get_variable("wait_return", "")|default("home", true) %}
    {% do set_variable("wait_return", "") %}
    {% do switch_page(page) %}
  {% endif %}

[t5uid1_routine __probing_return]
trigger: enter
page: leveling_probing
interval: 1
script:
  {% if not is_busy() %}
    {% set sound = printer.t5uid1.notification_sound %}
    {% if sound >= 0 %}
      {% do play_sound(sound) %}
    {% endif %}
    {% do switch_page("leveling_automatic") %}
  {% endif %}

[t5uid1_routine __boot]
trigger: enter
page: boot
delay: 3
script: {% do switch_page("home") %}

[t5uid1_routine __print_status_pause]
trigger: enter
page: print_status
interval: 5
script: {% do check_paused() %}

[t5uid1_routine __print_adjust_pause]
trigger: enter
page: print_adjust
interval: 5
script: {% do check_paused() %}

[t5uid1_routine __move]
trigger: enter_pre
page: move
script:
  {% if is_busy() %}
    {% do set_message("Busy") %}
    { abort_page_switch() }
  {% else %}
    {% do set_variable("move_steps", printer.t5uid1.constants.step_size_10) %}
  {% endif %}

[t5uid1_routine __leveling_menu]
trigger: enter_pre
page: leveling_menu
script:
  {% if is_busy() %}
    {% do set_message("Busy") %}
    { abort_page_switch() }
  {% elif printer.toolhead.homed_axes == "xyz" %}
    {% set t5uid1 = printer.t5uid1 %}
    {% set x = (t5uid1.limits.x_min + t5uid1.limits.x_max) / 2 %}
    {% set y = (t5uid1.limits.y_min + t5uid1.limits.y_max) / 2 %}
    {% if printer.gcode_move.gcode_position.z < 10 %}
      G1 Z10 F600
    {% endif %}
    G1 X{x} Y{y} F4800
  {% else %}
    { abort_page_switch() }
    {% do set_variable("line1", "") %}
    {% do set_variable("line2", "Homing...") %}
    {% do set_variable("line3", "") %}
    {% do set_variable("line4", "") %}
    {% do set_variable("wait_return", "leveling_menu") %}
    G28
    {% do start_routine("show_wait_screen") %}
  {% endif %}
run_as_gcode: true

[t5uid1_routine __leveling_offset]
trigger: enter_pre
page: leveling_offset
script:
  {% if is_busy() %}
    {% do set_message("Busy") %}
    { abort_page_switch() }
  {% elif printer.toolhead.homed_axes == "xyz" %}
    {% set t5uid1 = printer.t5uid1 %}
    {% set x = (t5uid1.limits.x_min + t5uid1.limits.x_max) / 2 %}
    {% set y = (t5uid1.limits.y_min + t5uid1.limits.y_max) / 2 %}
    {% if printer.gcode_move.gcode_position.z < 5 %}
      G1 Z5 F600
    {% endif %}
    G1 X{x} Y{y} F4800
    G1 Z0.2 F300
  {% else %}
    { abort_page_switch() }
    {% do set_variable("line1", "") %}
    {% do set_variable("line2", "Homing...") %}
    {% do set_variable("line3", "") %}
    {% do set_variable("line4", "") %}
    {% do set_variable("wait_return", "leveling_offset") %}
    G28
    {% do start_routine("show_wait_screen") %}
  {% endif %}
run_as_gcode: true

[t5uid1_routine __leveling_manual]
trigger: enter_pre
page: leveling_manual
script:
  {% if is_busy() %}
    {% do set_message("Busy") %}
    { abort_page_switch() }
  {% elif printer.toolhead.homed_axes != "xyz" %}
    { abort_page_switch() }
    {% do set_variable("line1", "") %}
    {% do set_variable("line2", "Homing...") %}
    {% do set_variable("line3", "") %}
    {% do set_variable("line4", "") %}
    {% do set_variable("wait_return", "leveling_manual") %}
    G28
    {% do start_routine("show_wait_screen") %}
  {% elif 'bed_mesh' in printer %}
    BED_MESH_PROFILE SAVE=t5uid1_mesh_backup
    BED_MESH_CLEAR
  {% endif %}
run_as_gcode: true

[t5uid1_routine __leveling_manual_leave]
trigger: leave
page: leveling_manual
script:
  {% if 'bed_mesh' in printer %}
    BED_MESH_PROFILE LOAD=t5uid1_mesh_backup
    BED_MESH_PROFILE REMOVE=t5uid1_mesh_backup
  {% endif %}
run_as_gcode: true

[t5uid1_routine __leveling_automatic]
trigger: enter_pre
page: leveling_automatic
script:
  {% if is_busy() %}
    {% do set_message("Busy") %}
    { abort_page_switch() }
  {% elif 'bed_mesh' not in printer %}
    {% do set_message("Missing config: bed_mesh") %}
    { abort_page_switch() }
  {% elif 'probe' not in printer %}
    {% do set_message("Missing config: probe") %}
    { abort_page_switch() }
  {% endif %}

[t5uid1_routine __filament]
trigger: enter_pre
page: filament
script:
  {% set t5uid1 = printer.t5uid1 %}
  {% do set_variable("filament_extruder", t5uid1.constants.extruder_current) %}
  {% do set_variable("filament_length", 10) %}

[t5uid1_routine __pid]
trigger: enter_pre
page: pid
script:
  {% set t5uid1 = printer.t5uid1 %}
  {% do set_variable("pid_heater", t5uid1.constants.heater_h0) %}
  {% do set_variable("pid_temp", t5uid1.constants.temp_pla.hotend) %}

[t5uid1_routine __info]
trigger: enter_pre
page: info
script: {% do set_variable("debug_count", 0) %}
