# Klipper configuration to suit Creality CR-10 Smart
#
# In order to gain access to the USB port on the CR-10 Smart,
# you have to open up the printer and connect a Micro USB cable to the
# little breakout board which sits in between the mainboard and WiFi board"
# This file is setup for a direct drive setup (Bondtech LGXLite).
# Rotation distance for the extruder will need adjusting for a stndard extruder (included in this file).
#
# Please ensure you PID autotune your heaters rather than just using these PID values!
# You will also need to substitute your own serial address after sending ls /dev/serial/by-id/* via SSH
#
# This file contains pin mappings for the Creality CR-10 Smart
# with a Creality (Creality3D) CRC-2405V1.2 board (STM32F103RET6).
#
# To use this config, during "make menuconfig" select the STM32F103
# with a "28KiB bootloader" and serial (on USART1 PA10/PA9 via CH3400 to USB)
# communication. Enable PA0 GPIO pin on startup.
#
# Flash this firmware on the MCU by copying "out/klipper.bin" to an SD
# card and turning the printer on with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.
#
# The machine itself includes a small router that can run a Klipper
# frontend. You don't need to buy a single-board computer.
#
# DO NOT COPY THIS FILE WITHOUT CAREFULLY READING AND UPDATING IT
# FIRST. Incorrectly configured parameters may cause damage.
#
# See docs/Config_Reference.md for a description of parameters.
#
# In the "make menuconfig" settings make sure you have the following (Default Baud rate is 250000, change to 115200):
#
# [*] Enable extra low-level configuration options
# Micro-controller Architecture (STMicroelectronics STM32) --->
# Processor model (STM32F103) --->
# [ ] Only 10KiB of RAM (for rare stm32f103x6 variant)
# [ ] Disable SWD at startup (for GigaDevice stm32f103 clones)
# Bootloader offset (28KiB bootloader) --->
# Clock Reference (8 MHz crystal) --->
# Communication interface (Serial (on USART1 PA10/PA9)) --->
# (115200) Baud rate for serial port
# (PA0) GPIO pins to set at micro-controller startup
#
# run "make" to build the firmware
#
# the following is requiered in "printer.cfg" if you are not using this config:
#
# [mcu]
# serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
# baud: 115200
# restart_method: command
#
# For FYSETC-PortableInputShaper (two are required for sling bed printers CR-10 series)
#
# In the "make menuconfig" settings make sure you have the following:
#
# [ ] Enable extra low-level configuration options
# Micro-controller Architecture (Raspberry Pi RP2040)  --->
# Communication interface (USB)  --->
#
# config
# Use PIS.cfg, and add it to your printer.cfg by
# [include PIS.cfg]
#
# how to flash FYSETC-PortableInputShaper
# Click and hold the button
# Connect to to your PC with USB-C cable
# Folder popup, copy the klipper.uf2 to the folder
#
# Attention
# Make sure you flash PIS the same Klipper version as your machine. I recommend you update Klipper to latest version.
#
# EEPROM IIC BL24CXX on I2C-0
# IIC_EEPROM_SDA                  PA11
# IIC_EEPROM_SCL                  PA12
# EEPROM SIZE              0x800  2K (24C16)
# BOARD_NO_NATIVE_USB
# PB4 (Z_STEP_PIN) from JTAG NRST role
# PB4 (Y_ENABLE_PIN) from JTAG NRST role
# SD_DETECT_PIN                       PC7
# SD_DETECT_PIN                       PC7
# SDCARD_CONNECTION                ONBOARD
# ON_BOARD_SPI_DEVICE                    1
# ONBOARD_SD_CS_PIN                   PC12  // SDSS
# SDIO_SUPPORT                              // Extra added by Creality
# NO_SD_HOST_DRIVE                          // This board's SD is only seen by the printer
# SDIO_CLOCK                       6000000  // In original source code overridden by Creality in sdio.h
# MOTOR_CIRCUIT_PIN                   PA1
# MOTOR_PROTECT_PIN                   PC0
# 
# pi@raspberrypi:~ $ ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
# Fitted shaper 'zv' frequency = 95.2 Hz (vibrations = 39.5%, smoothing ~= 0.023)
# To avoid too much smoothing with 'zv', suggested max_accel <= 35300 mm/sec^2
# Fitted shaper 'mzv' frequency = 57.4 Hz (vibrations = 13.9%, smoothing ~= 0.062)
# To avoid too much smoothing with 'mzv', suggested max_accel <= 9700 mm/sec^2
# Fitted shaper 'ei' frequency = 81.0 Hz (vibrations = 17.0%, smoothing ~= 0.049)
# To avoid too much smoothing with 'ei', suggested max_accel <= 12200 mm/sec^2
# Fitted shaper '2hump_ei' frequency = 71.8 Hz (vibrations = 6.2%, smoothing ~= 0.105)
# To avoid too much smoothing with '2hump_ei', suggested max_accel <= 5700 mm/sec^2
# Fitted shaper '3hump_ei' frequency = 67.4 Hz (vibrations = 1.7%, smoothing ~= 0.180)
# To avoid too much smoothing with '3hump_ei', suggested max_accel <= 3300 mm/sec^2
# Recommended shaper is 3hump_ei @ 67.4 Hz
# 
# pi@raspberrypi:~ $ ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png
# Fitted shaper 'zv' frequency = 29.6 Hz (vibrations = 14.6%, smoothing ~= 0.176)
# To avoid too much smoothing with 'zv', suggested max_accel <= 3200 mm/sec^2
# Fitted shaper 'mzv' frequency = 25.6 Hz (vibrations = 4.3%, smoothing ~= 0.311)
# To avoid too much smoothing with 'mzv', suggested max_accel <= 1900 mm/sec^2
# Fitted shaper 'ei' frequency = 29.0 Hz (vibrations = 1.2%, smoothing ~= 0.383)
# To avoid too much smoothing with 'ei', suggested max_accel <= 1500 mm/sec^2
# Fitted shaper '2hump_ei' frequency = 39.0 Hz (vibrations = 1.8%, smoothing ~= 0.355)
# To avoid too much smoothing with '2hump_ei', suggested max_accel <= 1500 mm/sec^2
# Fitted shaper '3hump_ei' frequency = 48.0 Hz (vibrations = 1.9%, smoothing ~= 0.356)
# To avoid too much smoothing with '3hump_ei', suggested max_accel <= 1500 mm/sec^2
# Recommended shaper is ei @ 29.0 Hz

############################
#      Include Configs
############################
### Mainsail config ###
#[include mainsail.cfg]
### Fluidd config ###
#[include client.cfg]
### Macros ###
#[include client_macros.cfg]
#[include macros/*.cfg]
### Accelerometer Confi ###
#[include PIS.cfg]
### Variables ###
#[save_variables]
#filename: ~/variables.cfg
### Timelaps ###
#[include timelapse.cfg]

############################
#            MCU
############################
# Please change the serial to the value of your installation
[mcu]
# Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
#serial: /dev/serial/by-id/xxxx
#serial: /dev/ttyPrinter
#serial: /dev/ttyUSB0
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
baud: 115200
#canbus_uuid:
#canbus_interface:
restart_method: command

############################
#    Y-Accelerometer MCU
############################
##[mcu PISY]
# Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
#serial: /dev/serial/by-id/xxxx
#serial: /tmp/klipper_host_mcu
#serial: /dev/ttyACM0
#serial: usb-Arduino_RaspberryPi_Pico_C17861E629B07B27-if00
##serial: /dev/serial/by-id/usb-Klipper_rp2040_E66178C1277BB029-if00
#baud: 115200
#canbus_uuid:
#canbus_interface:
##restart_method: command

############################
#    X-Accelerometer MCU
############################
##[mcu PISX]
# Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
#serial: /dev/serial/by-id/xxxx
#serial: /tmp/klipper_host_mcu
#serial: /dev/ttyACM1
#serial: usb-Arduino_RaspberryPi_Pico_C17861E628A63C27-if00
##serial: /dev/serial/by-id/usb-Klipper_rp2040_E66178C1273CA628-if00
#baud: 115200
#canbus_uuid:
#canbus_interface:
##restart_method: command

############################
#          Printer
############################
# Conservative default values that mimic the behaviour of the
# stock firmware for easy results. It can go faster.
[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 1400
max_accel_to_decel: 700
square_corner_velocity: 5.0
max_z_velocity: 5
max_z_accel: 100

############################
#        x steppers
############################
[stepper_x]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
#gear_ratio:
#step_pulse_duration:
endstop_pin: PC4
position_min: -5
position_endstop: -5
position_max: 305
homing_speed: 50
homing_retract_dist: 5
homing_retract_speed: 25                # reduced to prevent frame shock
second_homing_speed: 10                 # reduced to get better accuracy (not critical)
#homing_positive_dir:

############################
#        y steppers
############################
[stepper_y]
step_pin: PB6
dir_pin: PB5
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
#gear_ratio:
#step_pulse_duration:
endstop_pin: PC5
position_min: -2
position_endstop: -2
position_max: 302
homing_speed: 50
homing_retract_dist: 5
homing_retract_speed: 25                # reduced to prevent frame shock
second_homing_speed: 10                 # reduced to get better accuracy (not critical)
#homing_positive_dir:

############################
#        z steppers 1
############################
[stepper_z]
#[stepper_z1]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PC3
rotation_distance: 8
microsteps: 16
full_steps_per_rotation: 200
#gear_ratio:
#step_pulse_duration:
endstop_pin: probe:z_virtual_endstop
position_min: -2.0
#position_endstop: -2
position_max: 400
homing_speed: 5
homing_retract_dist: 2.0
homing_retract_speed: 25
second_homing_speed: 1
#homing_positive_dir:

############################
#        z steppers 2
############################
#[stepper_z2]
#step_pin: PB4
#dir_pin: !PB3
#enable_pin: !PC3
#rotation_distance: 8
#microsteps: 16
#full_steps_per_rotation: 200
#gear_ratio:
#step_pulse_duration:
#endstop_pin: probe:z_virtual_endstop
#position_min: -2.0
#position_endstop: -2
#position_max: 400
#homing_speed: 5
#homing_retract_dist: 2.0
#homing_retract_speed: 25
#second_homing_speed: 1
#homing_positive_dir:

############################
#         extruder
############################
# Calibration.
# Measure 120mm, then extrude 100mm
# G1 E100 F100
# step_distance = old_e_steps * ((120 - distance_to_mark) / 100)
# Update step_distance below and FIRMWARE_RESTART
# pressure asdvance should be callibrated for your setup
[extruder]
step_pin: PC2
enable_pin: !PC3
dir_pin: !PB9
microsteps: 16
# Creality CR-10 Smart Stock Extruder
#rotation_distance: 30.4768
# Creality Spirit Extruder
#rotation_distance: 7.640
# Bondtech LGX Extruder
#rotation_distance: 8
# Bondtech LGX Lite Extruder
#stepper motor is a 1.8 degrees motor hence 200 as full steps per rotation;
#microsteps are set to 16;
#e-steps value recommended for the LGX® Lite is 562.
#rotation_distance = 200 * 16 / 562
rotation_distance = 5.7
full_steps_per_rotation: 200
#gear_ratio:
nozzle_diameter: 0.400
filament_diameter: 1.750
#max_extrude_cross_section:
#instantaneous_corner_velocity: 1.000
max_extrude_only_distance: 100.0
max_extrude_only_velocity: 70.0
max_extrude_only_accel: 1000.0
pressure_advance = 0.141
pressure_advance_smooth_time: 0.06125

############################
#      extruder Heater
############################
heater_pin: PB14
#max_power: 1.0
sensor_type: EPCOS 100K B57560G104F    #default thermistor
sensor_pin: PB1
#pullup_resistor: 4700
#smooth_time: 1.0
control: pid
# Octoprint Tune Heater Name "extruder"
# Creality Spirit Hotend
#pid_Kp: 22.865
#pid_Ki: 1.292
#pid_Kd: 101.178
# CR-10 Smart Stock Hotend
# Stock hardware tuned with 150 degree Celsius target
#pid_Kp: 14.32
#pid_Ki: 0.81
#pid_Kd: 63.12
# CR-10 Smart Microswiss Hotend
# Tuned for Microswiss hardware with 235 degree Celsius target
pid_kp = 25.645
pid_ki = 1.500
pid_kd = 109.634
#pwm_cycle_time: 0.100
#min_extrude_temp: 170
min_temp: 0
max_temp: 320

############################
#        Bed heaters
############################
[heater_bed]
heater_pin: PB13
sensor_type: EPCOS 100K B57560G104F    #default thermistor
sensor_pin: PB0
control: pid
# Octoprint Tune Heater Name "heater_bed"
# CR-10 Smart Stock Bed
# Stock hardware tunring with 50 degree Celsius target
#pid_Kp: 79.49
#pid_Ki: 1.17
#pid_Kd: 1349.52
# CR-10 Smart Stock Bed
# Tuned for stock hardware with 100 degree Celsius target
pid_kp = 76.424
pid_ki = 1.150
pid_kd = 1269.596
#pwm_cycle_time: 0.100
#min_extrude_temp: 170
min_temp: 0
max_temp: 150

############################
#        Bed mesh
############################
# A 5x5 bed mesh must be choosen to have a point in the center of the bed
# that uses the middle mesh point, which is also the safe z home, for reference
# lagrange is the default algorithm
[bed_mesh]
speed: 100
horizontal_move_z: 5
mesh_min: 15,15
mesh_max: 285, 285
probe_count: 6,6
fade_start: 1
fade_end: 10
#fade_target:
split_delta_z: .025
move_check_distance: 5.0
mesh_pps: 2, 2
algorithm: bicubic
bicubic_tension: .2
#relative_reference_index:
#faulty_region_1_min:
#faulty_region_1_max:

############################
#        Bed tilt
############################
#[bed_tilt]
#x_adjust: 0
#y_adjust: 0
#z_adjust: 0
#points:
#speed: 50
#horizontal_move_z: 5

############################
#        Bed screws
############################
# This is only valid if the "Bed Screw" mod has been performed
[bed_screws]
screw1: 25,30
screw1_name: front left screw
#screw1_fine_adjust:
screw2: 275,30
screw2_name: front right screw
#screw2_fine_adjust:
screw3: 275,270
screw3_name: rear right screw
#screw3_fine_adjust:
screw4: 25,270
screw4_name: rear left screw
#screw4_fine_adjust:
horizontal_move_z: 10.0
# use the Creality supplied 0.2mm feeler gauge for manual adjustment to avoid bed damage
probe_height: 0.2
speed: 50
probe_speed: 2

############################
#        Screw tilt
############################
[screws_tilt_adjust]
screw1: 25, 30
screw1_name: front left screw
screw2: 275, 30
screw2_name: front right screw
screw3: 275, 270
screw3_name: rear right screw
screw4: 25, 270
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.0
screw_thread: CW-M4

############################
#          Z tilt
############################
#[z_tilt]
#z_positions:
#points:
#speed: 50
#horizontal_move_z: 5
#retries: 0
#retry_tolerance: 0

############################
#         Quad Z
############################
#[quad_gantry_level]
#gantry_corners:
#points:
#speed: 50
#horizontal_move_z: 5
#max_adjust: 4
#retries: 0
#retry_tolerance: 0

############################
#          Skew
############################
#[skew_correction]

############################
#        z home
############################
[safe_z_home]
home_xy_position: 150,150
speed: 50
z_hop: 10
z_hop_speed: 5
#move_to_previous: False

############################
#      Override home
############################
#[homing_override]
#gcode:
#axes: xyz
#set_position_x:
#set_position_y:
#set_position_z:

############################
#   Endstop adjustment x
############################
#[endstop_phase stepper_x]
#endstop_accuracy:
#trigger_phase:
#endstop_align_zero: False

############################
#   Endstop adjustment y
############################
#[endstop_phase stepper_y]
#endstop_accuracy:
#trigger_phase:
#endstop_align_zero: False

############################
#   Endstop adjustment z
############################
#[endstop_phase stepper_z]
#endstop_accuracy:
#trigger_phase:
#endstop_align_zero: False

############################
#      idle timeout
############################
# set to 10 minutes so the Heat_Soak macro doesn't timeout
[idle_timeout]
timeout: 600

############################
#      File directory
############################
[virtual_sdcard]
path: ~/gcode_files
#on_error_gcode:

############################
#      File looping
############################
#[sdcard_loop]

############################
#        Force Move
############################
# This allows for moving of the head or bed without disabeling steppers
[force_move]
enable_force_move: True

############################
#      pause / resume
############################
[pause_resume]
#recover_velocity: 50.0

############################
#        Retraction
############################
[firmware_retraction]
#retract_length: 0
#retract_speed: 20
#unretract_extra_length: 0
#unretract_speed: 10

############################
#           Arc
############################
[gcode_arcs]
#resolution: 1.0

############################
#         Responce
############################
[respond]
default_type: echo
#default_prefix: echo:

############################
#       Object cancel
############################
[exclude_object]

############################
#  Resonance compensation
############################
[input_shaper]
# frequency for the X mark of the test model
#shaper_freq_x: 43.32
#shaper_freq_x: 58.48
#shaper_freq_x: 67.4
# frequency for the Y mark of the test model
#shaper_freq_y: 58.48
#shaper_freq_y: 43.32
#shaper_freq_y: 29.0
#shaper_type: ei
#shaper_type_x: ei
#shaper_type_x: 3hump_ei
#shaper_type_y: ei
#shaper_type_y: ei
#damping_ratio_x: 0.1
#damping_ratio_y: 0.1

############################
#    Y-Accelerometer chip
############################
##[adxl345 PISY]
#cs_pin: rpi:None
##cs_pin: PISY:gpio13
#spi_speed: 5000000
#spi_bus: spi1a
##spi_software_sclk_pin: PISY:gpio10
##spi_software_mosi_pin: PISY:gpio11
##spi_software_miso_pin: PISY:gpio12
##axes_map: x,-z,y
#rate: 3200

############################
#    X-Accelerometer chip
############################
##[adxl345 PISX]
#cs_pin: rpi:None
##cs_pin: PISX:gpio13
#spi_speed: 5000000
#spi_bus: spi1a
##spi_software_sclk_pin: PISX:gpio10
##spi_software_mosi_pin: PISX:gpio11
##spi_software_miso_pin: PISX:gpio12
##axes_map: x,-z,y
#rate: 3200

############################
#    Resonance tester
############################
##[resonance_tester]
##probe_points: 150,150,10
#accel_chip: adxl345
##accel_chip_y: adxl345 PISY
##accel_chip_x: adxl345 PISX
#max_smoothing:
#min_freq: 5
#max_freq: 133.33
#accel_per_hz: 75
#hz_per_sec: 1

############################
#    MCU / pin alias
############################
#[board_pins my_aliases]
#mcu: mcu
#aliases:
#aliases_<name>:

############################
#      Duplicate pins
############################
[duplicate_pin_override]
pins: PA5

############################
#         ABL Prob
############################
# Before printing the PROBE_CALIBRATE command needs to be issued
# to run the probe calibration procedure, described at
# docs/Probe_Calibrate.md, to find the correct z_offset.
[probe]
pin: PA4
#deactivate_on_each_sample: True
x_offset: 0.0
y_offset: 0.0
#z_offset = -0.206
z_offset: -0.10
#z_offset: -0.05				
#speed: 2.0
speed: 1.0
samples: 5
#sample_retract_dist: 2.0
lift_speed: 5
samples_result: average
#samples_result: median
samples_tolerance: 0.05
samples_tolerance_retries: 2
activate_gcode:
    #ENABLE_PROBE
    TARE_PROBE
deactivate_gcode:
#    M104 S150
    #DISABLE_PROBE
    #NOTARE_PROBE

############################
#   bl touch / cr touch
############################
# For CR-10s Pro or CR-10 Smart Pro
#[bltouch]
#sensor_pin: ^PC15
#control_pin: PC14
#pin_move_time: 0.680
#stow_on_each_sample: false
#probe_with_touch_mode: true
#pin_up_reports_not_triggered: True
#pin_up_touch_mode_reports_triggered: True
#set_output_mode:
#x_offset: -29
#y_offset: -42
#z_offset: 2.80
#speed:10
#lift_speed:
#samples:1
#sample_retract_dist:
#samples_result:average
#samples_tolerance:
#samples_tolerance_retries:

############################
#        Prob tare
############################
[output_pin probe_tare]
pin: !PA5
value: 1

############################
#        Prob enable
############################
[output_pin probe_enable]
pin: PB2            # Optoswitch to Enable Z Probe
value: 1

############################
#   Heater error checking
############################
#[verify_heater heater_config_name]
#max_error: 120
#check_gain_time:
#hysteresis: 5
#heating_gain: 2

############################
#       Disable heater
############################
#[homing_heaters]
#steppers:
#heaters:

############################
#       Temp sensor
############################
#[thermistor my_thermistor]
#temperature1:
#resistance1:
#temperature2:
#resistance2:
#temperature3:
#resistance3:
#beta:

############################
#     Board Temp sensor
############################
[temperature_sensor Board_MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

############################
#       Heater fan
############################
[heater_fan hotend_fan]
pin: PC13
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0

############################
#       Stepper fan
############################
#[controller_fan my_controller_fan]
#pin:
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#fan_speed: 1.0
#idle_timeout:
#idle_speed:
#heater:
#stepper:

############################
#       Temp fan
############################
#[temperature_fan my_temp_fan]
#pin:
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#sensor_type:
#sensor_pin:
#control:
#max_delta:
#min_temp:
#max_temp:
#pid_Kp:
#pid_Ki:
#pid_Kd:
#pid_deriv_time: 2.0
#target_temp: 40.0
#max_speed: 1.0
#min_speed: 0.3
#gcode_id:

############################
#       MCU fan
############################
[fan]
pin: PB15
#max_power: 1.0
#shutdown_speed: 0
#cycle_time: 0.010
#hardware_pwm: False
kick_start_time: 0.5
#off_below: 0.0
#tachometer_pin:
#tachometer_ppr: 2
#tachometer_poll_interval: 0.0015
#enable_pin:

############################
#        LED lights
############################
[output_pin LED_pin]
pin: PA6
#pwm: False
#static_value:
value: 0
#shutdown_value:
#maximum_mcu_duration:
#cycle_time: 0.100
#hardware_pwm: False
#scale:

############################
#      Power control
############################
# Turns off the printer
[output_pin ps_on]
pin: PA0
value: 1
shutdown_value: 1

############################
#       Factory Reset
############################
# Do not use PB12. PB12 resets the Wifi board.
# Halt and Catch Fire.
# This is connected to the Wifi Boards Reset Pin.
# If you enable that, the Wifi Board will go down and you cannot disable it.
# This will lead to the pin being hold and do a factory reset on the wifi board.
# If you are using the WiFi board for klipper,
# you will have to connect to the KlipperWrt Wifi and configure everything again.
#[output_pin factory_reset]
#pin: PB12
#value: 0

############################
#        Static pins
############################
[static_digital_output daughterboard_communication]
pins: !PA5

############################
#        Muli pins
############################
#[multi_pin my_multi_pin]
#pins:

############################
#      Driver Config
############################
#[tmc2208 stepper_ ]
#[tmc2209 stepper_ ]
#uart_pin:
#tx_pin:
#select_pins:
#interpolate: True
#run_current:
#hold_current:
#sense_resistor: 0.110
#stealthchop_threshold: 0
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 5
#driver_PWM_AUTOGRAD: True
#driver_PWM_AUTOSCALE: True
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36

############################
#      Display
############################
#[display]
#lcd_type:
#display_group:
#menu_timeout:
#menu_root:
#menu_reverse_navigation:
#encoder_pins:#encoder_steps_per_detent:
#click_pin:
#back_pin:
#up_pin:
#down_pin:
#kill_pin:
#analog_pullup_resistor: 4700
#analog_range_click_pin:
#analog_range_back_pin:
#analog_range_up_pin:
#analog_range_down_pin:
#analog_range_kill_pin:
[t5uid1]
#PA2: LCD Tx
#PA3: LCD Rx
#Settings used for the CR-10 Smart
firmware: dgus_reloaded
update_interval: 1
machine_name: CR-10 Smart
volume: 40
brightness: 50
#x_min_inset: 26.0                       # 25mm inset from X=0
#x_max_inset: 41.0                       # 25mm inset from X=300
#y_min_inset: 37.0                       # 30mm inset from Y=0
#y_max_inset: 36.0                       # 30mm inset from Y=300
#z_min: 0                                # avoid accidental bed collisions
#z_max: 350                              # additional margin for LCD commanded moves

############################
#      Display status
############################
[display_status]

############################
#  Filament Runout sensor
############################
[filament_switch_sensor runout_sensor]
#pause_on_runout: false
pause_on_runout: true
switch_pin: ^!PA7
runout_gcode: PAUSE
insert_gcode: RESUME

############################
#         MACROS
############################

[gcode_arcs]                            # allow use of ArcWelder
resolution: 0.5

[gcode_macro G27]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}

  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G27_state
    G91
    G1 Z{z}
    G90
    G1 X{x} Y{y} F3000
    RESTORE_GCODE_STATE NAME=G27_state MOVE=0
  {% endif %}

[gcode_macro G29]
gcode:
  {% set t = params.T|default(0)|float %}

  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G29_state
    G90
    G1 Z10 F240
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{params.S}
    {% endif %}
    G90
    G1 Z10 F240
    G1 X150 Y155 F6000
    RESTORE_GCODE_STATE NAME=G29_state MOVE=0
  {% endif %}
  
[gcode_macro CrealityG29]
gcode:
  G28
  bed_mesh_calibrate
  G1 X0 Y0 Z10 F4200
  # save_config

[gcode_macro INITIALIZE_VARIABLE]
gcode:
  {% if 'VARIABLE' not in params %}
    {action_respond_info("Missing VARIABLE parameter")}
  {% elif 'VALUE' not in params %}
    {action_respond_info("Missing VALUE parameter")}
  {% else %}
    {% set svv = printer.save_variables.variables %}
    {% if params.VARIABLE not in svv %}
      {% set escaped = params.VALUE|replace("\"", "\\\"") %}
      SAVE_VARIABLE VARIABLE={params.VARIABLE} VALUE="{escaped}"
    {% endif %}
  {% endif %}

[gcode_macro LAZY_HOME]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[gcode_macro M81]
gcode:
    set_pin pin=ps_on value=0
    set_pin pin=fan1 value=0

[gcode_macro M600]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}
  {% set default_e = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
    {% if 'bowden_len' in svv %}
      {% set default_e = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}
  {% set e = params.E|default(default_e)|float %}

  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE_PARK X={x} Y={y} Z={z}
    M702 U{e}
  {% endif %}

[gcode_macro M701]
gcode:
  {% set default_u = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'bowden_len' in svv %}
      {% set default_u = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set i = params.I|default(30)|float %}
  {% set i_f = params.IF|default(180)|float %}
  {% set u = params.U|default(default_u)|float %}
  {% set u_f = params.UF|default(360)|float %}
  {% set p = params.P|default(30)|float %}
  {% set p_f = params.PF|default(180)|float %}

  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M701_state
    M83
    {% if i > 0.0 %}
      G1 E{i} F{i_f}
    {% endif %}
    {% if u > 0.0 %}
      G1 E{u} F{u_f}
    {% endif %}
    {% if p > 0.0 %}
      G1 E{p} F{p_f}
    {% endif %}
    RESTORE_GCODE_STATE NAME=M701_state MOVE=0
  {% endif %}

[gcode_macro M702]
gcode:
  {% set default_u = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'bowden_len' in svv %}
      {% set default_u = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set p = params.P|default(8)|float %}
  {% set p_f = params.PF|default(180)|float %}
  {% set i = params.I|default(30)|float %}
  {% set i_f = params.IF|default(180)|float %}
  {% set u = params.U|default(default_u)|float %}
  {% set u_f = params.UF|default(360)|float %}

  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M702_state
    M83
    {% if p > 0.0 %}
      G1 E{p} F{p_f}
    {% endif %}
    {% if i > 0.0 %}
      G1 E-{i} F{i_f}
    {% endif %}
    {% if u > 0.0 %}
      G1 E-{u} F{u_f}
    {% endif %}
    RESTORE_GCODE_STATE NAME=M702_state MOVE=0
  {% endif %}

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

[gcode_macro TARE_PROBE]
gcode:
    #M104 S0
    SET_PIN PIN=probe_tare VALUE=0
        G4 P250
    SET_PIN PIN=probe_tare VALUE=1
        G4 P250
    {action_respond_info("Probe tared")}

[gcode_macro NOTARE_PROBE]
gcode:
    #M104 S0
    SET_PIN PIN=probe_tare VALUE=1
        G4 P250
    SET_PIN PIN=probe_tare VALUE=0
        G4 P250
    {action_respond_info("Probe not tared")}

[gcode_macro ENABLE_PROBE]
gcode:
    #M104 S0
    SET_PIN PIN=probe_enable VALUE=0
        G4 P250
    SET_PIN PIN=probe_enable VALUE=1
        G4 P250
    {action_respond_info("Probe enabled")}

[gcode_macro DISABLE_PROBE]
gcode:
    #M104 S0
    SET_PIN PIN=probe_enable VALUE=1
        G4 P250
    SET_PIN PIN=probe_enable VALUE=0
        G4 P250
    {action_respond_info("Probe disabled")}

[gcode_macro NOTIFY]
gcode:
  {% if 'MSG' in params %}
    RESPOND TYPE=command MSG="action:notification {params.MSG}"
  {% endif %}

[gcode_macro RUN_ABL]
gcode:
    M190 S60
    G28
    M104 S0        #switch off heater as it was switched on after homing
    BED_MESH_CALIBRATE
    SAVE_CONFIG
    M140 S0
    M104 S0

[gcode_macro LED_OFF]
gcode: SET_PIN PIN=LED_pin VALUE=0

[gcode_macro LED_ON]
gcode: SET_PIN PIN=LED_pin VALUE=1

[gcode_macro START_PRINT]
gcode:
    #BED_TEMP={material_bed_temperature_layer_0}
  {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    #EXTRUDER_TEMP={material_print_temperature_layer_0}
    #HOTEND_TEMP={material_print_temperature_layer_0}
  {% set HOTEND_TEMP = params.HOTEND_TEMP|default(0)|float %}
    #{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    #{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set toolTemp = params.HOTEND_TEMP|int %}
    {% set bedTemp = params.BED_TEMP|int %}
    M140 S{bedTemp}                    # set Bed temp to target
    M104 S150                            # hotend temperature for homing
    M82                                 #absolute extrusion mode

    #SET_GCODE_VARIABLE MACRO=<macro_name> VARIABLE=<name> VALUE=<value>
    M220 S100                             #Reset Feedrate
    M221 S100                             #Reset Flowrate

    {% if printer.homed_axes != 'XYZ' %}
        {% if bedTemp >= 50 %}
            TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=50    # wait for bed to be over 50
        {% endif %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM=140
        M104 S0                            # extruder heater off
        G28                                # home all axes
    {% endif %}
    G90                                    # absolute positioning

    M104 S{toolTemp -70}                     #{ params.hotend_temp - 70 }
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bedTemp - 10}

    # Set temperature and move to edge of bed to avoid drooping onto it
    G0 Z20
    G0 X0 Y0
    M104 S{toolTemp}                        # wait for Hotend Temp
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={toolTemp - 1}

    # And we can now draw our purge line
    SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=1200 ACCEL_TO_DECEL=600 SQUARE_CORNER_VELOCITY=5
    #M201 X500.00 Y500.00 Z100.00 E5000.00 ;Setup machine max acceleration
  #M203 X500.00 Y500.00 Z10.00 E50.00 ;Setup machine max feedrate
  #M204 P500.00 R1000.00 T500.00 ;Setup Print/Retract/Travel acceleration
  #M205 X8.00 Y8.00 Z0.40 E5.00 ;Setup Jerk
  #M220 S100 ;Reset Feedrate
  #M221 S100 ;Reset Flowrate
  #G28 ;Home
  #G29 ;Auto bed Level
  G92 E0                                 #Reset Extruder
    G1 Z2.0 F3000                             #Move Z Axis up
    G1 X0 Y20 Z0.28                        #Move to start position
    G1 X0 Y200.0 Z0.28 E15                   #Draw the first line
    G1 X0 Y200.0 Z0.28                         #Move to side a little
    G1 X0.5 Y20 Z0.28 E30                     #Draw the second line
    G92 E0                                 #Reset Extruder
    G1 Z2.0 F3000                             #Move Z Axis up
    #SET_VELOCITY_LIMIT VELOCITY=200 ACCEL=5000 ACCEL_TO_DECEL=2500 SQUARE_CORNER_VELOCITY=75    #speedBenchy settings

[gcode_macro END_PRINT]
gcode:
  G91 #Relative positioning
  G1 E-2 F2700 #Retract a bit
  G1 E-2 Z0.2 F2400 #Retract and raise Z
  G1 X5 Y5 F3000 #Wipe out
  G1 Z10 #Raise Z more
  G90 #Absolute positioning
  #G1 X0 Y{machine_depth} ;Present print
  G1 X0 Y300 #Present print
  M106 S0 #Turn-off fan
  M104 S0 #Turn-off hotend
  M140 S0 #Turn-off bed
  M84 X Y E #Disable all steppers but Z

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z4.5 F300
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
    G28 X Y
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    G1 Y{y_park} F2000
    M84
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro PAUSE_PARK]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}
  {% set r = params.R|default(3)|float %}

  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE
    {% if r > 0.0 %}
      RETRACT D={r}
    {% endif %}
    G27 X{x} Y{y} Z{z}
  {% endif %}

[gcode_macro POST_END]
gcode:
  CLEAR_PAUSE
  {% if 't5uid1' in printer %}
    DGUS_PRINT_END
  {% endif %}
  M220 S100
  M221 S100
  M900 K0
  {% if printer.extruder.temperature >= 170 %}
    M83
    G91
    G1 E-2 F2400
    G1 E-2 Z5 F2400
  {% endif %}
  M82
  G90
  G27
  M104 S0
  M140 S0
  M106 S0
  M84 X Y E
  SAVE_IF_SET

[gcode_macro POWEROFF]
gcode:
  RESPOND TYPE=command MSG=action:poweroff

[gcode_macro PRE_START]
gcode:
  {% set wz = params.WZ|default(0.25)|float %}
  {% set wn = params.WN|default(0.4)|float %}
  CLEAR_PAUSE
  M106 S0
  M220 S100
  M221 S100
  M900 K0
  {% if 't5uid1' in printer %}
    DGUS_PRINT_START
  {% endif %}
  G28
  WIPE_LINE Z={wz} N={wn}

[gcode_macro RETRACT]
gcode:
  {% set f = params.F|default(600)|float %}

  {% if 'D' in params %}
    {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
      {action_respond_info("This command cannot be used while printing")}
    {% elif printer.extruder.temperature < 170 %}
      {action_respond_info("Extruder temperature too low")}
    {% else %}
      SAVE_GCODE_STATE NAME=RETRACT_state
      M83
      G1 E-{params.D} F{f}
      RESTORE_GCODE_STATE NAME=RETRACT_state MOVE=0
    {% endif %}
  {% endif %}

[gcode_macro SAVE_AT_END]
variable_save: 0
gcode:
  SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1

[gcode_macro SAVE_IF_SET]
gcode:
  {% if printer["gcode_macro SAVE_AT_END"].save == 1 %}
    SAVE_CONFIG
  {% endif %}

[gcode_macro WIPE_LINE]
gcode:
  {% set z = params.Z|default(0.25)|float %}
  {% set n = params.N|default(0.4)|float %}

  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=WIPE_LINE_state
    M82
    G90
    G92 E0
    G1 X10 Y20 Z5 F3000
    G1 Z{z} F3000
    G1 X10 Y150 F1500 E10.83
    G1 X{ n + 10.0 } F5000
    G1 Y22 F1500 E21.5
    G1 Y20 F5000
    RESTORE_GCODE_STATE NAME=WIPE_LINE_state MOVE=0
  {% endif %}

#[delayed_gcode macros_initialize]
#initial_duration: 0.0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh CR-10 Smart]
#*# version = 1
#*# points =
#*# 	0.014000, 0.003500, -0.053000, -0.027500, 0.009500, -0.010500
#*# 	0.015500, 0.039000, -0.014000, -0.005000, 0.018000, -0.047500
#*# 	-0.036500, 0.004000, -0.067000, -0.045000, -0.026500, -0.096500
#*# 	-0.057500, -0.004500, -0.048500, -0.042000, -0.011500, -0.075500
#*# 	-0.009000, 0.003000, -0.054000, -0.048000, -0.002000, -0.041500
#*# 	-0.056500, -0.082000, -0.146500, -0.140000, -0.062500, -0.091500
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 285.0
#*# min_y = 15.0
#*# max_y = 285.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.187000, 0.230000, 0.217500, 0.215500, 0.228000, 0.230000
#*# 	0.205500, 0.246500, 0.235500, 0.220000, 0.223500, 0.203500
#*# 	0.170000, 0.220500, 0.191500, 0.180500, 0.182000, 0.165500
#*# 	0.153500, 0.205000, 0.202000, 0.203500, 0.214500, 0.203000
#*# 	0.200500, 0.247000, 0.248500, 0.253000, 0.272500, 0.274000
#*# 	0.170500, 0.174000, 0.175000, 0.161000, 0.194500, 0.171000
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 285.0
#*# min_y = 15.0
#*# max_y = 285.0
#*#
#*# [input_shaper]
#*# shaper_type_y = ei
#*# shaper_freq_y = 29.0
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 67.8
